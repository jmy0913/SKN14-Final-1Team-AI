user_input,retrieved_contexts,response,reference
CSV 파일을 이용해서 S/MIME 인증서를 관리하려면 어떤 작업이 필요한가요?,"['except (OSError, IOError) as error:\n    print(f""An error occured while reading the CSV file: {error}"")\n\n\nif __name__ == ""__main__"":\n  insert_cert_from_csv(csv_filename=""xyz"")\n인증서 관리\n이 예에서는 smimeInfo API의 여러 호출을 결합하여 조직의 인증서를 관리하는 방법을 보여줍니다. 사용자의 인증서를 나열하고 기본 인증서가 만료되었거나 설정되지 않은 경우 지정된 파일에서 찾은 인증서를 업로드합니다. 그런 다음 만료일이 가장 늦은 인증서를 기본값으로 설정합니다.\n그런 다음 이전 예와 같이 CSV 파일을 처리하는 함수에서 이를 호출합니다.\n--- 탭: 자바 ---\n.filepath {\n    color: #fff;\n    margin: 6px;\n    max-width: calc(100% - 160px); /* Give at least 160px for the ""View on GitHub"" button. */\n    text-overflow: ellipsis;\n    text-shadow: rgba(0,0,0,0.1) 1px 1px;\n    overflow: hidden;\n  }\n  .github-docwidget-gitinclude-code .prettyprint {\n    margin: 0;\n  }\n  .view-on-github {\n    text-shadow: rgba(12,12,12,0.1) 1px 1px;\n  }\n\n\n\n  \n  gmail/snippets/src/main/java/UpdateSmimeCerts.java\n  \n    \n    GitHub에서 보기 [https://github.com/googleworkspace/java-samples/blob/main/gmail/snippets/src/main/java/UpdateSmimeCerts.java]'
 '--- 탭: Python ---\n이전의 create_smime_info 및 insert_smime_info 호출을 사용하여 CSV 파일에 지정된 인증서를 업로드할 수 있습니다.\n\n\n\n\n\n\n\n\n\n\n\n  \n  \n  \n  \n\n\n\n\n\n\n\n\n\n\n\n  .filepath {\n    color: #fff;\n    margin: 6px;\n    max-width: calc(100% - 160px); /* Give at least 160px for the ""View on GitHub"" button. */\n    text-overflow: ellipsis;\n    text-shadow: rgba(0,0,0,0.1) 1px 1px;\n    overflow: hidden;\n  }\n  .github-docwidget-gitinclude-code .prettyprint {\n    margin: 0;\n  }\n  .view-on-github {\n    text-shadow: rgba(12,12,12,0.1) 1px 1px;\n  }\n\n\n\n  \n  gmail/snippet/smime snippets/insert_cert_from_csv.py\n  \n    \n    GitHub에서 보기 [https://github.com/googleworkspace/python-samples/blob/main/gmail/snippet/smime%20snippets/insert_cert_from_csv.py]\n  \n  \n  \n\n  \n    \n  \n  \n  import csv\n\nimport create_smime_info\nimport insert_smime_info\n\n\ndef insert_cert_from_csv(csv_filename):\n  """"""Upload S/MIME certificates based on the contents of a CSV file.\n  Each row of the CSV file should contain a user ID, path to the certificate,\n  and the certificate password.\n\n  Args:\n    csv_filename: Name of the CSV file.\n  """"""'
 ""이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.\nSwitch to English\n홈 [https://developers.google.com/?hl=ko]\nGoogle Workspace [https://developers.google.com/workspace?hl=ko]\nGmail [https://developers.google.com/workspace/gmail?hl=ko]\n가이드 [https://developers.google.com/workspace/gmail/api/guides?hl=ko]\n의견 보내기\nS/MIME 인증서 관리\nbookmark_border\n이 페이지의 내용\nAPI 액세스 승인\nACL 범위\nAPI 사용\nS/MIME 키 업로드\n사용자의 S/MIME 키 나열\n별칭의 S/MIME 키 가져오기\nS/MIME 키 삭제\n별칭의 기본 S/MIME 키 설정\nGmail S/MIME API는 Google Workspace 도메인의 사용자를 위한 S/MIME 이메일 인증서를 관리할 수 있는 프로그래매틱 액세스를 제공합니다.\n인증서가 작동하려면 관리자가 도메인에 S/MIME을 사용 설정 [https://support.google.com/a/answer/6374496?hl=ko]해야 합니다.\nS/MIME 표준 [https://en.wikipedia.org/wiki/S/MIME]은 공개 키 암호화 및 MIME 데이터 서명에 관한 사양을 제공합니다. 사용자 계정에서 S/MIME 인증서를 구성하면 Gmail에서 다음과 같은 방식으로 해당 인증서를 사용합니다.\nGmail은 사용자의 인증서와 비공개 키를 사용하여 발신 메일에 서명합니다.\nGmail은 사용자의 비공개 키를 사용하여 수신 메일을 복호화합니다.\nGmail은 수신자의 인증서와 공개 키를 사용하여 발신 메일을 암호화합니다.\nGmail은 발신자의 인증서와 공개 키를 사용하여 수신 메일을 확인합니다.\n개별 S/MIME 인증서를 생성하고 API를 사용하여 업로드합니다. 각 S/MIME 인증서는 사용자 이메일 계정의 특정 별칭에 해당합니다. 별칭에는 기본 이메일 주소와 맞춤 '다른 주소에서 메일 보내기' 주소가 포함됩니다. 단일 S/MIME 인증서가 각 별칭의 기본값으로 표시됩니다.\nAPI 액세스 승인""
 '/* Class to demonstrate the use of Gmail Insert Certificate from CSV File */\npublic class InsertCertFromCsv {\n  /**\n   * Upload S/MIME certificates based on the contents of a CSV file.\n   *\n   * <p>Each row of the CSV file should contain a user ID, path to the certificate, and the\n   * certificate password.\n   *\n   * @param csvFilename Name of the CSV file.\n   */\n  public static void insertCertFromCsv(String csvFilename) {\n    try {\n      File csvFile = new File(csvFilename);\n      CSVParser parser =\n          CSVParser.parse(csvFile, java.nio.charset.StandardCharsets.UTF_8, CSVFormat.DEFAULT);\n      for (CSVRecord record : parser) {\n        String userId = record.get(0);\n        String certFilename = record.get(1);\n        String certPassword = record.get(2);\n        SmimeInfo smimeInfo = CreateSmimeInfo.createSmimeInfo(certFilename,\n            certPassword);\n        if (smimeInfo != null) {\n          InsertSmimeInfo.insertSmimeInfo(userId,\n              userId,\n              smimeInfo);\n        } else {\n          System.err.printf(""Unable to read certificate file for userId: %s\\n"", userId);\n        }\n      }\n    } catch (Exception e) {'
 'Args:\n    csv_filename: Name of the CSV file.\n  """"""\n\n  try:\n    with open(csv_filename, ""rb"") as cert:\n      csv_reader = csv.reader(cert, delimiter="","")\n      next(csv_reader, None)  # skip CSV file header\n      for row in csv_reader:\n        user_id = row[0]\n        cert_filename = row[1]\n        cert_password = row[2]\n        smime_info = create_smime_info.create_smime_info(\n            cert_filename=cert_filename, cert_password=cert_password\n        )\n        if smime_info:\n          insert_smime_info.insert_smime_info()\n        else:\n          print(f""Unable to read certificate file for user_id: {user_id}"")\n        return smime_info\n\n  except (OSError, IOError) as error:\n    print(f""An error occured while reading the CSV file: {error}"")'
 'if not send_as_email:\n      send_as_email = user_id\n\n    # pylint: disable=maybe-no-member\n    results = (\n        service.users()\n        .settings()\n        .sendAs()\n        .smimeInfo()\n        .insert(userId=user_id, sendAsEmail=send_as_email, body=smime_info)\n        .execute()\n    )\n    print(f\'Inserted certificate; id: {results[""id""]}\')\n\n  except HttpError as error:\n    print(f""An error occurred: {error}"")\n    results = None\n\n  return results\n\n\nif __name__ == ""__main__"":\n  insert_smime_info()\n여러 사용자의 인증서 관리 예\n조직의 여러 사용자에 대한 인증서를 한 번에 관리해야 할 수 있습니다. 다음 예에서는 일괄 호출 하나로 여러 사용자의 인증서를 관리하는 방법을 보여줍니다.\nCSV 파일에서 인증서 삽입\n사용자 ID와 각 사용자의 인증서 경로가 나열된 CSV 파일이 있다고 가정해 보겠습니다.\n$ cat certificates.csv\nuser1@example.com,/path/to/user1_cert.p12,cert_password_1\nuser2@example.com,/path/to/user2_cert.p12,cert_password_2\nuser3@example.com,/path/to/user3_cert.p12,cert_password_3\n--- 탭: 자바 ---\n이전의 createSmimeInfo 및 insertSmimeInfo 호출을 사용하여 CSV 파일에 지정된 인증서를 업로드할 수 있습니다.'
 '특정 키로 서명된 S/MIME 메일을 수신할 때 Gmail에서는 연결된 사용자에게 전송되는 메일을 암호화할 때 가장 먼 미래의 not_before 유효 기간을 기본값으로 사용하여 키를 연결합니다. 사용자가 이미 소통한 Gmail 사용자가 새 기본 키를 사용하도록 하려면 새 기본 키의 not_before 날짜가 이전 기본 키보다 늦거나 이전 기본 키를 취소해야 합니다.\n샘플 코드\n다음 코드 샘플은 API를 사용하여 사용자가 여러 명인 조직의 S/MIME 인증서를 관리하는 방법을 보여줍니다.\nS/MIME 인증서의 SmimeInfo 리소스 만들기\n다음 코드 샘플은 파일에서 인증서를 읽고, base64url 문자열로 인코딩하고, smimeInfo 리소스의 pkcs12 필드에 할당하는 방법을 보여줍니다.\n--- 탭: 자바 ---\n.filepath {\n    color: #fff;\n    margin: 6px;\n    max-width: calc(100% - 160px); /* Give at least 160px for the ""View on GitHub"" button. */\n    text-overflow: ellipsis;\n    text-shadow: rgba(0,0,0,0.1) 1px 1px;\n    overflow: hidden;\n  }\n  .github-docwidget-gitinclude-code .prettyprint {\n    margin: 0;\n  }\n  .view-on-github {\n    text-shadow: rgba(12,12,12,0.1) 1px 1px;\n  }\n\n\n\n  \n  gmail/snippets/src/main/java/CreateSmimeInfo.java\n  \n    \n    GitHub에서 보기 [https://github.com/googleworkspace/java-samples/blob/main/gmail/snippets/src/main/java/CreateSmimeInfo.java]\n  \n  \n  \n\n  \n    \n  \n  \n  import com.google.api.services.gmail.model.SmimeInfo;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Base64;']","CSV 파일을 이용해서 S/MIME 인증서를 관리하려면 다음과 같은 작업이 필요합니다:

1. **CSV 파일 준비**: CSV 파일에는 각 행에 사용자 ID, 인증서 경로, 인증서 비밀번호가 포함되어 있어야 합니다. 예를 들어:
   ```
   user1@example.com,/path/to/user1_cert.p12,cert_password_1
   user2@example.com,/path/to/user2_cert.p12,cert_password_2
   user3@example.com,/path/to/user3_cert.p12,cert_password_3
   ```

2. **CSV 파일 처리 함수 사용**: Python에서는 `insert_cert_from_csv` 함수를 사용하여 CSV 파일을 처리할 수 있습니다. 이 함수는 CSV 파일을 열고 각 행을 읽어 사용자 ID, 인증서 경로, 인증서 비밀번호를 추출합니다.

3. **S/MIME 인증서 업로드**: 각 행에서 추출한 정보를 사용하여 S/MIME 인증서를 생성하고 업로드합니다. 인증서 생성은 `create_smime_info` 함수를 사용하고, 업로드는 `insert_smime_info` 함수를 사용합니다.

4. **오류 처리**: CSV 파일을 읽는 과정에서 `OSError` 또는 `IOError`가 발생할 수 있으며, 이러한 오류는 파일을 열거나 읽는 과정에서 문제가 발생했을 때 발생합니다. 오류가 발생하면 적절한 메시지를 출력하여 사용자에게 알립니다.

이러한 과정을 통해 여러 사용자의 S/MIME 인증서를 효율적으로 관리할 수 있습니다.","CSV 파일을 처리하는 함수에서는 사용자의 인증서를 나열하고, 기본 인증서가 만료되었거나 설정되지 않은 경우 지정된 파일에서 인증서를 업로드해야 합니다. 그리고 만료일이 가장 늦은 인증서를 기본값으로 설정하는 작업을 해야 합니다."
클라우드 파이어스토어 부하 분산기 어떻게 써야되나요?,"['Cloud Firestore는 비즈니스 요구사항을 충족하기 위해 자동 확장을 제공하는 고도로 분산된 시스템입니다. Cloud Firestore는 시스템에서 수신한 부하에 따라 데이터를 동적으로 분할하고 결합합니다.\n\n부하 기반 분할은 사전 구성 없이 자동으로 이루어집니다. Cloud Firestore 부하 기반 분할 시스템에는 데이터를 모델링할 때 유의해야 하는 다른 문서 데이터베이스와 비교되는 중요한 고유한 특징이 있습니다.\n\nCloud Firestore의 분산된 특성으로 인해 일부 설계 옵션을 변경해야 할 수 있습니다. 특히 기본 복제본이 쓰기 처리량의 병목 현상인 데이터베이스에 최적화된 워크로드의 경우 더욱 그렇습니다.\n\n권장사항\n\n단일 스레드 클라이언트에서 대량의 데이터를 처리하는 워크로드는 병목 현상을 일으킬 수 있습니다. 클라이언트와 서버의 처리량이 유사하게 일치하므로 클라이언트가 단일 스레딩을 사용하여 데이터를 일괄 로드할 수 있습니다.\nCloud Firestore 데이터베이스는 훨씬 더 많은 동시 로드를 처리할 수 있지만 클라이언트가 요청을 동시에 전송하도록 구성해야 합니다.\n\nmongoimport\n\nmongoimport 도구를 사용하면 기본적으로 요청이 순차적으로 이루어집니다.\nCloud Firestore로의 로드 시간을 개선하려면 --numInsertionWorkers 플래그를 사용하여 작업자 수를 설정하세요.\n올바른 설정은 클라이언트 크기에 따라 조정해야 할 수 있지만 일반적으로 최소 32로 시작하는 것이 좋습니다.\n\n비동기 프로그래밍\n\nMongoDB 호환 API를 사용하여 자체 소프트웨어를 개발할 때 다음과 같은 방법으로 동시 로드를 개선할 수 있습니다.\n\n비동기 프레임워크: 비동기 프레임워크를 사용하면 요청을 동시에 처리하고 응답할 수 있습니다. 데이터베이스를 호출할 때 복잡한 풀링이나 큐를 개발할 필요가 없습니다.\n각 요청 흐름은 독립적인 연결을 사용하고 데이터베이스 동시에 호출할 수 있습니다.\n병렬 컴퓨팅 제품 사용: Cloud Run과 같은 서비스를 사용하면 시스템에서 데이터를 처리하는 데 필요한 컴퓨팅 작업자 수를 확장할 수 있습니다.\n\n일시적인 실패\n\nCloud Firestore와 같은 대규모 분산 시스템으로 작업할 때는 네트워크 일시적 오류나 문서의 경합과 같은 일시적인 오류가 발생할 수 있습니다.'
 'Cloud Firestore의 분할은 필요할 때 또는 키 공간이 확장될 때 더 많은 스토리지 서버에 트래픽을 제공하는 작업을 분산하기 위해 자동으로 더 작은 조각으로 분할됩니다. 초과 트래픽을 처리하기 위해 생성된 분할은 트래픽이 사라지더라도 약 24시간 동안 보관됩니다. 따라서 반복적으로 트래픽이 급증하면 분할이 유지되고 필요할 때마다 더 많은 분할이 도입됩니다.  이러한 메커니즘은 트래픽 부하 또는 데이터베이스 크기가 증가하면 Cloud Firestore 데이터베이스가 자동 확장되는 데 도움이 됩니다. 하지만 아래에 설명된 대로 주의해야 할 몇 가지 제한사항이 있습니다.\n\n스토리지와 부하를 분할하는 데 시간이 걸리는 데다가, 트래픽을 너무 빨리 늘리면 서비스가 조정되는 동안 지연 시간 증가 또는 기한 초과 오류(일반적으로 핫스팟이라고 함)가 발생할 수 있습니다. 그러므로 키 범위 전반에 작업을 분산하면서 초당 500개의 작업을 수행하는 데이터베이스의 컬렉션에서 트래픽을 늘리는 것이 좋습니다. 점진적으로 늘린 후에 5분마다 최대 50%씩 트래픽을 늘립니다. 이 프로세스를 500/50/5 규칙이라고 하며, 워크로드에 맞게 최적으로 확장되도록 데이터베이스를 배치합니다.\n핵심사항: 최적의 확장을 위해 500/50/5 규칙에 따라 트래픽을 늘려야 합니다.\n분할은 부하 증가에 따라 자동으로 생성되지만 Cloud Firestore에서는 전용 복제 스토리지 서버 집합을 사용하여 단일 문서를 제공할 때까지만 키 범위를 분할할 수 있습니다. 그 결과, 단일 문서에서 지속적으로 많은 양의 작업을 동시 실행하면 해당 문서에 핫스팟이 발생할 수 있습니다. 단일 문서에서 긴 지연 시간이 지속적으로 발생하는 경우 여러 문서에 걸쳐 데이터를 분할하거나 복제하도록 데이터 모델을 수정해야 합니다.'
 'require ""google/cloud/firestore""\n\nfirestore = Google::Cloud::Firestore.new project_id: project_id\n\nshards_ref = firestore.col_group collection_path\n\ncount = 0\nshards_ref.get do |doc_ref|\ncount += doc_ref[:count]\nend\n\nputs ""Count value is #{count}.""distributed_counters.rb [https://github.com/googleapis/google-cloud-ruby/blob/0539c9e4faccfe857c5cd0999d9f50f1a4404531/google-cloud-firestore/samples/distributed_counters.rb#L60-L74]\n\n제한사항\n\n위 솔루션은 Cloud Firestore에서 공유 카운터를 만드는 확장 가능한 방법이지만 다음과 같은 제한사항에 유의해야 합니다.\n\n샤드 수 - 샤드 수는 분산 카운터의 성능을 좌우합니다. 샤드가 너무 적으면 일부 트랜잭션을 재시도해야 하므로 쓰기 작업이 느려집니다. 샤드가 너무 많으면 읽기가 느려지고 비용이 증가합니다.  더 느린 주기로 업데이트되는 개별 롤업 문서에서 카운터 합계를 유지하고 클라이언트가 이 문서를 읽어 합계를 가져오도록 하면 읽기 비용을 상쇄할 수 있습니다. 하지만 이 경우 클라이언트가 업데이트 직후 모든 샤드를 읽어 합계를 계산하지 않고 롤업 문서가 업데이트될 때까지 기다려야 한다는 단점이 있습니다.\n비용 - 카운터 값을 읽을 때 전체 샤드 하위 컬렉션이 로드되어야 하므로 샤드 수에 따라 비용이 선형으로 증가합니다.\n\n의견 보내기'
 '이러한 변형을 커밋합니다.\n\nCloud Firestore 서비스의 스토리지 클라이언트는 변경할 행의 키를 소유한 분할을 조회합니다. 분할 3이 M1을, 분할 6이 M2~M5를 제공하는 경우를 생각해 보겠습니다. 이러한 모든 분할을 참여자로 포함하는 분산형 트랜잭션이 있습니다. 참여자 분할에는 이전에 데이터를 읽기-쓰기 트랜잭션의 일부로 읽었던 다른 분할도 포함될 수 있습니다.\n\n다음 단계에서는 커밋의 일부로 어떤 일이 일어나는지를 설명합니다.\n\n스토리지 클라이언트가 커밋을 실행합니다. 커밋에는 M1~M5 변형이 포함되어 있습니다.\n분할 3과 6은 이 트랜잭션의 참여자입니다. 분할 3과 같이 참여자 중 하나가 조정자로 선택됩니다. 조정자는 모든 참여자 간에 트랜잭션이 자동으로 커밋 또는 중단되는지 확인합니다.\n\n이러한 분할의 리더 복제본이 참여자와 조정자가 수행한 작업을 담당합니다.\n\n각 참여자와 조정자는 각각의 복제본으로 Paxos 알고리즘을 실행합니다.\n\n리더가 복제본으로 Paxos 알고리즘을 실행합니다. 대부분의 복제본이 리더에 ok to commit 응답을 반환하면 쿼럼이 달성됩니다.\n그런 다음 각 참여자는 준비(2단계 커밋의 첫 번째 단계)가 되면 조정자에게 알립니다. 참여자가 트랜잭션을 커밋할 수 없는 경우에는 전체 트랜잭션이 aborts입니다.\n\n조정자는 자신을 비롯해 모든 참여자가 준비되었음을 확인하면 accept 트랜잭션 결과를 모든 참여자에게 전달합니다(2단계 커밋의 두 번째 단계). 이 단계에서는 각 참여자가 안정적인 스토리지에 커밋 결정을 기록하고 트랜잭션이 커밋됩니다.\n조정자는 Cloud Firestore의 스토리지 클라이언트에 트랜잭션이 커밋되었다고 응답합니다. 동시에 조정자와 모든 참가자가 데이터에 변형을 적용합니다.\n\nCloud Firestore 데이터베이스가 작으면 단일 분할이 M1~M5 변형의 모든 키를 소유하는 경우가 있습니다. 이 경우 트랜잭션에는 참여자가 하나뿐이며 앞서 언급한 2단계 커밋이 필요하지 않으므로 쓰기가 더 빨라집니다.\n\n멀티 리전의 쓰기\n\n멀티 리전 배포에서 여러 리전에 복제본을 분산하면 가용성이 높아지지만 성능 비용이 발생합니다. 서로 다른 리전의 복제본 간 통신에는 왕복 시간이 더 오래 걸립니다. 따라서 Cloud Firestore 작업의 기준 지연 시간은 단일 리전 배포에 비해 약간 더 깁니다.'
 '스토리지와 부하를 분할하는 데 시간이 걸리는 데다가, 트래픽을 너무 빨리 늘리면 서비스가 조정되는 동안 지연 시간 증가 또는 기한 초과 오류(일반적으로 핫스팟이라고 함)가 발생할 수 있습니다. 그러므로 키 범위 전반에 작업을 분산하면서 초당 500개의 작업을 수행하는 데이터베이스의 컬렉션에서 트래픽을 늘리는 것이 좋습니다. 점진적으로 늘린 후에 5분마다 최대 50%씩 트래픽을 늘립니다. 이 프로세스를 500/50/5 규칙이라고 하며, 워크로드에 맞게 최적으로 확장되도록 데이터베이스를 배치합니다.\n핵심사항: 최적의 확장을 위해 500/50/5 규칙에 따라 트래픽을 늘려야 합니다.\n분할은 부하 증가에 따라 자동으로 생성되지만 Firestore에서는 전용 복제 스토리지 서버 집합을 사용하여 단일 문서를 제공할 때까지만 키 범위를 분할할 수 있습니다. 그 결과, 단일 문서에서 지속적으로 많은 양의 작업을 동시 실행하면 해당 문서에 핫스팟이 발생할 수 있습니다. 단일 문서에서 긴 지연 시간이 지속적으로 발생하는 경우 여러 문서에 걸쳐 데이터를 분할하거나 복제하도록 데이터 모델을 수정해야 합니다.']",Cloud Firestore는 데이터베이스에 대한 트래픽을 지원하기 위해 자동으로 확장되므로 별도의 부하 분산기를 실행할 필요가 없습니다. Cloud Firestore는 시스템에서 수신한 부하에 따라 데이터를 동적으로 분할하고 결합하여 부하를 관리합니다. 따라서 사용자가 직접 부하 분산기를 설정하거나 사용할 필요가 없습니다.,Cloud Firestore는 데이터베이스에 대한 트래픽을 지원하기 위해 자동으로 확장되므로 부하 분산기를 실행할 필요가 없습니다.
범위 많으면 동의 어렵나요?,"['Cloud Firestore는 비즈니스 요구사항을 충족하기 위해 자동 확장을 제공하는 고도로 분산된 시스템입니다. Cloud Firestore는 시스템에서 수신한 부하에 따라 데이터를 동적으로 분할하고 결합합니다.\n\n부하 기반 분할은 사전 구성 없이 자동으로 이루어집니다. Cloud Firestore 부하 기반 분할 시스템에는 데이터를 모델링할 때 유의해야 하는 다른 문서 데이터베이스와 비교되는 중요한 고유한 특징이 있습니다.\n\nCloud Firestore의 분산된 특성으로 인해 일부 설계 옵션을 변경해야 할 수 있습니다. 특히 기본 복제본이 쓰기 처리량의 병목 현상인 데이터베이스에 최적화된 워크로드의 경우 더욱 그렇습니다.\n\n권장사항\n\n단일 스레드 클라이언트에서 대량의 데이터를 처리하는 워크로드는 병목 현상을 일으킬 수 있습니다. 클라이언트와 서버의 처리량이 유사하게 일치하므로 클라이언트가 단일 스레딩을 사용하여 데이터를 일괄 로드할 수 있습니다.\nCloud Firestore 데이터베이스는 훨씬 더 많은 동시 로드를 처리할 수 있지만 클라이언트가 요청을 동시에 전송하도록 구성해야 합니다.\n\nmongoimport\n\nmongoimport 도구를 사용하면 기본적으로 요청이 순차적으로 이루어집니다.\nCloud Firestore로의 로드 시간을 개선하려면 --numInsertionWorkers 플래그를 사용하여 작업자 수를 설정하세요.\n올바른 설정은 클라이언트 크기에 따라 조정해야 할 수 있지만 일반적으로 최소 32로 시작하는 것이 좋습니다.\n\n비동기 프로그래밍\n\nMongoDB 호환 API를 사용하여 자체 소프트웨어를 개발할 때 다음과 같은 방법으로 동시 로드를 개선할 수 있습니다.\n\n비동기 프레임워크: 비동기 프레임워크를 사용하면 요청을 동시에 처리하고 응답할 수 있습니다. 데이터베이스를 호출할 때 복잡한 풀링이나 큐를 개발할 필요가 없습니다.\n각 요청 흐름은 독립적인 연결을 사용하고 데이터베이스 동시에 호출할 수 있습니다.\n병렬 컴퓨팅 제품 사용: Cloud Run과 같은 서비스를 사용하면 시스템에서 데이터를 처리하는 데 필요한 컴퓨팅 작업자 수를 확장할 수 있습니다.\n\n일시적인 실패\n\nCloud Firestore와 같은 대규모 분산 시스템으로 작업할 때는 네트워크 일시적 오류나 문서의 경합과 같은 일시적인 오류가 발생할 수 있습니다.'
 'Cloud Firestore의 분할은 필요할 때 또는 키 공간이 확장될 때 더 많은 스토리지 서버에 트래픽을 제공하는 작업을 분산하기 위해 자동으로 더 작은 조각으로 분할됩니다. 초과 트래픽을 처리하기 위해 생성된 분할은 트래픽이 사라지더라도 약 24시간 동안 보관됩니다. 따라서 반복적으로 트래픽이 급증하면 분할이 유지되고 필요할 때마다 더 많은 분할이 도입됩니다.  이러한 메커니즘은 트래픽 부하 또는 데이터베이스 크기가 증가하면 Cloud Firestore 데이터베이스가 자동 확장되는 데 도움이 됩니다. 하지만 아래에 설명된 대로 주의해야 할 몇 가지 제한사항이 있습니다.\n\n스토리지와 부하를 분할하는 데 시간이 걸리는 데다가, 트래픽을 너무 빨리 늘리면 서비스가 조정되는 동안 지연 시간 증가 또는 기한 초과 오류(일반적으로 핫스팟이라고 함)가 발생할 수 있습니다. 그러므로 키 범위 전반에 작업을 분산하면서 초당 500개의 작업을 수행하는 데이터베이스의 컬렉션에서 트래픽을 늘리는 것이 좋습니다. 점진적으로 늘린 후에 5분마다 최대 50%씩 트래픽을 늘립니다. 이 프로세스를 500/50/5 규칙이라고 하며, 워크로드에 맞게 최적으로 확장되도록 데이터베이스를 배치합니다.\n핵심사항: 최적의 확장을 위해 500/50/5 규칙에 따라 트래픽을 늘려야 합니다.\n분할은 부하 증가에 따라 자동으로 생성되지만 Cloud Firestore에서는 전용 복제 스토리지 서버 집합을 사용하여 단일 문서를 제공할 때까지만 키 범위를 분할할 수 있습니다. 그 결과, 단일 문서에서 지속적으로 많은 양의 작업을 동시 실행하면 해당 문서에 핫스팟이 발생할 수 있습니다. 단일 문서에서 긴 지연 시간이 지속적으로 발생하는 경우 여러 문서에 걸쳐 데이터를 분할하거나 복제하도록 데이터 모델을 수정해야 합니다.'
 'require ""google/cloud/firestore""\n\nfirestore = Google::Cloud::Firestore.new project_id: project_id\n\nshards_ref = firestore.col_group collection_path\n\ncount = 0\nshards_ref.get do |doc_ref|\ncount += doc_ref[:count]\nend\n\nputs ""Count value is #{count}.""distributed_counters.rb [https://github.com/googleapis/google-cloud-ruby/blob/0539c9e4faccfe857c5cd0999d9f50f1a4404531/google-cloud-firestore/samples/distributed_counters.rb#L60-L74]\n\n제한사항\n\n위 솔루션은 Cloud Firestore에서 공유 카운터를 만드는 확장 가능한 방법이지만 다음과 같은 제한사항에 유의해야 합니다.\n\n샤드 수 - 샤드 수는 분산 카운터의 성능을 좌우합니다. 샤드가 너무 적으면 일부 트랜잭션을 재시도해야 하므로 쓰기 작업이 느려집니다. 샤드가 너무 많으면 읽기가 느려지고 비용이 증가합니다.  더 느린 주기로 업데이트되는 개별 롤업 문서에서 카운터 합계를 유지하고 클라이언트가 이 문서를 읽어 합계를 가져오도록 하면 읽기 비용을 상쇄할 수 있습니다. 하지만 이 경우 클라이언트가 업데이트 직후 모든 샤드를 읽어 합계를 계산하지 않고 롤업 문서가 업데이트될 때까지 기다려야 한다는 단점이 있습니다.\n비용 - 카운터 값을 읽을 때 전체 샤드 하위 컬렉션이 로드되어야 하므로 샤드 수에 따라 비용이 선형으로 증가합니다.\n\n의견 보내기'
 '이러한 변형을 커밋합니다.\n\nCloud Firestore 서비스의 스토리지 클라이언트는 변경할 행의 키를 소유한 분할을 조회합니다. 분할 3이 M1을, 분할 6이 M2~M5를 제공하는 경우를 생각해 보겠습니다. 이러한 모든 분할을 참여자로 포함하는 분산형 트랜잭션이 있습니다. 참여자 분할에는 이전에 데이터를 읽기-쓰기 트랜잭션의 일부로 읽었던 다른 분할도 포함될 수 있습니다.\n\n다음 단계에서는 커밋의 일부로 어떤 일이 일어나는지를 설명합니다.\n\n스토리지 클라이언트가 커밋을 실행합니다. 커밋에는 M1~M5 변형이 포함되어 있습니다.\n분할 3과 6은 이 트랜잭션의 참여자입니다. 분할 3과 같이 참여자 중 하나가 조정자로 선택됩니다. 조정자는 모든 참여자 간에 트랜잭션이 자동으로 커밋 또는 중단되는지 확인합니다.\n\n이러한 분할의 리더 복제본이 참여자와 조정자가 수행한 작업을 담당합니다.\n\n각 참여자와 조정자는 각각의 복제본으로 Paxos 알고리즘을 실행합니다.\n\n리더가 복제본으로 Paxos 알고리즘을 실행합니다. 대부분의 복제본이 리더에 ok to commit 응답을 반환하면 쿼럼이 달성됩니다.\n그런 다음 각 참여자는 준비(2단계 커밋의 첫 번째 단계)가 되면 조정자에게 알립니다. 참여자가 트랜잭션을 커밋할 수 없는 경우에는 전체 트랜잭션이 aborts입니다.\n\n조정자는 자신을 비롯해 모든 참여자가 준비되었음을 확인하면 accept 트랜잭션 결과를 모든 참여자에게 전달합니다(2단계 커밋의 두 번째 단계). 이 단계에서는 각 참여자가 안정적인 스토리지에 커밋 결정을 기록하고 트랜잭션이 커밋됩니다.\n조정자는 Cloud Firestore의 스토리지 클라이언트에 트랜잭션이 커밋되었다고 응답합니다. 동시에 조정자와 모든 참가자가 데이터에 변형을 적용합니다.\n\nCloud Firestore 데이터베이스가 작으면 단일 분할이 M1~M5 변형의 모든 키를 소유하는 경우가 있습니다. 이 경우 트랜잭션에는 참여자가 하나뿐이며 앞서 언급한 2단계 커밋이 필요하지 않으므로 쓰기가 더 빨라집니다.\n\n멀티 리전의 쓰기\n\n멀티 리전 배포에서 여러 리전에 복제본을 분산하면 가용성이 높아지지만 성능 비용이 발생합니다. 서로 다른 리전의 복제본 간 통신에는 왕복 시간이 더 오래 걸립니다. 따라서 Cloud Firestore 작업의 기준 지연 시간은 단일 리전 배포에 비해 약간 더 깁니다.'
 '스토리지와 부하를 분할하는 데 시간이 걸리는 데다가, 트래픽을 너무 빨리 늘리면 서비스가 조정되는 동안 지연 시간 증가 또는 기한 초과 오류(일반적으로 핫스팟이라고 함)가 발생할 수 있습니다. 그러므로 키 범위 전반에 작업을 분산하면서 초당 500개의 작업을 수행하는 데이터베이스의 컬렉션에서 트래픽을 늘리는 것이 좋습니다. 점진적으로 늘린 후에 5분마다 최대 50%씩 트래픽을 늘립니다. 이 프로세스를 500/50/5 규칙이라고 하며, 워크로드에 맞게 최적으로 확장되도록 데이터베이스를 배치합니다.\n핵심사항: 최적의 확장을 위해 500/50/5 규칙에 따라 트래픽을 늘려야 합니다.\n분할은 부하 증가에 따라 자동으로 생성되지만 Firestore에서는 전용 복제 스토리지 서버 집합을 사용하여 단일 문서를 제공할 때까지만 키 범위를 분할할 수 있습니다. 그 결과, 단일 문서에서 지속적으로 많은 양의 작업을 동시 실행하면 해당 문서에 핫스팟이 발생할 수 있습니다. 단일 문서에서 긴 지연 시간이 지속적으로 발생하는 경우 여러 문서에 걸쳐 데이터를 분할하거나 복제하도록 데이터 모델을 수정해야 합니다.']","""범위가 많으면 동의가 어려운지""에 대해서는 제가 모르는 내용입니다. 일상 질문 혹은 구글 API 관련 질문만 답변드릴 수 있어요.",요청된 범위 수가 많으면 사용자 동의를 얻을 가능성이 낮아질 수 있습니다.
"As a beginner who is not familiar with Google APIs, could you please explain in detail how the Cloud Platform is affected when Google Cloud session control features are enabled, and what specific user actions or applications are impacted by these policies?","['또한 사용자 계정 또는 서비스 계정이 모든 클라이언트에서 보유할 수 있는 총 새로고침 토큰 수에 대한 더 큰 제한도 있습니다. 일반적인 사용자는 이 한도를 초과하지 않지만 구현을 테스트하는 데 사용되는 개발자 계정은 초과할 수 있습니다.\n여러 프로그램, 머신 또는 기기를 승인해야 하는 경우 Google 계정당 승인하는 클라이언트 수를 15개 또는 20개로 제한하는 것이 한 가지 해결 방법입니다. Google Workspace 관리자 [https://support.google.com/a/answer/172176?hl=ko]인 경우 관리 권한이 있는 사용자를 추가로 만들어 일부 클라이언트를 승인할 수 있습니다.\nGoogle Cloud Platform (GCP) 조직의 세션 관리 정책 처리\nGCP 조직의 관리자는 Google Cloud 세션 제어 기능 [https://support.google.com/a/answer/9368756?hl=ko]을 사용하여 사용자가 GCP 리소스에 액세스하는 동안 사용자의 재인증을 자주 요구할 수 있습니다. 이 정책은 Google Cloud Console, Google Cloud SDK [https://cloud.google.com/sdk/gcloud?hl=ko] (gcloud CLI라고도 함), Cloud Platform 범위가 필요한 서드 파티 OAuth 애플리케이션에 대한 액세스에 영향을 미칩니다. 사용자에게 세션 제어 정책이 적용되어 있는 경우 세션 기간이 만료되면 갱신 토큰이 취소된 경우와 마찬가지로 API 호출에 오류가 발생합니다. 호출이 오류 유형 invalid_grant로 실패합니다. error_subtype 필드를 사용하여 취소된 토큰과 세션 제어 정책으로 인한 실패 (예: ""error_subtype"": ""invalid_rapt"")를 구분할 수 있습니다. 세션 기간이 매우 제한적일 수 있으므로 (1시간~24시간) 인증 세션을 다시 시작하여 이 시나리오를 원활하게 처리해야 합니다.\n마찬가지로 서버 간 배포에 사용자 인증 정보를 사용하거나 사용을 장려해서는 안 됩니다. 사용자 사용자 인증 정보가 장기 실행 작업 또는 작업을 위해 서버에 배포되고 고객이 이러한 사용자에게 세션 제어 정책을 적용하는 경우 세션 기간이 만료될 때 사용자를 다시 인증할 방법이 없으므로 서버 애플리케이션이 실패합니다.'
 '--- 탭: bq [https://cloud.google.com/bigquery/docs/control-access-to-resources-iam?hl=ko#bq] ---\nIn the Google Cloud console, activate Cloud Shell.\n    Activate Cloud Shell [https://console.cloud.google.com/?cloudshell=true&hl=ko]\n    \n      At the bottom of the Google Cloud console, a\n      Cloud Shell [https://cloud.google.com/shell/docs/how-cloud-shell-works?hl=ko]\n      session starts and displays a command-line prompt. Cloud Shell is a shell environment\n      with the Google Cloud CLI\n      already installed and with values already set for\n      your current project. It can take a few seconds for the session to initialize.\n    \n    \n  \n\n\n\n\n\n\n\n\n\n\n테이블 또는 뷰에 대한 액세스 권한을 부여하려면 bq add-iam-policy-binding 명령어 [https://cloud.google.com/bigquery/docs/reference/bq-cli-reference?hl=ko#bq_add-iam-policy-binding]를 사용합니다.\n\nbq add-iam-policy-binding --member=MEMBER_TYPE:MEMBER --role=ROLE\n  --table=true RESOURCE\n\n다음을 바꿉니다.\n\n\nMEMBER_TYPE: 구성원 유형(예: user, group, serviceAccount, domain)\nMEMBER: 회원의 이메일 주소 또는 도메인 이름\nROLE: 구성원에게 부여할 역할\nRESOURCE: 정책을 업데이트하려는 테이블 또는 뷰의 이름'
 '--- 탭: bq [https://cloud.google.com/bigquery/docs/control-access-to-resources-iam?hl=ko#bq] ---\nIn the Google Cloud console, activate Cloud Shell.\n    Activate Cloud Shell [https://console.cloud.google.com/?cloudshell=true&hl=ko]\n    \n      At the bottom of the Google Cloud console, a\n      Cloud Shell [https://cloud.google.com/shell/docs/how-cloud-shell-works?hl=ko]\n      session starts and displays a command-line prompt. Cloud Shell is a shell environment\n      with the Google Cloud CLI\n      already installed and with values already set for\n      your current project. It can take a few seconds for the session to initialize.\n    \n    \n  \n\n\n\n\n\n\n\n\n\n\n기존 루틴 정보(액세스 제어 포함)를 JSON 파일에 기록하려면 bq get-iam-policy 명령어 [https://cloud.google.com/bigquery/docs/reference/bq-cli-reference?hl=ko#bq_get-iam-policy]를 사용합니다.\n\nbq get-iam-policy --routine PROJECT_ID:DATASET.ROUTINE > PATH_TO_FILE\n\n다음을 바꿉니다.'
 '--- 탭: bq [https://cloud.google.com/bigquery/docs/control-access-to-resources-iam?hl=ko#bq] ---\nIn the Google Cloud console, activate Cloud Shell.\n    Activate Cloud Shell [https://console.cloud.google.com/?cloudshell=true&hl=ko]\n    \n      At the bottom of the Google Cloud console, a\n      Cloud Shell [https://cloud.google.com/shell/docs/how-cloud-shell-works?hl=ko]\n      session starts and displays a command-line prompt. Cloud Shell is a shell environment\n      with the Google Cloud CLI\n      already installed and with values already set for\n      your current project. It can take a few seconds for the session to initialize.\n    \n    \n  \n\n\n\n\n\n\n\n\n\n\n기존 루틴 정보(액세스 제어 포함)를 JSON 파일에 기록하려면 bq get-iam-policy 명령어 [https://cloud.google.com/bigquery/docs/reference/bq-cli-reference?hl=ko#bq_get-iam-policy]를 사용합니다.\n\nbq get-iam-policy \\\n    PROJECT_ID:DATASET.ROUTINE \\\n    > PATH_TO_FILE\n\n다음을 바꿉니다.\n\n\nPROJECT_ID: 프로젝트 ID\nDATASET: 업데이트하려는 루틴이 포함된 데이터 세트의 이름\nROUTINE: 업데이트할 리소스의 이름\nPATH_TO_FILE: 로컬 머신의 JSON 파일 경로'
 '지역 휴일 [https://support.google.com/googlecloud/answer/6047804?hl=ko]을 제외한 평일 1시간 평일 및 주말 1시간\n높은 수준의 영향 - 서비스에 심각한 문제가 있음\n일반 안정화 버전 [https://developers.google.com/maps/launch-stages?hl=ko]으로 표시된 Google Maps Platform 서비스에만 적용됩니다.\n프로덕션 환경에서 제품 또는 서비스의 성능이 저하되어 사용자가 겪는 오류가 눈에 띄게 증가합니다.\n비즈니스에 미치는 영향이 중간 수준입니다 (예: 수익 손실 위험 또는 생산성 저하).\n심각한 비즈니스 영향을 줄일 수 있는 해결 방법이 있으며 이를 빠르게 구현할 수 있습니다.\n평일 24시간 평일 및 주말 4시간\n중간 수준의 영향 - 서비스에 부분적인 문제가 있음\n문제의 범위 또는 심각도가 제한적입니다.\n사용자에게 눈에 띄는 영향을 주지 않습니다.\n불편함, 비즈니스 프로세스에 대한 사소한 영향 등 비즈니스에 약간의 영향이 있습니다.\n평일 24시간 평일 24시간\n낮은 수준의 영향 - 정상적으로 서비스 사용 가능\n업무적, 기술적 영향이 없거나 거의 없습니다.\n평일 24시간 평일 24시간\n개인 정보 보호 문의\n데이터 개인 정보 보호 및 보호 조치와 관련된 질문은 데이터 개인 정보 보호 문의 양식 [https://support.google.com/cloud/contact/maps_api_privacy?hl=ko]을 사용하여 Google에 문의할 수 있습니다.\n케이스 에스컬레이션\n참고: 케이스 에스컬레이션은 고급 지원 [https://developers.google.com/maps/documentation/datasets/support?hl=ko#enhanced] 구독자만 이용할 수 있습니다.\n케이스가 적절하게 처리되지 않고 있다고 생각되면 케이스를 에스컬레이션할 수 있습니다. 에스컬레이션 관리자가 케이스를 검토하여 제대로 처리되고 있는지 확인합니다. 참고: 에스컬레이션 관리자는 전문 지식을 추가로 제공하거나 비즈니스 요건에 따라 케이스 우선순위를 더욱 효과적으로 조정할 수 있지만 정책이나 서비스 약관에 예외를 부여할 수는 없습니다.'
 '자세한 내용은 기기용 OAuth 2.0 사용 [https://developers.google.com/identity/protocols/oauth2/limited-input-device?hl=ko]을 참고하세요.\n서비스 계정\nPrediction API 및 Google Cloud Storage와 같은 Google API는 사용자 정보에 액세스하지 않고도 애플리케이션을 대신하여 작동할 수 있습니다. 이러한 상황에서는 애플리케이션이 API에 자체 ID를 증명해야 하지만 사용자 동의는 필요하지 않습니다. 마찬가지로 엔터프라이즈 시나리오에서 애플리케이션은 일부 리소스에 대한 위임된 액세스를 요청할 수 있습니다.\n이러한 유형의 서버 간 상호작용에는 개별 최종 사용자가 아닌 애플리케이션에 속한 계정인 서비스 계정이 필요합니다. 애플리케이션이 서비스 계정을 대신하여 Google API를 호출하며 사용자 동의가 필요하지 않습니다. (서비스 계정이 아닌 시나리오에서는 애플리케이션이 최종 사용자를 대신하여 Google API를 호출하며, 사용자 동의가 필요한 경우가 있습니다.)\n참고: 이러한 서비스 계정 시나리오에서는 애플리케이션이 JSON 웹 토큰 (JWT)을 만들고 암호화 서명해야 합니다. 이러한 작업을 실행하는 라이브러리를 사용하는 것이 좋습니다. 토큰 생성 및 서명을 추상화하는 라이브러리를 사용하지 않고 이 코드를 작성하면 애플리케이션의 보안에 심각한 영향을 미치는 오류가 발생할 수 있습니다. 이 시나리오를 지원하는 라이브러리 목록은 서비스 계정 문서 [https://developers.google.com/identity/protocols/oauth2/service-account?hl=ko]를 참고하세요.\nGoogle API Console에서 획득하는 서비스 계정의 사용자 인증 정보에는 고유하게 생성된 이메일 주소, 클라이언트 ID, 하나 이상의 공개/비공개 키 쌍이 포함됩니다. 클라이언트 ID와 하나의 비공개 키를 사용하여 서명된 JWT를 만들고 적절한 형식으로 액세스 토큰 요청을 구성합니다. 그런 다음 애플리케이션에서 토큰 요청을 Google OAuth 2.0 승인 서버로 전송하면 액세스 토큰이 반환됩니다. 애플리케이션은 토큰을 사용하여 Google API에 액세스합니다. 토큰이 만료되면 애플리케이션에서 이 프로세스를 반복합니다.'
 ""지원되는 이벤트 유형 [https://developers.google.com/identity/protocols/risc?hl=ko#supported_event_types]\n앱에서 사용자가 Google을 사용하여 계정에 로그인할 수 있도록 하는 경우 교차 계정 보호 서비스에서 제공하는 보안 이벤트 알림을 수신하고 이에 응답하여 이러한 공유 사용자의 계정 보안을 개선할 수 있습니다.\n이러한 알림은 사용자의 Google 계정에 대한 주요 변경사항을 알려주며, 이는 앱의 계정에도 보안 영향을 미칠 수 있습니다. 예를 들어 사용자의 Google 계정이 도용되면 이메일 계정 복구 또는 싱글 사인온 사용을 통해 앱의 사용자 계정이 손상될 수 있습니다.\n이러한 이벤트의 위험 가능성을 완화할 수 있도록 Google에서는 보안 이벤트 토큰이라는 서비스 객체를 전송합니다. 이러한 토큰은 보안 이벤트의 유형과 발생 시간, 영향을 받는 사용자의 식별자 등 매우 적은 정보만 노출하지만 이를 사용하여 적절한 조치를 취할 수 있습니다. 예를 들어 사용자의 Google 계정이 도용된 경우 해당 사용자의'Google로 로그인'을 일시적으로 사용 중지하고 계정 복구 이메일이 사용자의 Gmail 주소로 전송되지 않도록 할 수 있습니다.\n계정 간 보안은 OpenID Foundation에서 개발한 RISC 표준 [https://openid.net/wg/sse/]을 기반으로 합니다.\n중요: 이 데이터는 Google API 서비스 약관 [https://developers.google.com/terms?hl=ko] 및 추가 RISC 서비스 약관 [https://console.cloud.google.com/tos?id=risc&hl=ko] ('RISC 약관')에 따라 제공됩니다. 이러한 신호는 보안, 사기 방지, 세션 관리 목적으로만 사용할 수 있습니다. RISC 약관을 검토하고 준수하세요. 그렇지 않으면 프로젝트 또는 계정이 정지될 수 있습니다.\n참고: 교차 계정 보호는 현재 Google Workspace (이전 명칭: G Suite) 사용자의 보안 이벤트를 전송하지 않습니다.\n개요\n앱 또는 서비스에서 계정 간 보안을 사용하려면 다음 작업을 완료해야 합니다.\nAPI Console에서 프로젝트를 설정합니다.""
 '승인 시퀀스는 애플리케이션이 브라우저를 Google URL로 리디렉션할 때 시작됩니다. URL에는 요청된 액세스 유형을 나타내는 쿼리 매개변수가 포함됩니다. Google은 사용자 인증, 세션 선택, 사용자 동의를 처리합니다.\n결과는 액세스 토큰이며, 클라이언트는 Google API 요청에 포함하기 전에 이를 검증해야 합니다. 토큰이 만료되면 애플리케이션에서 이 프로세스를 반복합니다.\n자세한 내용은 클라이언트 측 애플리케이션용 OAuth 2.0 사용 [https://developers.google.com/identity/protocols/oauth2/javascript-implicit-flow?hl=ko]을 참고하세요.\n입력이 제한된 기기의 애플리케이션\nGoogle OAuth 2.0 엔드포인트는 게임 콘솔, 비디오 카메라, 프린터와 같은 제한된 입력 기기에서 실행되는 애플리케이션을 지원합니다.\n승인 시퀀스는 애플리케이션이 승인 코드를 위해 Google URL에 웹 서비스 요청을 하는 것으로 시작됩니다. 응답에는 URL과 애플리케이션이 사용자에게 표시하는 코드 등 여러 매개변수가 포함됩니다.\n사용자가 기기에서 URL과 코드를 가져온 다음 입력 기능이 더 풍부한 별도의 기기나 컴퓨터로 전환합니다. 사용자가 브라우저를 실행하고 지정된 URL로 이동하여 로그인하고 코드를 입력합니다.\n한편 애플리케이션은 지정된 간격으로 Google URL을 폴링합니다. 사용자가 액세스를 승인하면 Google 서버의 응답에 액세스 토큰과 갱신 토큰이 포함됩니다. 애플리케이션은 나중에 사용할 수 있도록 갱신 토큰을 저장하고 액세스 토큰을 사용하여 Google API에 액세스해야 합니다. 액세스 토큰이 만료되면 애플리케이션은 갱신 토큰을 사용하여 새 토큰을 가져옵니다.\n자세한 내용은 기기용 OAuth 2.0 사용 [https://developers.google.com/identity/protocols/oauth2/limited-input-device?hl=ko]을 참고하세요.\n서비스 계정'
 '액세스 토큰은 expires_in 값으로 지정된 기간 창 동안 재사용할 수 있습니다.\n중요한 보안 고려사항: 가장 이해하기\n도메인 전체 권한을 위임해도 서비스 계정에 모든 사용자 데이터에 대한 직접 액세스 권한이 부여되지는 않습니다. 대신 API 호출 시 특정 사용자를 가장하도록 승인하는 것입니다.\n사용자를 대신한 액세스: 애플리케이션은 각 API 요청에 대해 가장할 사용자를 지정해야 합니다. 그러면 애플리케이션은 상승된 권한이나 도메인 전체 권한 [https://developers.google.com/identity/protocols/oauth2/service-account?hl=ko#delegatingauthority]이 아닌 해당 특정 사용자의 권한으로 작동합니다.\n권한 제한: 서비스 계정의 액세스는 가장된 사용자의 권한과 관리 콘솔에서 승인한 OAuth 범위라는 두 가지 요소에 의해 제한됩니다. 가장된 사용자가 액세스할 수 없는 데이터에는 액세스할 수 없습니다.\n최소 권한 원칙: 이 기능을 사용하면 사용자의 직접적인 동의 없이 사용자 데이터에 액세스할 수 있으므로 보안 권장사항을 따르는 것이 중요합니다. 필요한 OAuth 범위만 부여하고 보안상의 영향을 파악해야 합니다.\n자세한 보안 가이드라인은 도메인 전체 위임 권장사항 [https://support.google.com/a/answer/14437356?hl=ko]을 참고하세요.\nGoogle API 호출\n--- 탭: 자바 ---\nGoogleCredentials 객체를 사용하여 다음 단계를 완료하여 Google API를 호출합니다.\n\n      \n        GoogleCredentials 객체를 사용하여 호출하려는 API의 서비스 객체를 만듭니다. 예를 들면 다음과 같습니다.\n          SQLAdmin sqladmin =\n    new SQLAdmin.Builder(httpTransport, JSON_FACTORY, credentials).build();\n        \n        서비스 객체에서 제공하는 인터페이스 [https://github.com/googleapis/google-api-java-client]를 사용하여 API 서비스에 요청합니다.\n          예를 들어 exciting-example-123 프로젝트의 Cloud SQL 데이터베이스 인스턴스를 나열하려면 다음을 실행합니다.']","When Google Cloud session control features are enabled, they can significantly impact how users interact with Google Cloud Platform (GCP) resources. These features require users to frequently re-authenticate while accessing GCP resources. This policy affects access to the Google Cloud Console, Google Cloud SDK (also known as gcloud CLI), and third-party OAuth applications that require Cloud Platform scopes.

Specifically, if a session control policy is applied, and the session duration set by the administrator is exceeded, API calls will fail with an error type of `invalid_grant`. The `error_subtype` field can be used to distinguish between failures due to revoked tokens and those due to session control policies.

User actions or applications impacted by these policies include:

1. **Google Cloud Console Access**: Users may need to re-authenticate more frequently when accessing the console.
2. **Google Cloud SDK (gcloud CLI)**: Users using the command-line interface may experience interruptions and need to re-authenticate.
3. **Third-party OAuth Applications**: Applications that require Cloud Platform scopes may also be affected, requiring users to re-authenticate.

If user credentials are deployed on a server for long-running tasks, and session control policies are applied, the server application may fail when the session expires, as there would be no way to re-authenticate the user.","When Google Cloud session control features are enabled, administrators in a GCP organization can require users to re-authenticate more frequently while accessing GCP resources. This policy affects access to the Google Cloud Console, the Google Cloud SDK (also known as gcloud CLI), and third-party OAuth applications that require Cloud Platform scopes."
"firebase_functions 어떻게 쓰는지 잘 모르겠는데, Cloud Firestore에서 문서 바뀔 때마다 자동으로 뭔가 실행되게 하려면 firebase_functions에서 뭘 써야 되고, 예시 코드도 보여줄 수 있나요?","['문서의 모든 변경사항에 대해 함수 트리거\n\n실행되는 이벤트 유형에 관계없이 Cloud Firestore 문서의 모든 변경사항을 리슨하려면 \'작성된 문서\' 이벤트 트리거를 사용합니다. 다음은 사용자가 생성, 업데이트 또는 삭제될 때 실행되는 함수의 예시입니다.\n\nNode.jsconst {\nonDocumentWritten,\nChange,\nFirestoreEvent\n} = require(\'firebase-functions/v2/firestore\');\n\nexports.modifyuser = onDocumentWritten(""users/{userId}"", (event) => {\n// Get an object with the current document values.\n// If the document does not exist, it was deleted\nconst document =  event.data.after.data();\n\n// Get an object with the previous document values\nconst previousValues =  event.data.before.data();\n\n// perform more operations ...\n});\n\n추가 인증 정보의 경우 onDocumentWrittenWithAuthContext를 사용하세요.\nPythonfrom firebase_functions.firestore_fn import (\non_document_written,\nEvent,\nChange,\nDocumentSnapshot,\n)\n\n@on_document_written(document=""users/{userId}"")\ndef myfunction(event: Event[Change[DocumentSnapshot | None]]) -> None:\n# Get an object with the current document values.\n# If the document does not exist, it was deleted.\ndocument = (event.data.after.to_dict()\nif event.data.after is not None else None)'
 'Cloud Firestore 함수 트리거\n\nCloud Functions for Firebase SDK는 특정 Cloud Firestore 이벤트에 연결된 핸들러를 생성할 수 있도록 다음 Cloud Firestore 이벤트 트리거를 내보냅니다.\n\nNode.js|  |  |\n| --- | --- |\n|  |  |\n|  |  |\n|  |  |\n|  |  |\n|  |  |\n|  |  |\n|  |  |\n|  |  |\nPython|  |  |\n| --- | --- |\n|  |  |\n|  |  |\n|  |  |\n|  |  |\n|  |  |\n|  |  |\n|  |  |\n|  |  |\n\nCloud Firestore 이벤트는 문서 변경 시에만 트리거됩니다. 데이터가 변경되지 않는 Cloud Firestore 문서를 업데이트(노옵스(no-ops) 쓰기)할 때에는 업데이트 또는 쓰기 이벤트가 생성되지 않습니다. 특정 필드에 이벤트를 추가할 수 없습니다.\n\nCloud Functions for Firebase가 사용 설정된 프로젝트가 없으면 Cloud Functions for Firebase(2세대) 시작하기 [https://firebase.google.com/docs/functions/beta/get-started?hl=ko]를 읽고 Cloud Functions for Firebase 프로젝트를 구성 및 설정하세요.\n\nCloud Firestore 트리거 함수 작성\n\n함수 트리거 정의\n\nCloud Firestore 트리거를 정의하려면 문서 경로와 이벤트 유형을 지정합니다.\n\nNode.jsconst {\nonDocumentWritten,\nonDocumentCreated,\nonDocumentUpdated,\nonDocumentDeleted,\nChange,\nFirestoreEvent\n} = require(\'firebase-functions/v2/firestore\');\n\nexports.myfunction = onDocumentWritten(""my-collection/{docId}"", (event) => {\n/* ... */\n});\n\nPythonfrom firebase_functions.firestore_fn import (\non_document_created,\non_document_deleted,\non_document_updated,\non_document_written,\nEvent,\nChange,\nDocumentSnapshot,\n)'
 'Cloud Functions로 Firestore 확장\n\nbookmark_borderbookmark\n\n컬렉션을 사용해 정리하기\n\n내 환경설정을 기준으로 콘텐츠를 저장하고 분류하세요.\n\nCloud Functions를 사용하면 Firestore 데이터베이스를 변경하여 트리거되는 이벤트를 처리하는 Node.js 코드를 배포할 수 있습니다. 덕분에 자체 서버를 실행하지 않고도 앱에 서버 측 기능을 쉽게 추가할 수 있습니다.\n참고: 이 페이지의 예시는 Firebase용 Cloud Functions [https://firebase.google.com/docs/functions/?hl=ko]를 사용하며 Google Cloud용 Cloud Functions와 약간 다릅니다 [https://cloud.google.com/functions/docs/concepts/functions-and-firebase?hl=ko].\n사용 사례의 예시를 보려면 Cloud Functions로 무엇을 할 수 있나요? [https://firebase.google.com/docs/functions/use-cases?hl=ko] 또는 함수 샘플 [https://github.com/firebase/functions-samples] GitHub 저장소를 참조하세요.\n\nFirestore 함수 트리거\n\nFirebase용 Cloud Functions SDK는 특정 Firestore 이벤트에 연결된 핸들러를 만들 수 있는 functions.firestore [https://firebase.google.com/docs/reference/functions/firebase-functions.firestore?hl=ko] 객체를 내보냅니다.'
 ""Cloud Functions는 프로젝트의 서비스 계정으로 승인되기 때문에 신뢰할 수 있는 환경에서 실행됩니다. Firebase Admin SDK [https://firebase.google.com/docs/reference/admin?hl=ko]를 사용해 읽기 및 쓰기를 수행할 수 있습니다.\n\n--- 탭: Node.js [https://cloud.google.com/firestore/native/docs/extend-with-functions?hl=ko#node.js] ---\n```\nconst admin = require('firebase-admin');\nadmin.initializeApp();\n\nconst db = admin.firestore();\n\nexports.writeToFirestore = functions.firestore\n.document('some/doc')\n.onWrite((change, context) => {\ndb.doc('some/otherdoc').set({ ... });\n});\n```참고: Cloud Functions에서 수행되는 읽기 및 쓰기는 보안 규칙으로 제어되지 않으며 데이터베이스의 모든 부분에 액세스할 수 있습니다.\n제한사항\n\nCloud Run Functions용 Firestore 트리거의 다음 제한사항에 유의하세요.""
 ""| 이벤트 유형 | 트리거 |\n| --- | --- |\n| onCreate | 문서를 처음으로 기록할 때 트리거됩니다. |\n| onUpdate | 이미 존재하는 문서에서 값이 변경되었을 때 트리거됩니다. |\n| onDelete | 데이터가 있는 문서가 삭제되면 트리거됩니다. |\n| onWrite | onCreate, onUpdate 또는 onDelete가 트리거될 때 트리거됩니다. |\n참고: Firestore 이벤트는 문서 변경 시에만 트리거됩니다. 데이터가 변경되지 않는 Firestore 문서를 업데이트(노옵스(no-ops) 쓰기)할 때에는 업데이트 또는 쓰기 이벤트가 생성되지 않습니다. 특정 필드에 이벤트를 추가할 수 없습니다.\nFirebase용 Cloud 함수가 사용 설정된 프로젝트가 없으면\n시작하기: 첫 번째 함수 작성 및 배포 [https://firebase.google.com/docs/functions/get-started?hl=ko]를\n읽고 Firebase 프로젝트에 Cloud 함수를 구성 및 설정하세요.\n\nFirestore 트리거 함수 작성\n\n함수 트리거 정의\n\nFirestore 트리거를 정의하려면 문서 경로와 이벤트 유형을 지정합니다.\n\n--- 탭: Node.js [https://cloud.google.com/firestore/native/docs/extend-with-functions?hl=ko#node.js] ---\n```\nconst functions = require('firebase-functions');\n\nexports.myFunction = functions.firestore\n.document('my-collection/{docId}')\n.onWrite((change, context) => { /* ... */ });\n```\n문서 경로는 특정 문서 [https://cloud.google.com/firestore/native/docs/extend-with-functions?hl=ko#specific-documents] 또는 와일드 카드 패턴 [https://cloud.google.com/firestore/native/docs/extend-with-functions?hl=ko#wildcards-parameters]을 참조할 수 있습니다.\n중요: 문서 경로 끝에 슬래시가 없어야 합니다.\n단일 문서 지정\n\n다음 함수를 사용하면 특정 문서의 모든 변경에 이벤트를 트리거할 수 있습니다.""]","Cloud Firestore에서 문서가 변경될 때마다 자동으로 실행되는 기능을 구현하려면 `firebase_functions`의 `on_document_written` 트리거를 사용할 수 있습니다. 이 트리거는 문서가 생성, 업데이트 또는 삭제될 때마다 실행됩니다. 아래는 Python과 Node.js에서의 예시 코드입니다.

### Python 예시 코드
```python
from firebase_functions.firestore_fn import (
    on_document_written,
    Event,
    Change,
    DocumentSnapshot,
)

@on_document_written(document=""users/{userId}"")
def myfunction(event: Event[Change[DocumentSnapshot | None]]) -> None:
    # 현재 문서의 값을 가져옵니다.
    # 문서가 존재하지 않으면 삭제된 것입니다.
    document = (event.data.after.to_dict()
                if event.data.after is not None else None)

    # 이전 문서의 값을 가져옵니다.
    # 문서가 존재하지 않으면 새로 생성된 것입니다.
    previous_values = (event.data.before.to_dict()
                       if event.data.before is not None else None)

    # 추가 작업 수행 ...
```

### Node.js 예시 코드
```javascript
const {
    onDocumentWritten,
    Change,
    FirestoreEvent
} = require('firebase-functions/v2/firestore');

exports.modifyuser = onDocumentWritten(""users/{userId}"", (event) => {
    // 현재 문서의 값을 가져옵니다.
    // 문서가 존재하지 않으면 삭제된 것입니다.
    const document = event.data.after.data();

    // 이전 문서의 값을 가져옵니다.
    const previousValues = event.data.before.data();

    // 추가 작업 수행 ...
});
```

이 코드를 사용하면 Cloud Firestore의 특정 문서 경로에서 문서가 생성, 업데이트 또는 삭제될 때마다 지정된 함수가 실행됩니다.","Cloud Firestore에서 특정 문서의 모든 변경에 이벤트를 트리거하려면 onDocumentWritten 함수를 사용해야 합니다. 예시는 다음과 같습니다.

from firebase_functions.firestore_fn import (
    on_document_written,
    Event,
    Change,
    DocumentSnapshot,
)

@on_document_written(document=""users/marie"")
def myfunction(event: Event[Change[DocumentSnapshot]]) -> None:
    # Get an object with the current document values.
    # If the document does not exist, it was deleted.
    document = (event.data.after.to_dict()
                if event.data.after is not None else None)

    # Get an object with the previous document values.
    # If the document does not exist, it was newly created.
    previous_values = (event.data.before.to_dict()
                       if event.data.before is not None else None)

    # Perform more operations ..."
"Firebase에서 다단계 인증(MFA)을 사용할 때 Objective-C로 사용자 인증을 완료하는 방법과 관련된 코드 예시가 궁금합니다. 어떤 방식으로 인증 정보를 가져오고, Objective-C에서는 어떻게 구현하나요?","['--- 탭: Objective-C [https://firebase.google.com/docs/auth/ios/google-signin?hl=ko#objective-c] ---\n[[FIRAuth auth] signInWithCredential:credential\ncompletion:^(FIRAuthDataResult * _Nullable authResult,\nNSError * _Nullable error) {\nif (isMFAEnabled && error && error.code == FIRAuthErrorCodeSecondFactorRequired) {\nFIRMultiFactorResolver *resolver = error.userInfo[FIRAuthErrorUserInfoMultiFactorResolverKey];\nNSMutableString *displayNameString = [NSMutableString string];\nfor (FIRMultiFactorInfo *tmpFactorInfo in resolver.hints) {\n[displayNameString appendString:tmpFactorInfo.displayName];\n[displayNameString appendString:@"" ""];\n}\n[self showTextInputPromptWithMessage:[NSString stringWithFormat:@""Select factor to sign in\\n%@"", displayNameString]\ncompletionBlock:^(BOOL userPressedOK, NSString *_Nullable displayName) {\nFIRPhoneMultiFactorInfo* selectedHint;\nfor (FIRMultiFactorInfo *tmpFactorInfo in resolver.hints) {\nif ([displayName isEqualToString:tmpFactorInfo.displayName]) {\nselectedHint = (FIRPhoneMultiFactorInfo *)tmpFactorInfo;\n}\n}\n[FIRPhoneAuthProvider.provider\nverifyPhoneNumberWithMultiFactorInfo:selectedHint\nUIDelegate:nil\nmultiFactorSession:resolver.session'
 '--- 탭: Objective-C [https://firebase.google.com/docs/auth/ios/microsoft-oauth?hl=ko#objective-c] ---\n[[FIRAuth auth].currentUser\nreauthenticateWithCredential:credential\ncompletion:^(FIRAuthDataResult * _Nullable authResult, NSError * _Nullable error) {\nif (error) {\n// Handle error.\n}\n// User is re-authenticated with fresh tokens minted and\n// should be able to perform sensitive operations like account\n// deletion and email or password update.\n// IdP data available in result.additionalUserInfo.profile.\n// Additional OAuth access token can also be retrieved:\n// ((FIROAuthCredential *)authResult.credential).accessToken\n// OAuth ID token can also be retrieved:\n// ((FIROAuthCredential *)authResult.credential).idToken\n}];\n\naccount-exists-with-different-credential 오류 처리\n\nFirebase Console [https://console.firebase.google.com/?hl=ko]에서 이메일 주소당 계정 1개를 사용 설정한 경우 다른 Firebase 사용자의 제공업체(예: Google)에 이미 존재하는 이메일을 사용하여 Microsoft와 같은 제공업체에 로그인을 시도하면 임시 FIRAuthCredential 객체(Microsoft 사용자 인증 정보)와 함께 FIRAuthErrorCodeAccountExistsWithDifferentCredential 오류가 발생합니다. 사용자가 원하는 제공업체에 로그인하려면 먼저 기존 제공업체(예: Google)에 로그인한 다음 신규 제공업체의 FIRAuthCredential(Microsoft 사용자 인증 정보)에 연결해야 합니다. 그 방법은 아래와 같습니다.'
 'Firebase Authentication with Identity Platform으로 업그레이드했다면 웹 앱에 SMS 다중 인증(MFA)을 추가할 수 있습니다.\n\n다중 인증(MFA)을 통해 앱의 보안이 강화됩니다. 공격자는 종종 비밀번호와 소셜 미디어 계정을 유출시키지만 문자 메시지를 가로채는 것은 더 어렵습니다.\n\n시작하기 전에\n\n다중 인증(MFA)을 지원하는 제공업체를 하나 이상 사용 설정합니다.\n전화 인증, 익명 인증, Apple Game Center를 제외한 모든 제공업체는 MFA를 지원합니다.\nSMS 인증을 사용할 리전을 사용 설정합니다.\nFirebase는 기본적으로 더 안전한 상태로 프로젝트를 만드는 데 도움이 되는 SMS 완전 차단 리전 정책을 사용합니다.\n앱이 사용자 이메일을 확인하고 있는지 확인합니다. MFA를 사용하려면 이메일 인증이 필요합니다.\n이를 통해 악의적인 행위자가 자신이 소유하지 않은 이메일에 서비스를 등록한 후 두 번째 단계를 추가하여 실제 소유자의 접근을 막는 일을 방지할 수 있습니다.\n\n멀티테넌시 사용\n\n멀티 테넌트 [https://cloud.google.com/identity-platform/docs/multi-tenancy?hl=ko] 환경에서 사용하기 위해 다단계 인증을 사용 설정하는 경우 이 도움말의 나머지 안내와 함께 다음 단계를 완료해야 합니다.\n\nGoogle Cloud 콘솔에서 작업할 테넌트를 선택합니다.\n코드에서 Auth 인스턴스의 tenantId 필드를 테넌트의 ID로 설정합니다. 예를 들면 다음과 같습니다.\n\n--- 탭: Web [https://firebase.google.com/docs/auth/web/multi-factor?hl=ko#web-modular-api] ---\n```\nimport { getAuth } from ""firebase/auth"";\n\nconst auth = getAuth(app);\nauth.tenantId = ""myTenantId1"";\n```\n\n--- 탭: Web [https://firebase.google.com/docs/auth/web/multi-factor?hl=ko#web-namespaced-api] ---\n```\nfirebase.auth().tenantId = \'myTenantId1\';\n```\n\n다중 인증(MFA) 사용 설정'
 '다음 단계\n\nAdmin SDK를 사용하여 프로그래매틱 방식으로 다중 인증 사용자를 관리 [https://firebase.google.com/docs/auth/admin/manage-mfa-users?hl=ko]합니다.\n\n도움이 되었나요?\n\n의견 보내기'
 '--- 탭: Objective-C [https://firebase.google.com/docs/auth/ios/manage-users?hl=ko#objective-c] ---\nFIRUser *user = [FIRAuth auth].currentUser;\nif (user) {\n// The user\'s ID, unique to the Firebase project.\n// Do NOT use this value to authenticate with your backend server,\n// if you have one. Use getTokenWithCompletion:completion: instead.\nNSString *email = user.email;\nNSString *uid = user.uid;\nNSMutableString *multiFactorString = [NSMutableString stringWithFormat:@""MultiFactor: ""];\nfor (FIRMultiFactorInfo *info in user.multiFactor.enrolledFactors) {\n[multiFactorString appendString:info.displayName];\n[multiFactorString appendString:@"" ""];\n}\nNSURL *photoURL = user.photoURL;\n// ...\n}\n제공업체의 사용자 프로필 정보 가져오기\n\n사용자에게 연결된 로그인 제공업체로부터 프로필 정보를 가져오려면 providerData 속성을 사용합니다. 예를 들면 다음과 같습니다.\n\n--- 탭: Swift [https://firebase.google.com/docs/auth/ios/manage-users?hl=ko#swift] ---\nlet userInfo = Auth.auth().currentUser?.providerData[indexPath.row]\ncell?.textLabel?.text = userInfo?.providerID\n// Provider-specific UID\ncell?.detailTextLabel?.text = userInfo?.uid']","Objective-C에서 Firebase 다단계 인증(MFA)을 사용할 때 사용자 인증을 완료하는 방법은 다음과 같습니다. 다단계 인증을 처리하기 위해서는 `signInWithCredential:completion:` 메서드를 사용하고, 오류 코드가 `FIRAuthErrorCodeSecondFactorRequired`인 경우 다중 인증을 처리해야 합니다. 아래는 관련 코드 예시입니다:

```objective-c
[[FIRAuth auth] signInWithCredential:credential
completion:^(FIRAuthDataResult * _Nullable authResult,
NSError * _Nullable error) {
    if (isMFAEnabled && error && error.code == FIRAuthErrorCodeSecondFactorRequired) {
        FIRMultiFactorResolver *resolver = error.userInfo[FIRAuthErrorUserInfoMultiFactorResolverKey];
        NSMutableString *displayNameString = [NSMutableString string];
        for (FIRMultiFactorInfo *tmpFactorInfo in resolver.hints) {
            [displayNameString appendString:tmpFactorInfo.displayName];
            [displayNameString appendString:@"" ""];
        }
        [self showTextInputPromptWithMessage:[NSString stringWithFormat:@""Select factor to sign in\n%@"", displayNameString]
        completionBlock:^(BOOL userPressedOK, NSString *_Nullable displayName) {
            FIRPhoneMultiFactorInfo* selectedHint;
            for (FIRMultiFactorInfo *tmpFactorInfo in resolver.hints) {
                if ([displayName isEqualToString:tmpFactorInfo.displayName]) {
                    selectedHint = (FIRPhoneMultiFactorInfo *)tmpFactorInfo;
                }
            }
            [FIRPhoneAuthProvider.provider
            verifyPhoneNumberWithMultiFactorInfo:selectedHint
            UIDelegate:nil
            multiFactorSession:resolver.session
            completion:^(NSString * _Nullable verificationID, NSError * _Nullable error) {
                // Handle verification completion
            }];
        }];
    }
}];
```

이 코드는 사용자가 다단계 인증을 위해 선택할 수 있는 인증 요소를 표시하고, 사용자가 선택한 요소를 기반으로 인증을 진행하는 방식입니다. `FIRMultiFactorResolver`를 사용하여 다단계 인증 요소를 처리합니다.","다단계 인증(MFA) 사용 시 Firebase에서 사용자 인증을 완료하는 방법은 FIRMultiFactorResolver를 통해 다단계 인증 정보를 가져온 후, 선택한 인증 방법으로 인증을 완료해야 합니다. Objective-C에서는 다음과 같이 작성합니다: 
FIRMultiFactorAssertion *assertion = [FIRPhoneMultiFactorGenerator assertionWithCredential:credential];
[resolver resolveSignInWithAssertion:assertion completion:^(FIRAuthDataResult * _Nullable authResult, NSError * _Nullable error) {
if (error) {
[self showMessagePrompt:error.localizedDescription];
NSLog(@""Multi factor finanlize sign in succeeded."");
FIRUser *user = authResult.user;"
Java를 사용해서 Firestore에 문서를 추가할 때 어떤 코드를 사용하나요?,"['Firestore는 컬렉션에 저장되는 문서에 데이터를 저장합니다.\n문서에 데이터를 처음 추가할 때 Firestore는 암시적으로 컬렉션과 문서를 만듭니다. 컬렉션이나 문서를 명시적으로 만들 필요가 없습니다.\n\n다음 예시 코드를 사용해 새 컬렉션과 문서를 만듭니다.\n\n--- 탭: Java [https://cloud.google.com/firestore/native/docs/create-database-server-client-library?hl=ko#java] ---\n```\nDocumentReference docRef = db.collection(""users"").document(""alovelace"");\n// Add document data  with id ""alovelace"" using a hashmap\nMap<String, Object> data = new HashMap<>();\ndata.put(""first"", ""Ada"");\ndata.put(""last"", ""Lovelace"");\ndata.put(""born"", 1815);\n//asynchronously write data\nApiFuture<WriteResult> result = docRef.set(data);\n// ...\n// result.get() blocks on response\nSystem.out.println(""Update time : "" + result.get().getUpdateTime());\n```\n\n--- 탭: Python [https://cloud.google.com/firestore/native/docs/create-database-server-client-library?hl=ko#python] ---\n```\ndoc_ref = db.collection(""users"").document(""alovelace"")\ndoc_ref.set({""first"": ""Ada"", ""last"": ""Lovelace"", ""born"": 1815})\n```'
 'Firestore는 컬렉션에 저장되는 문서에 데이터를 저장합니다.\n문서에 데이터를 처음 추가할 때 Firestore는 암시적으로 컬렉션과 문서를 만듭니다. 컬렉션이나 문서를 명시적으로 만들 필요가 없습니다.\n\n다음 예시 코드를 사용해 새 컬렉션과 문서를 만듭니다.\n\n--- 탭: 웹 버전 9 [https://cloud.google.com/firestore/native/docs/create-database-web-mobile-client-library?hl=ko#%EC%9B%B9-%EB%B2%84%EC%A0%84-9-modular] ---\nimport { collection, addDoc } from ""firebase/firestore"";\n\ntry {\nconst docRef = await addDoc(collection(db, ""users""), {\nfirst: ""Ada"",\nlast: ""Lovelace"",\nborn: 1815\n});\nconsole.log(""Document written with ID: "", docRef.id);\n} catch (e) {\nconsole.error(""Error adding document: "", e);\n}\nadd_ada_lovelace.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/snippets/firestore-next/test-firestore/add_ada_lovelace.js#L8-L19]'
 'Gradle을 사용하거나 BOM 없이 설정하는 경우 자바용 Firestore 클라이언트 README [https://github.com/googleapis/java-firestore/tree/main#quickstart]를 참조하세요.\n\nIDE 사용:\nVS Code, IntelliJ, Eclipse를 사용하는 경우 다음과 같은 IDE 플러그인을 사용하여 클라이언트 라이브러리를 프로젝트에 추가할 수 있습니다.\n\nVS Code용 Cloud Code [https://cloud.google.com/code/docs/vscode/client-libraries?hl=ko]\nIntelliJ용 Cloud Code [https://cloud.google.com/code/docs/intellij/client-libraries?hl=ko]\nEclipse용 Cloud Tools [https://cloud.google.com/eclipse/docs/libraries?hl=ko]\n\n이 플러그인은 서비스 계정의 키 관리와 같은 추가 기능을 제공합니다. 자세한 내용은 각 플러그인의 문서를 참조하세요.\n\nPython\n\n앱에 Firestore Python 라이브러리를 추가합니다.\n참고: 가상 Python 환경 [https://virtualenv.pypa.io/en/stable/]을 사용하여 Firestore Python 라이브러리를 설치하는 것이 좋습니다.\npip install virtualenv\nvirtualenv env\nsource env/bin/activate\n\npip install --upgrade google-cloud-firestore\n\nNode.js\n앱에 Firestore Node.js 라이브러리를 추가합니다.\nnpm install --save @google-cloud/firestore\n\nGo\nFirestore Go 라이브러리를 설치합니다.\ngo get cloud.google.com/go/firestore\n앱에 Firestore Go 라이브러리를 추가합니다.\nimport ""cloud.google.com/go/firestore""\n\nPHP\n\n클라이언트 라이브러리를 사용하는 데 필요한 PHP용 gRPC 확장 프로그램 [https://cloud.google.com/php/grpc?hl=ko]을 설치하고 사용 설정합니다.']","Java를 사용하여 Firestore에 문서를 추가하는 방법은 여러 가지가 있습니다. 아래는 두 가지 방법의 예시입니다.

1. `set()` 메서드를 사용하는 방법:
```java
DocumentReference docRef = db.collection(""users"").document(""alovelace"");
Map<String, Object> data = new HashMap<>();
data.put(""first"", ""Ada"");
data.put(""last"", ""Lovelace"");
data.put(""born"", 1815);
ApiFuture<WriteResult> result = docRef.set(data);
System.out.println(""Update time : "" + result.get().getUpdateTime());
```

2. `add()` 메서드를 사용하는 방법:
```java
Map<String, Object> user = new HashMap<>();
user.put(""first"", ""Ada"");
user.put(""last"", ""Lovelace"");
user.put(""born"", 1815);

db.collection(""users"")
.add(user)
.addOnSuccessListener(new OnSuccessListener<DocumentReference>() {
    @Override
    public void onSuccess(DocumentReference documentReference) {
        Log.d(TAG, ""DocumentSnapshot added with ID: "" + documentReference.getId());
    }
})
.addOnFailureListener(new OnFailureListener() {
    @Override
    public void onFailure(@NonNull Exception e) {
        Log.w(TAG, ""Error adding document"", e);
    }
});
```

이 두 가지 방법 중 하나를 선택하여 Firestore에 문서를 추가할 수 있습니다. `set()` 메서드는 특정 문서 ID를 지정하여 데이터를 설정하고, `add()` 메서드는 Firestore가 자동으로 ID를 생성하여 문서를 추가합니다.","다음은 Java에서 Firestore에 문서를 추가할 때 사용하는 코드 예시입니다.

```java
Map<String, Object> docData = new HashMap<>();
docData.put(""stringExample"", ""Hello, World"");
docData.put(""booleanExample"", false);
docData.put(""numberExample"", 3.14159265);
docData.put(""nullExample"", null);

ArrayList<Object> arrayExample = new ArrayList<>();
Collections.addAll(arrayExample, 5L, true, ""hello"");
docData.put(""arrayExample"", arrayExample);

Map<String, Object> objectExample = new HashMap<>();
objectExample.put(""a"", 5L);
objectExample.put(""b"", true);

docData.put(""objectExample"", objectExample);
```"
COLUMNS가 Dimension API에서 무슨 뜻인가요?,"['COLUMN_NAME: 임베딩 데이터가 포함된 열의 이름입니다. 이 열은 ARRAY<FLOAT64> 유형이어야 합니다. 열에 하위 필드가 있을 수 없습니다. 배열의 모든 요소는 NULL이 아니어야 하고 열의 모든 값은 배열 차원이 동일해야 합니다.\nSTORED_COLUMN_NAME: 벡터 색인에 저장할 테이블의 최상위 열 이름입니다. 열 유형은 RANGE일 수 없습니다. 테이블에 행 수준 액세스 정책이 있거나 열에 정책 태그가 있는 경우 저장된 열은 사용되지 않습니다. 저장된 열을 사용 설정하는 방법에 관한 자세한 내용은 열 저장 및 사전 필터링 [https://cloud.google.com/bigquery/docs/vector-index?hl=ko#stored-columns]을 참조하세요.\nDISTANCE_TYPE: 이 색인을 사용하여 벡터 검색을 실행할 때 사용할 기본 거리 유형을 지정하는 선택적 인수입니다. 지원되는 값은 EUCLIDEAN [https://en.wikipedia.org/wiki/Euclidean_distance], COSINE [https://en.wikipedia.org/wiki/Cosine_similarity#Cosine_Distance], DOT_PRODUCT [https://en.wikipedia.org/wiki/Dot_product]입니다. 기본값은 EUCLIDEAN입니다.\n색인 생성 자체는 항상 학습에 EUCLIDEAN 거리를 사용하지만 VECTOR_SEARCH 함수에 사용되는 거리는 다를 수 있습니다.\nVECTOR_SEARCH 함수의 distance_type 인수에 값을 지정하면 DISTANCE_TYPE 값 대신 해당 값이 사용됩니다.\nLEAF_NODE_EMBEDDING_COUNT: TreeAH 알고리즘이 생성하는 트리의 각 리프 노드에 있는 대략적인 벡터 수를 지정하는 500보다 크거나 같은 INT64 값입니다. TreeAH 알고리즘은 전체 데이터 공간을 여러 목록으로 나누며 각 목록에는 약 LEAF_NODE_EMBEDDING_COUNT개의 데이터 포인트가 포함됩니다. 값이 낮을수록 데이터 포인트가 적은 목록이 더 많이 생성되고 값이 클수록 데이터 포인트가 많은 목록이 더 적게 생성됩니다. 기본값은 1,000이며 대부분의 데이터 세트에 적합합니다.'
 'This feature is in preview [https://cloud.google.com/products/#product-launch-stages].\nAdding descriptions to the columns of a view is now generally available [https://cloud.google.com/products/#product-launch-stages] (GA). Use the CREATE VIEW [https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language#create_view_statement] or ALTER COLUMN [https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language#alter_column_set_options_statement] DDL statements to add descriptions.\nBigQuery is now available in the Dammam (me-central2) [https://cloud.google.com/bigquery/docs/locations#regional-locations] region.\nBigQuery ML is now available in the Dammam (me-central2) [https://cloud.google.com/bigquery-ml/docs/locations#regional-locations] region.\nBigQuery Data Transfer Service is now available in the Dammam (me-central2) [https://cloud.google.com/bigquery-transfer/docs/locations#regional-locations] region.\nOctober 05, 2023'
 'Columns 테이블은 우선순위에 따라 SVV_COLUMNS [https://docs.aws.amazon.com/redshift/latest/dg/r_SVV_COLUMNS.html],INFORMATION_SCHEMA.COLUMNS [https://www.postgresql.org/docs/current/infoschema-columns.html] 또는 PG_TABLE_DEF [https://docs.aws.amazon.com/redshift/latest/dg/r_PG_TABLE_DEF.html] 테이블 중 하나에서 가져옵니다. 도구는 우선순위가 가장 높은 테이블에서 먼저 데이터를 로드하려고 시도합니다. 이 작업이 실패하면 우선순위가 두 번째로 높은 테이블에서 데이터를 로드하려고 시도합니다. 스키마 및 사용에 대한 자세한 내용은 Amazon Redshift 또는 PostgreSQL 문서를 참조하세요.\n\n\n  \n    \n      열\n      유형\n      설명\n    \n  \n  \n    \n      DatabaseName\n      STRING\n      데이터베이스의 이름입니다.\n    \n    \n      SchemaName\n      STRING\n      스키마의 이름입니다.\n    \n    \n      TableName\n      STRING\n      테이블의 이름입니다.\n    \n    \n      ColumnName\n      STRING\n      열의 이름입니다.\n    \n    \n      DefaultValue\n      STRING\n      사용 가능한 경우 기본값입니다.\n    \n    \n      Nullable\n      BOOLEAN\n      열에 null 값이 있을 수 있는지 여부입니다.\n    \n    \n      ColumnType\n      STRING\n      열의 유형입니다(예: VARCHAR).\n    \n    \n      ColumnLength\n      INTEGER\n      열의 크기입니다(예: VARCHAR(30)의 경우 30).\n    \n  \n\n\nCreateAndDropStatistic\n\n이 테이블은 테이블 생성 및 삭제에 관한 정보를 제공합니다.'
 'Source URL: https://developers.google.com/workspace/sheets/api/reference/rest/v4/Dimension?hl=ko\n\n이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.\nSwitch to English\n홈 [https://developers.google.com/?hl=ko]\nGoogle Workspace [https://developers.google.com/workspace?hl=ko]\nGoogle Sheets [https://developers.google.com/workspace/sheets?hl=ko]\n참조 [https://developers.google.com/workspace/sheets/api/reference/rest?hl=ko]\n의견 보내기\nDimension\nbookmark_border\n작업을 적용할 측정기준을 나타냅니다.\n열거형\nDIMENSION_UNSPECIFIED 기본값이며 사용할 수 없습니다.\nROWS 시트의 행에서 작동합니다.\nCOLUMNS 시트의 열에서 작동합니다.\n의견 보내기'
 'A string in the format bin_<bucket_index>\nA string in interval notation [https://en.wikipedia.org/wiki/Interval_(mathematics)]\nA JSON-formatted string\nYou can now use the BY NAME and CORRESPONDING modifiers [https://cloud.google.com/bigquery/docs/reference/standard-sql/query-syntax#by_name_or_corresponding] with set operations to match columns by name instead of by position. This feature is generally available [https://cloud.google.com/products#product-launch-stages] (GA).\nJanuary 28, 2025\nYou can now view stored column usage [https://cloud.google.com/bigquery/docs/reference/rest/v2/Job#StoredColumnsUsage] information for a query job that performs vector search using stored columns. This feature is generally available [https://cloud.google.com/products#product-launch-stages] (GA).\nJanuary 27, 2025\nA weekly digest of client library updates from across the Cloud SDK [https://cloud.google.com/sdk].\n--- 탭: Go [https://cloud.google.com/bigquery/docs/release-notes#go] ---\nChanges for bigquery/storage/apiv1beta1 [https://github.com/googleapis/google-cloud-go/tree/main/bigquery/storage/apiv1beta1]'
 'BigQuery [https://cloud.google.com/bigquery?hl=ko]\nDocumentation [https://cloud.google.com/bigquery/docs?hl=ko]\n가이드 [https://cloud.google.com/bigquery/docs/introduction?hl=ko]\n도움이 되었나요?\n의견 보내기\n이 페이지의 내용\n분석 규칙이란 무엇인가요? [https://cloud.google.com/bigquery/docs/analysis-rules?hl=ko#privacy_view]\n지원되는 분석 규칙 [https://cloud.google.com/bigquery/docs/analysis-rules?hl=ko#supported_analysis_rules]\n집계 기준점 분석 규칙 [https://cloud.google.com/bigquery/docs/analysis-rules?hl=ko#agg_analysis_rules]\n뷰의 집계 기준점 분석 규칙 정의 [https://cloud.google.com/bigquery/docs/analysis-rules?hl=ko#define_privacy_view]\n뷰의 집계 기준점 분석 규칙 업데이트 [https://cloud.google.com/bigquery/docs/analysis-rules?hl=ko#update_privacy_view]\n분석 규칙을 사용하여 데이터 액세스 제한\nbookmark_border\n이 문서에서는 BigQuery용 GoogleSQL의 분석 규칙에 대한 일반적인 정보를 제공합니다.\n분석 규칙이란 무엇인가요?'
 '사용 사례에 대한 유용한 정보를 얻으려면 설문지를 만들어 주제 전문가(SME), 최종 사용자, 이해관계자로부터 정보를 수집하면 됩니다. 설문지에는 다음과 같은 정보를 묻는 질문이 포함되어야 합니다.\n사용 사례의 목표는 무엇인가요? 비즈니스 가치는 무엇인가요?\n비기능적 요구사항은 무엇인가요? (데이터 업데이트, 동시 사용 등)\n사용 사례가 더 큰 워크로드의 일부인가요? 다른 사용 사례에 종속되나요?\n사용 사례의 토대가 되는 데이터 세트, 테이블, 스키마는 무엇인가요?\n이러한 데이터 세트에 데이터 파이프라인을 피드하는 방법에 대해 알고 계신가요?\n현재 어떤 BI 도구, 보고서, 대시보드를 사용하고 있나요?\n운영 요구사항, 성능, 인증, 네트워크 대역폭과 관련된 현재 기술 요구사항은 무엇인가요?\n다음 다이어그램은 마이그레이션하기 전 기존 아키텍처를 대략적으로 보여줍니다. 사용 가능한 데이터 소스, 기존 데이터 파이프라인, 이전 운영 파이프라인 및 피드백 루프, 최종 사용자가 액세스하는 기존 BI 보고서 및 대시보드의 카탈로그를 보여줍니다.\n계획\n계획 단계는 준비 및 탐색 단계에서 의견을 받고 평가하여 마이그레이션을 계획하는 단계입니다. 이 단계는 다음 작업으로 나눌 수 있습니다.\n사용 사례 카탈로그 작성 및 우선순위 지정\n마이그레이션 프로세스를 여러 반복 작업으로 나누는 것이 좋습니다. 기존 사용 사례와 새로운 사용 사례를 모두 카탈로그로 작성하고 우선순위를 지정합니다. 자세한 내용은 이 문서의 반복적인 접근법을 사용한 마이그레이션 [https://cloud.google.com/bigquery/docs/migration/migration-overview?hl=ko#migrating-using-an-iterative-approach] 및 사용 사례 우선순위 지정 [https://cloud.google.com/bigquery/docs/migration/migration-overview?hl=ko#prioritizing-use-cases] 섹션을 참조하세요.\n성공의 척도 정의\n마이그레이션하기 전에 핵심성과지표(KPI) [https://wikipedia.org/wiki/Performance_indicator]와 같은 명확한 성공의 척도를 정의하면 유용합니다. 이러한 척도를 사용하면 각 반복 작업에서 마이그레이션의 성공 여부를 평가할 수 있습니다. 그러면 이후 반복 작업에서 마이그레이션 프로세스를 개선할 수 있습니다.'
 'BigQuery [https://cloud.google.com/bigquery?hl=ko]\nDocumentation [https://cloud.google.com/bigquery/docs?hl=ko]\n가이드 [https://cloud.google.com/bigquery/docs/introduction?hl=ko]\n의견 보내기\n이 페이지의 내용\n라벨이란 무엇인가요? [https://cloud.google.com/bigquery/docs/labels-intro?hl=ko#what-are-labels]\n라벨 요구사항 [https://cloud.google.com/bigquery/docs/labels-intro?hl=ko#requirements]\n라벨의 일반적인 사용 사례 [https://cloud.google.com/bigquery/docs/labels-intro?hl=ko#common-uses]\n라벨 및 태그 [https://cloud.google.com/bigquery/docs/labels-intro?hl=ko#labels_and_tags]\n다음 단계 [https://cloud.google.com/bigquery/docs/labels-intro?hl=ko#whats_next]\n라벨 소개\nbookmark_border\nBigQuery 리소스를 체계화하기 위해 데이터세트, 테이블, 예약, 뷰에 라벨을 추가할 수 있습니다. 라벨은 리소스에 연결할 수 있는 키-값 쌍입니다. BigQuery 리소스를 만들 때 라벨은 선택사항입니다.\n리소스에 라벨을 지정하면 라벨 값을 기준으로 리소스를 검색할 수 있습니다. 예를 들어 라벨을 사용하여 용도, 환경, 부서 등을 기준으로 데이터세트를 그룹화할 수 있습니다.\n라벨이란 무엇인가요?'
 '마켓 트렌드 및 사용자 구매 행동을 기반으로 제품 추천\n비행 지연 시간 예측\n사기 활동 감지\n부적절한 콘텐츠 신고\n자신의 앱을 경쟁 제품과 차별화할 수 있는 기타 혁신적인 아이디어\n접근법: 가장 위험성이 낮은 사용 사례에 우선순위 지정\nIT 부서에서 마이그레이션 위험이 가장 낮아서 마이그레이션 초기 단계에서 마이그레이션하면 가장 좋은 사용 사례를 평가할 때 유용한 여러 가지 질문이 있습니다. 예를 들면 다음과 같습니다.\n이 사용 사례의 비즈니스 중요도는 어느 정도인가요?\n다수의 직원이나 고객이 이 사용 사례에 의존하나요?\n사용 사례의 대상 환경(예: 개발 또는 프로덕션)은 무엇인가요?\nIT 팀의 사용 사례에 대한 이해도는 어떤가요?\n사용 사례의 종속 항목과 통합은 얼마나 되나요?\nIT 팀이 사용 사례에 대한 적절한 최신 문서를 보유하고 있나요?\n사용 사례의 운영 요구사항(SLA)은 무엇인가요?\n사용 사례에 대한 법적 또는 정부 규정 준수 요구사항은 무엇인가요?\n기본 데이터 세트에 액세스하는 경우의 다운타임 및 지연 시간 민감도는 무엇인가요?\n초기에 사용 사례를 마이그레이션하기를 열망하는 비즈니스 계열 대표가 있나요?\n이 질문 목록을 살펴보면 데이터 세트와 데이터 파이프라인에 위험 순위를 매길 수 있습니다. 위험성이 낮은 애셋을 먼저 마이그레이션하고 위험성이 높은 애셋은 나중에 마이그레이션해야 합니다.\n실행\n레거시 시스템에 대한 정보를 수집하고 우선순위가 지정된 사용 사례 백로그를 만든 후에는 사용 사례를 워크로드로 그룹화하고 반복 작업으로 마이그레이션을 진행할 수 있습니다.\n반복 작업은 단일 사용 사례, 몇 가지 개별 사용 사례 또는 단일 워크로드와 관련된 여러 사용 사례로 구성될 수 있습니다. 반복 작업에 선택하는 이러한 옵션은 사용 사례의 상호 연관성, 공통된 종속 항목, 작업을 수행하는 데 사용할 수 있는 리소스에 따라 다릅니다.\n일반적으로 마이그레이션에는 다음 단계가 포함됩니다.\n이러한 단계에 대해서는 다음 섹션에서 더 자세히 설명합니다. 각 반복 작업에서 이러한 단계를 모두 수행하지 않아도 됩니다. 예를 들어 한 반복 작업에서는 레거시 데이터 웨어하우스의 일부 데이터를 BigQuery로 복사하는 데 집중하고 다음 반복 작업에서는 원래 데이터 소스의 수집 파이프라인을 직접 BigQuery로 수정하는 데 집중할 수 있습니다.\n1. 설정 및 데이터 거버넌스'
 'BigQuery [https://cloud.google.com/bigquery?hl=ko]\nDocumentation [https://cloud.google.com/bigquery/docs?hl=ko]\n가이드 [https://cloud.google.com/bigquery/docs/introduction?hl=ko]\n도움이 되었나요?\n의견 보내기\n이 페이지의 내용\n데이터 파이프라인이란 무엇인가요? [https://cloud.google.com/bigquery/docs/migration/pipelines?hl=ko#what-is-a-data-pipeline]\n데이터 파이프라인을 마이그레이션하는 경우 [https://cloud.google.com/bigquery/docs/migration/pipelines?hl=ko#when_to_migrate_the_data_pipelines]\n데이터 파이프라인을 마이그레이션하는 방법 [https://cloud.google.com/bigquery/docs/migration/pipelines?hl=ko#how_to_migrate_the_data_pipelines]\n데이터 파이프라인의 절차 및 패턴 [https://cloud.google.com/bigquery/docs/migration/pipelines?hl=ko#procedures_and_patterns_for_data_pipelines]\n추출, 변환, 로드(ETL) [https://cloud.google.com/bigquery/docs/migration/pipelines?hl=ko#etl]\n추출, 로드, 변환(ELT) [https://cloud.google.com/bigquery/docs/migration/pipelines?hl=ko#elt]\n추출 및 로드(EL) [https://cloud.google.com/bigquery/docs/migration/pipelines?hl=ko#el]\n변경 데이터 캡처(CDC) [https://cloud.google.com/bigquery/docs/migration/pipelines?hl=ko#cdc]\n데이터 파이프라인 마이그레이션\nbookmark_border']","Dimension API에서 ""COLUMNS""는 시트의 열에서 작동하는 것을 의미합니다. 이는 Dimension API가 시트의 열을 대상으로 작업을 수행할 때 사용됩니다.",COLUMNS는 Dimension API에서 시트의 열에서 작동함을 의미합니다.
ttll이 뭐에요? 그리고 한도 같은거 있나요?,"['TtlConfig\n\nThe TTL (time-to-live) configuration for documents that have this Field set.Storing a timestamp value into a TTL-enabled field will be treated as the document\'s absolute expiration time. Timestamp values in the past indicate that the document is eligible for immediate expiration. Using any other data type or leaving the field absent will disable expiration for the individual document.\n\n| JSON representation |\n| --- |\n| {   ""state"": enum (State) } |\n\n| Fields |\n| --- |\n| state | enum (State) Output only. The state of the TTL configuration. |\n\nState\n\nThe state of applying the TTL configuration to all documents.'
 ""TtlConfig\n\nThe TTL (time-to-live) configuration for documents that have this Field set.Storing a timestamp value into a TTL-enabled field will be treated as the document's absolute expiration time. Timestamp values in the past indicate that the document is eligible for immediate expiration. Using any other data type or leaving the field absent will disable expiration for the individual document.\n\n| Fields |\n| --- |\n| state | State Output only. The state of the TTL configuration. |\n\nState\n\nThe state of applying the TTL configuration to all documents.""
 'Maximum writes per second per database: 10,000\nMaximum concurrent connections for mobile/web clients per database: 1,000,000\n\nOctober 11, 2022\n\nTime-to-live (TTL) policies [https://cloud.google.com/firestore/docs/ttl] are now supported at the General Availability level [https://cloud.google.com/products/#product-launch-stages].\n\nAugust 22, 2022\n\nAdded a query builder and table view to the Firestore data section in the Google Cloud console. Use the query builder to filter and compare many documents at once. To learn more, see Query data in the Google Cloud console [https://cloud.google.com/firestore/docs/using-console#query_data].\n\nJuly 19, 2022\n\nTime-to-live (TTL) policies [https://cloud.google.com/firestore/docs/ttl] now available in Preview [https://cloud.google.com/products/#product-launch-stages].\n\nJune 01, 2022\n\nSupport for VPC Service Controls [https://cloud.google.com/firestore/docs/securing-with-vpc-sc] is now available in General Availability.\n\nMay 13, 2022'
 'TTL(수명)\n\n| 한도 | 세부정보 |\n| --- | --- |\n| 데이터베이스의 최대 TTL 구성 수 | 500 |\n\n도움이 되었나요?\n\n의견 보내기'
 'TTL(수명)\n\n| 한도 | 세부정보 |\n| --- | --- |\n| 데이터베이스의 최대 단일 필드 구성 수 | Google Cloud 프로젝트에 결제를 사용 설정하지 않은 경우 200개입니다. 할당량이 더 필요하다면 Google Cloud 프로젝트에 결제를 사용 설정해야 합니다. Google Cloud 프로젝트에 결제를 사용 설정하면 1,000개입니다. 하나의 필드 수준 구성은 동일한 필드에 여러 구성을 포함할 수 있습니다. 예를 들어 동일한 필드의 단일 필드 색인 생성 예외와 TTL 정책은 한도에서 1개의 필드 구성으로 집계됩니다. |\n\n내보내기/가져오기\n\n다음 한도는 관리형 가져오기 및 내보내기 작업 [https://firebase.google.com/docs/firestore/manage-data/export-import?hl=ko]에 적용됩니다.\n\n| 한도 | 세부정보 |\n| --- | --- |\n| 프로젝트에 분당 허용되는 내보내기 및 가져오기 요청 최대 총합 | 20 |\n| 최대 내보내기 및 가져오기 동시 실행 수 | 50 |\n| 내보내기 및 가져오기 요청의 최대 컬렉션 ID 필터 수 | 100 |\n\n보안 규칙'
 '한도 및 제약조건\n\n컬렉션당 하나의 필드만 TTL 필드로 표시할 수 있습니다.\n필드 수준 TTL 구성은 최대 500개까지 허용됩니다.\n\nTTL 삭제\n\nTTL 기반 삭제의 다음 주요 동작에 유의하세요.\n\nTTL을 통한 삭제는 즉시 처리되지 않습니다. 만료된 문서는 TTL 프로세스에 의해 실제로 삭제될 때까지 쿼리 및 조회 요청에 계속 표시됩니다. TTL은 삭제 기한을 조정하여 삭제에 대한 총 소유 비용을 절감합니다.\n데이터는 일반적으로 만료일로부터 24시간 이내에 삭제됩니다.\n기존 컬렉션에 TTL 정책을 적용하면 새 TTL 정책에 따라 만료된 모든 데이터가 일괄 삭제됩니다. 이 일괄 삭제도 즉시 처리되지 않으며 해당 컬렉션에 있는 데이터의 양에 따라 다릅니다.\n문서의 만료 시간이 과거로 설정되어 있는 상태에서 컬렉션에 새 TTL 정책을 추가하면 TTL 정책 설정이 완료 및 활성화된 후 24시간 이내에 문서가 삭제됩니다.\nTTL이 만료 타임스탬프와 같은 순서로 문서를 삭제하지는 않습니다.\n삭제는 트랜잭션 방식으로 완료되지 않습니다. 만료 시간이 동일한 문서가 반드시 동시에 삭제되지는 않습니다. 이 동작이 필요하면 클라이언트 라이브러리를 사용하여 삭제를 수행합니다.\nMongoDB 호환성을 갖춘 Cloud Firestore는 항상 최신 TTL 필드를 적용하여 만료 시간을 결정합니다. 예를 들어 만료되었지만 아직 삭제되지 않은 문서의 TTL 필드가 이후 날짜로 업데이트된 경우에는 문서가 만료되지 않고 새 날짜가 사용됩니다.\nMongoDB 호환성을 갖춘 Cloud Firestore는 TTL 필드가 Date and time 또는 BSON Date 유형으로 설정된 경우에만 문서가 만료됩니다. 필드를 비워두거나 null과 같은 값으로 설정하면 문서별로 만료를 사용 중지할 수 있습니다.\nTTL은 다른 데이터베이스 활동에 미치는 영향이 최소화되도록 설계되었습니다. TTL 기반 삭제는 더 낮은 우선순위로 처리됩니다. TTL 기반 삭제로 인한 트래픽 급증을 완화하기 위한 다른 전략도 있습니다.\n\nTTL 필드 및 색인'
 '의견 보내기\n\n이 페이지의 내용TTL(수명) 개요 [https://cloud.google.com/firestore/native/docs/ttl?hl=ko#time_to_live_overview]가격 책정 [https://cloud.google.com/firestore/native/docs/ttl?hl=ko#pricing]한도 및 제약조건 [https://cloud.google.com/firestore/native/docs/ttl?hl=ko#limits_and_constraints]TTL 삭제 [https://cloud.google.com/firestore/native/docs/ttl?hl=ko#ttl_deletion]TTL 필드 및 색인 [https://cloud.google.com/firestore/native/docs/ttl?hl=ko#ttl_fields_and_indexes]권한 [https://cloud.google.com/firestore/native/docs/ttl?hl=ko#permissions]시작하기 전에 [https://cloud.google.com/firestore/native/docs/ttl?hl=ko#before_you_begin]TTL 정책 만들기 [https://cloud.google.com/firestore/native/docs/ttl?hl=ko#create_ttl_policy]TTL 정책 사용 설정 기간 [https://cloud.google.com/firestore/native/docs/ttl?hl=ko#ttl_policy_enablement_duration]TTL 정책 보기 [https://cloud.google.com/firestore/native/docs/ttl?hl=ko#view_ttl]View operation details [https://cloud.google.com/firestore/native/docs/ttl?hl=ko#view_operation_details]TTL 정책 사용 중지 [https://cloud.google.com/firestore/native/docs/ttl?hl=ko#disable_ttl]TTL 삭제 모니터링 [https://cloud.google.com/firestore/native/docs/ttl?hl=ko#monitor_ttl]\n\nTTL 정책으로 데이터 보관 관리\n\nbookmark_borderbookmark\n\n컬렉션을 사용해 정리하기']","TTL(Time-to-Live)은 문서의 생존 기간을 설정하는 구성입니다. TTL이 활성화된 필드에 타임스탬프 값을 저장하면 해당 문서의 절대 만료 시간으로 처리됩니다. 과거의 타임스탬프 값은 문서가 즉시 만료될 수 있음을 나타냅니다. 다른 데이터 유형을 사용하거나 필드가 없으면 개별 문서에 대한 만료가 비활성화됩니다.

TTL 정책을 설정할 때의 한도 및 제약조건은 다음과 같습니다:
- 컬렉션당 하나의 필드만 TTL 필드로 표시할 수 있습니다.
- 필드 수준 TTL 구성은 최대 500개까지 허용됩니다.
- Google Cloud 프로젝트에 결제를 사용 설정하지 않은 경우, 최대 단일 필드 구성 수는 200개입니다. 결제를 사용 설정하면 1,000개로 증가합니다.","컬렉션 그룹당 하나의 필드만 TTL 필드로 표시할 수 있고, 필드 수준 구성은 최대 500개까지 허용됩니다. 또한 Datastore 모드의 Firestore 고객은 TTL을 항목 그룹을 사용한 낙관적 동시 실행 모드와 함께 사용할 수 없습니다."
Me want know what FUNCTION_ENTRYPOINT do in gcloud run deploy command?,"['--- 탭: gcloud [https://cloud.google.com/firestore/native/docs/extend-with-cloud-run-functions?hl=ko#gcloud] ---\n```\ngcloud run deploy\nFUNCTION \\\n--source . \\\n--function\nFUNCTION_ENTRYPOINT \\\n--base-image\nBASE_IMAGE_ID \\\n--region\nREGION\n```\n```\ngcloud eventarc triggers create\nTRIGGER_NAME  \\\n--location=\nEVENTARC_TRIGGER_LOCATION \\\n--destination-run-service=\nFUNCTION  \\\n--destination-run-region=\nREGION \\\n--event-filters=""type=google.cloud.firestore.document.v1.created"" \\\n--service-account=\nPROJECT_NUMBER-compute@developer.gserviceaccount.com\n```\n\n--- 탭: Terraform [https://cloud.google.com/firestore/native/docs/extend-with-cloud-run-functions?hl=ko#terraform] ---\nCloud Run 함수의 Eventarc 트리거를 만들려면 Terraform을 사용하여 트리거 만들기 [https://cloud.google.com/eventarc/docs/creating-triggers-terraform?hl=ko]를 참조하세요.\n예시\n\n다음 예에서는 기본 모드 이벤트에서 Firestore를 사용하여 Cloud Run 함수를 트리거하는 방법을 설명합니다.\n\n예 1: Hello Firestore 함수\n\n다음 샘플은 트리거하는 Firestore 이벤트의 필드를 출력합니다.'
 '다음 gcloud dataproc batches submit pyspark [https://cloud.google.com/sdk/gcloud/reference/dataproc/batches/submit/pyspark?hl=ko] 명령어를 사용하여 일괄 작업을 제출합니다.\n\ngcloud dataproc batches submit pyspark PYTHON_SCRIPT_PATH \\\n --version=2.2 \\\n --project=PROJECT_ID \\\n --region=REGION \\\n --deps-bucket=BUCKET_PATH \\\n --properties=""spark.sql.catalog.CATALOG_NAME=org.apache.iceberg.spark.SparkCatalog,spark.sql.catalog.CATALOG_NAME.catalog-impl=org.apache.iceberg.gcp.bigquery.BigQueryMetastoreCatalog,spark.sql.catalog.CATALOG_NAME.gcp_project=PROJECT_ID,spark.sql.catalog.CATALOG_NAME.gcp_location=LOCATION,spark.sql.catalog.CATALOG_NAME.warehouse=WAREHOUSE_DIRECTORY""\n\n다음을 바꿉니다.\n\n\nPYTHON_SCRIPT_PATH: 일괄 작업에서 사용하는 Python 스크립트의 경로\nPROJECT_ID: 일괄 작업을 실행할 Google Cloud 프로젝트의 ID입니다.\nREGION: 워크로드가 실행되는 리전\nBUCKET_PATH: 워크로드 종속 항목을 업로드할 Cloud Storage 버킷의 위치.\n버킷의 gs:// URI 프리픽스는 필요하지 않습니다. 버킷 경로 또는 버킷 이름을 지정할 수 있습니다(예: mybucketname1).'
 ""참고: Terraform 샘플은 일반적으로 필요한 API가 Google Cloud 프로젝트에서 사용 설정되었다고 가정합니다.\n서비스 계정에 액세스 권한 부여\n연결의 서비스 계정에 Vertex AI 사용자 및 스토리지 객체 뷰어 역할을 부여합니다.\n원격 모델을 만들 때 엔드포인트를 URL(예: endpoint = 'https://us-central1-aiplatform.googleapis.com/v1/projects/myproject/locations/us-central1/publishers/google/models/gemini-2.0-flash')로 지정할 계획이라면 URL에 지정한 동일한 프로젝트에서 이 역할을 부여합니다.\n원격 모델을 만들 때 모델 이름을 사용(예: endpoint = 'gemini-2.0-flash')하여 엔드포인트를 지정할 계획이라면 원격 모델을 만들려는 동일한 프로젝트에서 이 역할을 부여합니다.\n다른 프로젝트에서 역할을 부여하면 bqcx-1234567890-wxyz@gcp-sa-bigquery-condel.iam.gserviceaccount.com does not have the permission to access resource 오류가 발생합니다.\n이러한 역할을 부여하려면 다음 단계를 수행합니다.\n--- 탭: 콘솔 ---\nIAM 및 관리자 페이지로 이동합니다.\n\nIAM 및 관리자로 이동 [https://console.cloud.google.com/project/_/iam-admin?hl=ko] \nperson_add 추가를 클릭합니다.\n\n주 구성원 추가 대화상자가 열립니다.\n새 주 구성원 필드에 앞에서 복사한 서비스 계정 ID를 입력합니다.\n역할 선택 필드에서 Vertex AI를 선택한 후 Vertex AI 사용자를 선택합니다.\n다른 역할 추가를 클릭합니다.\n역할 선택 필드에서 Cloud Storage를 선택한 후 스토리지 객체 뷰어를 선택합니다.\n저장을 클릭합니다.\n\n--- 탭: gcloud ---\ngcloud projects add-iam-policy-binding 명령어 [https://cloud.google.com/sdk/gcloud/reference/projects/add-iam-policy-binding?hl=ko]를 사용합니다.""
 ""참고: Terraform 샘플은 일반적으로 필요한 API가 Google Cloud 프로젝트에서 사용 설정되었다고 가정합니다.\n서비스 계정에 액세스 권한 부여\n연결의 서비스 계정에 Vertex AI 사용자 역할을 부여합니다.\n원격 모델을 만들 때 엔드포인트를 URL(예: endpoint = 'https://us-central1-aiplatform.googleapis.com/v1/projects/myproject/locations/us-central1/publishers/google/models/gemini-2.5-flash')로 지정할 계획이라면 URL에 지정한 동일한 프로젝트에서 이 역할을 부여합니다.\n원격 모델을 만들 때 모델 이름을 사용(예: endpoint = 'gemini-2.5-flash')하여 엔드포인트를 지정할 계획이라면 원격 모델을 만들려는 동일한 프로젝트에서 이 역할을 부여합니다.\n다른 프로젝트에서 역할을 부여하면 bqcx-1234567890-wxyz@gcp-sa-bigquery-condel.iam.gserviceaccount.com does not have the permission to access resource 오류가 발생합니다.\n역할을 부여하려면 다음 단계를 따르세요.\n--- 탭: 콘솔 [https://cloud.google.com/bigquery/docs/generate-table?hl=ko#%EC%BD%98%EC%86%94] ---\nIAM 및 관리자 페이지로 이동합니다.\n\nIAM 및 관리자로 이동 [https://console.cloud.google.com/project/_/iam-admin?hl=ko] \nperson_add 추가를 클릭합니다.\n\n주 구성원 추가 대화상자가 열립니다.\n새 주 구성원 필드에 앞에서 복사한 서비스 계정 ID를 입력합니다.\n역할 선택 필드에서 Vertex AI를 선택한 후 Vertex AI 사용자를 선택합니다.\n저장을 클릭합니다.\n\n--- 탭: gcloud [https://cloud.google.com/bigquery/docs/generate-table?hl=ko#gcloud] ---\ngcloud projects add-iam-policy-binding 명령어 [https://cloud.google.com/sdk/gcloud/reference/projects/add-iam-policy-binding?hl=ko]를 사용합니다.""
 '다음 명령어를 사용하여 Google Cloud 에 계정을 인증합니다.\ngcloud auth application-default login\n자세한 내용은 애플리케이션 기본 사용자 인증 정보의 작동 방식 [https://cloud.google.com/docs/authentication/application-default-credentials?hl=ko]을 참고하세요.\n사용자에게 bigquery.admin 및 logging.viewer 역할이 있는지 확인합니다. IAM 역할에 대한 자세한 내용은 액세스 제어 참조 [https://cloud.google.com/bigquery/docs/access-control?hl=ko]를 참고하세요.\n프로젝트의 모든 전송 구성 나열\n프로젝트의 모든 전송 구성을 나열하려면 다음 명령어를 사용합니다.\n  ./dwh-dts-status --list-transfer-configs --project-id=[\nPROJECT_ID] --location=[\nLOCATION]\n다음을 바꿉니다.\nPROJECT_ID : 전송을 실행하는 Google Cloud 프로젝트 ID입니다.\nLOCATION : 전송 구성이 생성된 위치입니다.\n이 명령어는 전송 구성 이름과 ID 목록이 포함된 표를 출력합니다.\n구성의 모든 테이블 상태 보기\n전송 구성에 포함된 모든 테이블의 상태를 보려면 다음 명령어를 사용합니다.\n  ./dwh-dts-status --list-status-for-config --project-id=[\nPROJECT_ID] --config-id=[\nCONFIG_ID] --location=[\nLOCATION]\n다음을 바꿉니다.\nPROJECT_ID: 전송을 실행하는 Google Cloud 프로젝트 ID입니다.\nLOCATION: 전송 구성이 생성된 위치입니다.\nCONFIG_ID: 지정된 전송 구성의 ID입니다.\n이 명령어는 지정된 전송 구성에 있는 테이블 목록과 전송 상태가 포함된 표를 출력합니다. 전송 상태는 PENDING, RUNNING, SUCCEEDED, FAILED, CANCELLED 중 하나일 수 있습니다.\n데이터베이스의 모든 테이블 상태 보기\n특정 데이터베이스에서 전송된 모든 테이블의 상태를 보려면 다음 명령어를 사용합니다.\n  ./dwh-dts-status --list-status-for-database --project-id=[\nPROJECT_ID] --database=[']",The `FUNCTION_ENTRYPOINT` in the `gcloud run deploy` command specifies the entry point of the function you are deploying. It is the function within your code that will be executed when the Cloud Run service is triggered. This is a required parameter to ensure that the correct function is called when the service is invoked.,FUNCTION_ENTRYPOINT는 gcloud run deploy 명령어에서 함수의 진입점을 지정하는 데 사용됩니다.
Google 피트니스 심박수 데이터 읽기 권한 범위는?,"['https://www.googleapis.com/auth/fitness.body_temperature.write Google 피트니스의 체온 정보에 추가합니다. Google에서 이 앱으로 내 체온 정보를 사용하는 것에 동의합니다.\nhttps://www.googleapis.com/auth/fitness.heart_rate.read Google 피트니스에서 내 심박수 데이터를 확인하세요. Google에서 이 앱을 사용하여 내 심박수 정보를 공유하는 것에 동의합니다.\nhttps://www.googleapis.com/auth/fitness.heart_rate.write Google 피트니스의 심박수 데이터에 추가합니다. Google에서 이 앱으로 내 심박수 정보를 사용하는 것에 동의합니다.\nhttps://www.googleapis.com/auth/fitness.location.read Google 피트니스 속도 및 거리 데이터 확인\nhttps://www.googleapis.com/auth/fitness.location.write Google 피트니스 위치 데이터에 추가\nhttps://www.googleapis.com/auth/fitness.nutrition.read Google 피트니스에서 영양 정보 확인\nhttps://www.googleapis.com/auth/fitness.nutrition.write Google 피트니스의 영양 정보에 추가\nhttps://www.googleapis.com/auth/fitness.oxygen_saturation.read Google 피트니스에서 산소 포화도 정보 확인 Google에서 이 앱을 사용하여 내 산소 포화도 정보를 공유하는 것에 동의합니다.\nhttps://www.googleapis.com/auth/fitness.oxygen_saturation.write Google 피트니스에서 산소 포화도 정보를 추가합니다. Google에서 이 앱으로 내 산소 포화도 정보를 사용하는 것에 동의합니다.\nhttps://www.googleapis.com/auth/fitness.reproductive_health.read Google 피트니스에서 내 생식 건강 정보를 확인합니다. Google에서 이 앱을 사용하여 내 생식 건강 정보를 공유하는 것에 동의합니다.'
 'Fitness API [https://developers.google.com/fit/rest/v1/get-started?hl=ko], v1\n범위 설명\nhttps://www.googleapis.com/auth/fitness.activity.read Google 피트니스를 사용하여 신체 활동 데이터를 확인하고 저장\nhttps://www.googleapis.com/auth/fitness.activity.write Google 피트니스 신체 활동 데이터에 추가\nhttps://www.googleapis.com/auth/fitness.blood_glucose.read Google 피트니스에서 혈당 정보 확인 Google에서 이 앱을 사용하여 내 혈당 정보를 공유하는 것에 동의합니다.\nhttps://www.googleapis.com/auth/fitness.blood_glucose.write Google 피트니스에 혈당 정보를 추가합니다. Google에서 이 앱으로 내 혈당 정보를 사용하는 것에 동의합니다.\nhttps://www.googleapis.com/auth/fitness.blood_pressure.read Google 피트니스에서 혈압 정보 확인 Google에서 이 앱을 사용하여 내 혈압 정보를 공유하는 것에 동의합니다.\nhttps://www.googleapis.com/auth/fitness.blood_pressure.write Google 피트니스에서 혈압 정보를 추가합니다. Google에서 이 앱으로 내 혈압 정보를 사용하는 것에 동의합니다.\nhttps://www.googleapis.com/auth/fitness.body.read Google 피트니스에서 신체 측정 정보 확인\nhttps://www.googleapis.com/auth/fitness.body.write Google 피트니스에 신체 측정 정보 추가\nhttps://www.googleapis.com/auth/fitness.body_temperature.read Google 피트니스에서 체온 정보 확인 Google에서 이 앱을 사용하여 내 체온 정보를 공유하는 것에 동의합니다.\nhttps://www.googleapis.com/auth/fitness.body_temperature.write Google 피트니스의 체온 정보에 추가합니다. Google에서 이 앱으로 내 체온 정보를 사용하는 것에 동의합니다.'
 'https://www.googleapis.com/auth/fitness.reproductive_health.read Google 피트니스에서 내 생식 건강 정보를 확인합니다. Google에서 이 앱을 사용하여 내 생식 건강 정보를 공유하는 것에 동의합니다.\nhttps://www.googleapis.com/auth/fitness.reproductive_health.write Google 피트니스에서 생식 건강 정보를 추가합니다. Google에서 이 앱으로 내 생식 건강 정보를 사용하는 것에 동의합니다.\nhttps://www.googleapis.com/auth/fitness.sleep.read Google 피트니스에서 수면 데이터를 확인할 수 있습니다. Google에서 내 수면 정보를 이 앱과 공유하는 것에 동의합니다.\nhttps://www.googleapis.com/auth/fitness.sleep.write Google 피트니스의 수면 데이터에 추가합니다. Google에서 이 앱으로 내 수면 정보를 사용하는 것에 동의합니다.\nGKE Hub API [https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster?hl=ko], v2\n범위 설명\nhttps://www.googleapis.com/auth/cloud-platform Google Cloud 데이터 확인, 수정, 구성, 삭제 및 Google 계정 이메일 주소 확인\nGKE On-Prem API [https://cloud.google.com/anthos/clusters/docs/on-prem/?hl=ko], v1\n범위 설명\nhttps://www.googleapis.com/auth/cloud-platform Google Cloud 데이터 확인, 수정, 구성, 삭제 및 Google 계정 이메일 주소 확인\nGmail API [https://developers.google.com/workspace/gmail/api?hl=ko], v1\n범위 설명\nhttps://mail.google.com/ Gmail에서 모든 이메일 조회, 작성, 전송, 영구 삭제\nhttps://www.googleapis.com/auth/gmail.addons.current.action.compose 부가기능을 사용할 때 임시보관된 이메일 관리 및 이메일 전송'
 'Google Drive의 파일 메타데이터를 보기 위한 읽기 전용 액세스 권한과 Google Calendar 일정을 보기 위한 읽기 전용 액세스 권한을 요청하는 다음 샘플 URL을 클릭하여 이 흐름을 테스트할 수 있습니다.\n\n\n        https://accounts.google.com/o/oauth2/v2/auth?\n scope=https%3A//www.googleapis.com/auth/drive.metadata.readonly%20https%3A//www.googleapis.com/auth/calendar.readonly&\n include_granted_scopes=true&\n response_type=token&\n state=state_parameter_passthrough_value&\n redirect_uri=https%3A//oauth2.example.com/code&\n client_id=client_id [https://accounts.google.com/o/oauth2/v2/auth?scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive.metadata.readonly+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcalendar.readonly&%3Bstate=state_parameter_passthrough_value&%3Bredirect_uri=https%3A%2F%2Foauth2.example.com%2Fcode&%3Bresponse_type=token&%3Bclient_id=583306224539-atbcaa8ne8g85e8kc006o6vmq99qiid0.apps.googleusercontent.com&hl=ko]'
 ""승인 범위\n기존 범위 https://www.google.com/m8/feeds은 https://www.googleapis.com/auth/contacts 범위의 별칭입니다. 즉, 기존 범위의 기존 OAuth 권한 부여는 https://www.googleapis.com/auth/contacts 범위가 필요한 People API의 모든 엔드포인트에서 작동합니다. 연락처와 연락처 그룹을 읽고 쓰는 기능은 기존 범위에서 작동합니다.\nPeople API에서 '기타 연락처' 또는 디렉터리 데이터에 액세스하려면 새 범위가 필요합니다. 필요한 범위는 위 세부정보를 참고하세요.\n자세한 내용은 요청 승인 [https://developers.google.com/people/v1/how-tos/authorizing?hl=ko]을 참고하세요.\n클라이언트 라이브러리\nApps Script의 경우 고급 사용자 서비스 [https://developers.google.com/apps-script/advanced/people?hl=ko]를 참고하세요.\n지원되는 다른 언어는 클라이언트 라이브러리 설치 [https://developers.google.com/people/v1/libraries?hl=ko]를 참고하세요.\n도움이 되었나요?""
 '신원을 정확하게 나타내야 합니다.\n유효한 앱 이름과 사용자에게 표시할 로고(선택사항)를 입력합니다. 이 브랜드 정보는 애플리케이션의 ID를 정확하게 나타내야 [https://developers.google.com/terms/api-services-user-data-policy?hl=ko#accurately_represent_your_identity_and_intent] 합니다. 앱 브랜딩 정보는 OAuth 에서 구성됩니다.\n프로덕션 앱의 경우 OAuth 동의 화면에 정의된 브랜드 정보는 사용자에게 표시되기 전에 확인되어야 [https://developers.google.com/identity/protocols/oauth2/production-readiness/brand-verification?hl=ko] 합니다. 브랜드 인증을 완료한 앱은 사용자의 앱 액세스 권한 부여 가능성을 높일 수 있습니다. 앱 이름, 홈페이지, 서비스 약관, 개인정보처리방침을 비롯한 기본 애플리케이션 정보는 사용자가 기존 부여를 검토할 때 부여 화면에 표시되거나 조직의 앱 사용을 검토하는 Google Workspace 관리자에게 표시됩니다.\nGoogle은 ID를 허위로 진술하거나 사용자를 속이려는 앱의 Google API 서비스 및 기타 Google 제품 및 서비스에 대한 액세스 권한을 취소하거나 정지할 수 있습니다.\n필요한 범위만 요청\n애플리케이션을 개발하는 동안 API의 기능과 기능에 관해 자세히 알아보기 위해 API에서 제공하는 예시 범위를 사용하여 애플리케이션 내에서 개념 증명을 만들었을 수 있습니다. 이러한 예시 범위는 특정 API에 대해 가능한 모든 작업을 포괄적으로 다루므로 앱 요구사항의 최종 구현보다 더 많은 정보를 요청하는 경우가 많습니다. 예를 들어 예시 범위는 읽기, 쓰기, 삭제 권한을 요청할 수 있지만 애플리케이션에는 읽기 권한만 필요할 수 있습니다. 애플리케이션을 구현하는 데 필요한 중요한 정보로 제한된 관련 권한을 요청 [https://developers.google.com/terms/api-services-user-data-policy?hl=ko#request_relevant_permissions]합니다.']",Google 피트니스에서 심박수 데이터를 읽기 위해 필요한 OAuth 2.0 범위는 `https://www.googleapis.com/auth/fitness.heart_rate.read`입니다.,Google 피트니스에서 심박수 데이터를 확인하기 위해 필요한 OAuth 2.0 범위는 https://www.googleapis.com/auth/fitness.heart_rate.read 입니다.
projets.databeses.gte 메서드 쓸때 HTTP 리퀘스트 포맷이 뭐에요?,"['Source URL: https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/get?hl=ko\nTitle: Method: projects.databases.get\nbookmark_border\n\nSend feedback\n\nMethod: projects.databases.get\n\nbookmark_borderbookmark\n\nStay organized with collections\n\nSave and categorize content based on your preferences.\n\n이 페이지의 내용HTTP request [https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/get#http-request]Path parameters [https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/get#path-parameters]Request body [https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/get#request-body]Response body [https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/get#response-body]Authorization scopes [https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/get#authorization-scopes]사용해 보기 [https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/get#try-it]\n\nGets information about a database.\n\nHTTP request\nGET https://firestore.googleapis.com/v1/{name=projects/*/databases/*}The URL uses gRPC Transcoding [https://google.aip.dev/127] syntax.'
 'Source URL: https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields/get?hl=ko\nTitle: Method: projects.databases.collectionGroups.fields.get\n\nSend feedback\n\nMethod: projects.databases.collectionGroups.fields.get\n\nStay organized with collections\n\nSave and categorize content based on your preferences.\n\nGets the metadata and configuration for a Field.\n\nHTTP request\nGET https://firestore.googleapis.com/v1/{name=projects/*/databases/*/collectionGroups/*/fields/*}The URL uses gRPC Transcoding [https://google.aip.dev/127] syntax.\n\nPath parameters\n| Parameters |\n| --- |\n| name | string Required. A name of the form projects/{projectId}/databases/{databaseId}/collectionGroups/{collectionId}/fields/{field_id} |\n\nRequest body\nThe request body must be empty.\n\nResponse body\nIf successful, the response body contains an instance of Field [https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.collectionGroups.fields#Field].\n\nAuthorization scopes\nRequires one of the following OAuth scopes:'
 'Source URL: https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/patch?hl=ko\nTitle: Method: projects.databases.patch\n\nSend feedback\n\nMethod: projects.databases.patch\n\nStay organized with collections\n\nSave and categorize content based on your preferences.\n\nUpdates a database.\n\nHTTP request\nPATCH https://firestore.googleapis.com/v1/{database.name=projects/*/databases/*}The URL uses gRPC Transcoding [https://google.aip.dev/127] syntax.\n\nPath parameters\n| Parameters |\n| --- |\n| database.name | string The resource name of the Database. Format: projects/{project}/databases/{database} |\n\nQuery parameters\n| Parameters |\n| --- |\n| updateMask | string (FieldMask format) The list of fields to be updated. This is a comma-separated list of fully qualified names of fields. Example: ""user.displayName,photo"". |\n\nRequest body\nThe request body contains an instance of Database [https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases#Database].\n\nResponse body\nIf successful, the response body contains an instance of Operation [https://firebase.google.com/docs/firestore/reference/rest/Shared.Types/Operation].'
 'Source URL: https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases/list?hl=ko\nTitle: Method: projects.databases.list\n\nSend feedback\n\nMethod: projects.databases.list\n\nStay organized with collections\n\nSave and categorize content based on your preferences.\n\nList all the databases in the project.\n\nHTTP request\nGET https://firestore.googleapis.com/v1/{parent=projects/*}/databasesThe URL uses gRPC Transcoding [https://google.aip.dev/127] syntax.\n\nPath parameters\n| Parameters |\n| --- |\n| parent | string Required. A parent name of the form projects/{projectId} |\n\nQuery parameters\n| Parameters |\n| --- |\n| showDeleted | boolean If true, also returns deleted resources. |\n\nRequest body\nThe request body must be empty.\n\nResponse body\n\nThe list of databases for a project.\nIf successful, the response body contains data with the following structure:\n\n| JSON representation |\n| --- |\n| {   ""databases"": [     {       object (Database)     }   ],   ""unreachable"": [     string   ] } |'
 'Source URL: https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules/get?hl=ko\nTitle: Method: projects.databases.backupSchedules.get\n\nSend feedback\n\nMethod: projects.databases.backupSchedules.get\n\nStay organized with collections\n\nSave and categorize content based on your preferences.\n\nGets information about a backup schedule.\n\nHTTP request\nGET https://firestore.googleapis.com/v1/{name=projects/*/databases/*/backupSchedules/*}The URL uses gRPC Transcoding [https://google.aip.dev/127] syntax.\n\nPath parameters\n| Parameters |\n| --- |\n| name | string Required. The name of the backup schedule. Format projects/{project}/databases/{database}/backupSchedules/{backupSchedule} |\n\nRequest body\nThe request body must be empty.\n\nResponse body\nIf successful, the response body contains an instance of BackupSchedule [https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases.backupSchedules#BackupSchedule].\n\nAuthorization scopes\nRequires one of the following OAuth scopes:'
 'HTTP request\nGET https://firestore.googleapis.com/v1/{name=projects/*/databases/*}The URL uses gRPC Transcoding [https://google.aip.dev/127] syntax.\n\nPath parameters\n| Parameters |\n| --- |\n| name | string Required. A name of the form projects/{projectId}/databases/{databaseId} |\n\nRequest body\nThe request body must be empty.\n\nResponse body\nIf successful, the response body contains an instance of Database [https://firebase.google.com/docs/firestore/reference/rest/v1/projects.databases#Database].\n\nAuthorization scopes\nRequires one of the following OAuth scopes:\n\nhttps://www.googleapis.com/auth/datastore\nhttps://www.googleapis.com/auth/cloud-platform\nFor more information, see the OAuth 2.0 Overview [https://developers.google.com/identity/protocols/OAuth2].\n\nSend feedback'
 'HTTP request\nGET https://firestore.googleapis.com/v1/{name=projects/*/databases/*}The URL uses gRPC Transcoding [https://google.aip.dev/127] syntax.\n\nPath parameters\n| Parameters |\n| --- |\n| name | string Required. A name of the form projects/{projectId}/databases/{databaseId} |\n\nRequest body\nThe request body must be empty.\n\nResponse body\nIf successful, the response body contains an instance of Database [https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases#Database].\n\nAuthorization scopes\nRequires one of the following OAuth scopes:\n\nhttps://www.googleapis.com/auth/datastore\nhttps://www.googleapis.com/auth/cloud-platform\nFor more information, see the Authentication Overview [https://cloud.google.com/docs/authentication#authorization-gcp].\n\nSend feedback'
 'URL은 gRPC 트랜스코딩 [https://google.aip.dev/127] 문법을 사용합니다.\n경로 매개변수\n매개변수\nfileId\nstring\n필수 항목입니다. 요청이 있는 항목의 ID입니다.\nproposalId\nstring\n필수 항목입니다. 해결할 액세스 제안의 ID입니다.\n요청 본문\n요청 본문은 비어 있어야 합니다.\n응답 본문\n성공한 경우 응답 본문에 AccessProposal [https://developers.google.com/workspace/drive/api/reference/rest/v3/accessproposals?hl=ko#AccessProposal]의 인스턴스가 포함됩니다.\n승인 범위\n다음 OAuth 범위 중 하나가 필요합니다.\nhttps://www.googleapis.com/auth/docs\nhttps://www.googleapis.com/auth/drive\nhttps://www.googleapis.com/auth/drive.file\nhttps://www.googleapis.com/auth/drive.metadata\nhttps://www.googleapis.com/auth/drive.metadata.readonly\nhttps://www.googleapis.com/auth/drive.readonly\n일부 범위는 제한되어 있으며 앱에서 이를 사용하려면 보안 평가가 필요합니다. 자세한 내용은 승인 가이드 [https://developers.google.com/workspace/guides/configure-oauth-consent?hl=ko]를 참고하세요.\n의견 보내기'
 'Gets a single document.\n\nHTTP request\nGET https://firestore.googleapis.com/v1beta1/{name=projects/*/databases/*/documents/*/**}The URL uses gRPC Transcoding [https://google.aip.dev/127] syntax.\n\nPath parameters\n| Parameters |\n| --- |\n| name | string Required. The resource name of the Document to get. In the format: projects/{projectId}/databases/{databaseId}/documents/{document_path}. |'
 'HTTP 요청\nGET https://people.googleapis.com/v1/people:batchGet\nURL은 gRPC 트랜스코딩 [https://google.aip.dev/127] 구문을 사용합니다.\n쿼리 매개변수\n매개변수\nresourceNames[]\nstring\n필수 항목입니다. 정보를 제공할 사용자의 리소스 이름입니다. 반복할 수 있습니다. URL 쿼리 매개변수는 다음과 같아야 합니다.\nresourceNames=<name1>&resourceNames=<name2>&...\n인증된 사용자에 대한 정보를 가져오려면 people/me를 지정하세요.\nGoogle 계정에 대한 정보를 가져오려면 people/{account_id}를 지정합니다.\n연락처에 대한 정보를 가져오려면 people.connections.list [https://developers.google.com/people/api/rest/v1/people.connections/list?hl=ko#google.people.v1.PeopleService.ListConnections]에서 반환된 연락처를 식별하는 리소스 이름을 지정합니다.\n최대 200개의 리소스 이름을 사용할 수 있습니다.\nrequestMask\n(deprecated)\nobject (RequestMask [https://developers.google.com/people/api/rest/v1/RequestMask?hl=ko])\n지원 중단됨 (대신 personFields 사용)\n결과를 사용자 필드의 하위 집합으로 제한하는 마스크입니다.\npersonFields\nstring (FieldMask [https://developers.google.com/protocol-buffers/docs/reference/google.protobuf?hl=ko#google.protobuf.FieldMask] format)\n필수 항목입니다. 각 사용자의 어떤 필드가 반환되는지를 제한하는 필드 마스크입니다. 여러 필드를 쉼표로 구분하여 지정할 수 있습니다. 유효한 값은 다음과 같습니다.\naddresses\nageRanges\n전기\n생일\ncalendarUrls\nclientData\ncoverPhotos\nemailAddresses\n이벤트\nexternalIds\n성별\nimClients\n관심분야\nlocales\n위치\n멤버십\n메타데이터\nmiscKeywords\n이름\n닉네임\n직업\norganizations\nphoneNumbers\n사진']","projects.databases.get 메서드를 사용할 때의 HTTP 요청 형식은 다음과 같습니다:

```
GET https://firestore.googleapis.com/v1/{name=projects/*/databases/*}
```

이 URL은 gRPC Transcoding 구문을 사용하며, 요청 본문은 비어 있어야 합니다.","HTTP 요청 형식은 다음과 같습니다:
```
GET https://firestore.googleapis.com/v1/{name=projects/*/databases/*}
```"
"Google Developers Console을 활용하여 YouTube Data API를 사용 설정하려면 어떤 절차를 따라야 하며, 첫 번째 단계에서 반드시 수행해야 하는 작업은 무엇입니까?","['YouTube에서 Shorts 동영상의 조회수를 집계하는 방식에 맞게 Data API를 업데이트하고 있습니다. 자세히 알아보기 [https://developers.google.com/youtube/v3/revision_history?hl=ko#march-26,-2025]\n이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.\nSwitch to English\n홈 [https://developers.google.com/?hl=ko]\n제품 [https://developers.google.com/products?hl=ko]\nYouTube [https://developers.google.com/youtube?hl=ko]\nData API [https://developers.google.com/youtube/v3?hl=ko]\n가이드 [https://developers.google.com/youtube/v3/getting-started?hl=ko]\nGo 빠른 시작\nbookmark_border\n이 페이지의 내용\n기본 요건\n1단계: YouTube Data API 사용 설정하기\n2단계: 작업공간 준비하기\n3단계: 샘플 설정\n4단계: 샘플 실행\n메모\n추가 자료\n이 페이지의 나머지 부분에서 설명하는 단계를 완료하면 약 5분 후에 YouTube Data API에 요청을 수행하는 간단한 Go 명령줄 애플리케이션이 생성됩니다.\n이 가이드에 사용된 샘플 코드는 GoogleDevelopers YouTube 채널의 channel 리소스를 검색하고 이 리소스에서 기본 정보를 출력합니다.\n기본 요건\n이 빠른 시작을 실행하려면 다음이 필요합니다.\nGo [https://golang.org/], 최신 버전 권장\nGit [https://git-scm.com/], 최신 버전 권장\n인터넷 및 웹브라우저 액세스\nGoogle 계정\n1단계: YouTube Data API 사용 설정하기\n이 마법사 [https://console.developers.google.com/start/api?id=youtube&hl=ko]를 사용하여 Google Developers Console에서 프로젝트를 만들거나 선택하고 API를 자동으로 사용 설정하세요. 계속을 클릭한 다음 사용자 인증 정보로 이동을 클릭합니다.\n사용자 인증 정보 만들기 페이지에서 취소 버튼을 클릭합니다.'
 'YouTube에서 Shorts 동영상의 조회수를 집계하는 방식에 맞게 Data API를 업데이트하고 있습니다. 자세히 알아보기 [https://developers.google.com/youtube/v3/revision_history?hl=ko#march-26,-2025]\n이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.\nSwitch to English\n홈 [https://developers.google.com/?hl=ko]\n제품 [https://developers.google.com/products?hl=ko]\nYouTube [https://developers.google.com/youtube?hl=ko]\nData API [https://developers.google.com/youtube/v3?hl=ko]\n가이드 [https://developers.google.com/youtube/v3/getting-started?hl=ko]\nRuby 빠른 시작\nbookmark_border\n이 페이지의 내용\n기본 요건\n1단계: YouTube Data API 사용 설정하기\n2단계: Google 클라이언트 라이브러리 설치하기\n3단계: 샘플 설정\n4단계: 샘플 실행\n메모\n추가 자료\n이 페이지의 나머지 부분에 설명된 단계를 완료하면 약 5분 후에 YouTube Data API에 요청을 수행하는 간단한 Ruby 명령줄 애플리케이션을 사용할 수 있습니다.\n이 가이드에 사용된 샘플 코드는 GoogleDevelopers YouTube 채널의 channel 리소스를 검색하고 이 리소스에서 기본 정보를 출력합니다.\n기본 요건\n이 빠른 시작을 실행하려면 다음이 필요합니다.\nRuby 2.0 이상\n인터넷 및 웹브라우저 액세스\nGoogle 계정\n1단계: YouTube Data API 사용 설정하기\n이 마법사 [https://console.developers.google.com/start/api?id=youtube&hl=ko]를 사용하여 Google Developers Console에서 프로젝트를 만들거나 선택하고 API를 자동으로 사용 설정하세요. 계속을 클릭한 다음 사용자 인증 정보로 이동을 클릭합니다.\n사용자 인증 정보 만들기 페이지에서 취소 버튼을 클릭합니다.'
 'YouTube에서 Shorts 동영상의 조회수를 집계하는 방식에 맞게 Data API를 업데이트하고 있습니다. 자세히 알아보기 [https://developers.google.com/youtube/v3/revision_history?hl=ko#march-26,-2025]\n이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.\nSwitch to English\n홈 [https://developers.google.com/?hl=ko]\n제품 [https://developers.google.com/products?hl=ko]\nYouTube [https://developers.google.com/youtube?hl=ko]\nData API [https://developers.google.com/youtube/v3?hl=ko]\n가이드 [https://developers.google.com/youtube/v3/getting-started?hl=ko]\n자바스크립트 빠른 시작\nbookmark_border\n이 페이지의 내용\n기본 요건\n1단계: 프로젝트 및 사용자 인증 정보 설정하기\n2단계: 샘플 설정 및 실행\n3단계: 승인된 요청 실행\n추가 자료\n이 빠른 시작 가이드에서는 YouTube Data API에 요청하는 간단한 페이지를 설정하는 방법을 설명합니다. 이 빠른 시작에서는 실제로 두 가지 API 요청을 수행하는 방법을 설명합니다.\n애플리케이션을 식별하는 API 키를 사용하여 GoogleDevelopers YouTube 채널에 대한 정보를 검색합니다.\nOAuth 2.0 클라이언트 ID를 사용하여 YouTube 채널에 대한 정보를 검색하는 승인된 요청을 제출합니다.\n참고: 일반적으로 API 키를 사용하는 모든 사용 사례의 경우 첫 번째 예시의 안내를 따르고 OAuth 2.0을 사용한 승인이 필요한 사용 사례의 경우 두 번째 예시의 안내를 따르면 됩니다. 더 많은 예는 사용 사례 및 코드 샘플 도구 [https://developers.google.com/youtube/v3/code_samples/code_snippets?hl=ko]를 참고하세요.\n기본 요건\n이 빠른 시작을 실행하려면 다음이 필요합니다.\nPython 2.4 이상 (웹 서버 제공용)\n인터넷 및 웹브라우저 액세스\nGoogle 계정'
 'YouTube에서 Shorts 동영상의 조회수를 집계하는 방식에 맞게 Data API를 업데이트하고 있습니다. 자세히 알아보기 [https://developers.google.com/youtube/v3/revision_history?hl=ko#march-26,-2025]\n이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.\nSwitch to English\n홈 [https://developers.google.com/?hl=ko]\n제품 [https://developers.google.com/products?hl=ko]\nYouTube [https://developers.google.com/youtube?hl=ko]\nData API [https://developers.google.com/youtube/v3?hl=ko]\n가이드 [https://developers.google.com/youtube/v3/getting-started?hl=ko]\nNode.js 빠른 시작\nbookmark_border\n이 페이지의 내용\n기본 요건\n1단계: YouTube Data API 사용 설정\n2단계: 클라이언트 라이브러리 설치\n3단계: 샘플 설정\n4단계: 샘플 실행\n참고\n추가 자료\n이 페이지의 나머지 부분에 설명된 단계를 완료하면 약 5분 내에 YouTube Data API를 요청하는 간단한 Node.js 명령줄 애플리케이션이 생성됩니다.\n이 가이드에서 사용된 샘플 코드는 GoogleDevelopers YouTube 채널의 channel 리소스를 가져와 해당 리소스의 일부 기본 정보를 출력합니다.\n기본 요건\n이 빠른 시작을 실행하려면 다음이 필요합니다.\nNode.js가 설치되었습니다.\nnpm [https://www.npmjs.com/] 패키지 관리 도구 (Node.js와 함께 제공됨)\n인터넷 및 웹브라우저 액세스\nGoogle 계정\n1단계: YouTube Data API 사용 설정\n이 마법사 [https://console.developers.google.com/start/api?id=youtube&hl=ko]를 사용하여 Google Developers Console에서 프로젝트를 만들거나 선택하고 API를 자동으로 사용 설정합니다. 계속을 클릭한 다음 사용자 인증 정보로 이동을 클릭합니다.'
 'YouTube에서 Shorts 동영상의 조회수를 집계하는 방식에 맞게 Data API를 업데이트하고 있습니다. 자세히 알아보기 [https://developers.google.com/youtube/v3/revision_history?hl=ko#march-26,-2025]\n이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.\nSwitch to English\n홈 [https://developers.google.com/?hl=ko]\n제품 [https://developers.google.com/products?hl=ko]\nYouTube [https://developers.google.com/youtube?hl=ko]\nData API [https://developers.google.com/youtube/v3?hl=ko]\n가이드 [https://developers.google.com/youtube/v3/getting-started?hl=ko]\n도움이 되었나요?\nAndroid 빠른 시작\nbookmark_border\n이 페이지의 내용\n기본 요건 [https://developers.google.com/youtube/v3/quickstart/android?hl=ko#prerequisites]\n1단계: SHA1 지문 획득 [https://developers.google.com/youtube/v3/quickstart/android?hl=ko#step_1_acquire_a_sha1_fingerprint]\n2단계: YouTube Data API 사용 설정 [https://developers.google.com/youtube/v3/quickstart/android?hl=ko#step_2_turn_on_the]\n3단계: 새 Android 프로젝트 만들기 [https://developers.google.com/youtube/v3/quickstart/android?hl=ko#step_3_create_a_new_android_project]\n4단계: 프로젝트 준비 [https://developers.google.com/youtube/v3/quickstart/android?hl=ko#step_4_prepare_the_project]'
 ""If you are not using a client library, you need to set the access_type HTTP query parameter to offline when redirecting the user to Google's OAuth 2.0 server [https://developers.google.com/youtube/v3/guides/auth/server-side-web-apps?hl=ko#redirecting]. In that case, Google's authorization server returns a refresh token when you exchange an authorization code [https://developers.google.com/youtube/v3/guides/auth/server-side-web-apps?hl=ko#exchange-authorization-code] for an access token. Then, if the access token expires (or at any other time), you can use a refresh token to obtain a new access token.\nRequesting offline access is a requirement for any application that needs to access a Google API when the user is not present. For example, an app that performs backup services or executes actions at predetermined times needs to be able to refresh its access token when the user is not present. The default style of access is called online.\nServer-side web applications, installed applications, and devices all obtain refresh tokens during the authorization process. Refresh tokens are not typically used in client-side (JavaScript) web applications.\n--- 탭: PHP ---""
 ""if __name__ == '__main__':\n  # When running locally, disable OAuthlib's HTTPs verification.\n  # ACTION ITEM for developers:\n  #     When running in production *do not* leave this option enabled.\n  os.environ['OAUTHLIB_INSECURE_TRANSPORT'] = '1'\n\n  # This disables the requested scopes and granted scopes check.\n  # If users only grant partial request, the warning would not be thrown.\n  os.environ['OAUTHLIB_RELAX_TOKEN_SCOPE'] = '1'\n\n  # Specify a hostname and port that are set as a valid redirect URI\n  # for your API project in the Google API Console.\n  app.run('localhost', 8080, debug=True)\n\n--- 탭: Ruby ---\n이 예시에서는 Sinatra [http://www.sinatrarb.com/] 프레임워크를 사용합니다.\n\nrequire 'googleauth'\nrequire 'googleauth/web_user_authorizer'\nrequire 'googleauth/stores/redis_token_store'\n\nrequire 'google/apis/youtube_v3'\n\nrequire 'sinatra'\n\nconfigure do\n  enable :sessions\n\n  # Required, call the from_file method to retrieve the client ID from a\n  # client_secret.json file.\n  set :client_id, Google::Auth::ClientId.from_file('/path/to/client_secret.json')""
 '/**\n     * Display an error dialog showing that Google Play Services is missing\n     * or out of date.\n     * @param connectionStatusCode code describing the presence (or lack of)\n     *     Google Play Services on this device.\n     */\n    void showGooglePlayServicesAvailabilityErrorDialog(\n            final int connectionStatusCode) {\n        GoogleApiAvailability apiAvailability = GoogleApiAvailability.getInstance();\n        Dialog dialog = apiAvailability.getErrorDialog(\n                MainActivity.this,\n                connectionStatusCode,\n                REQUEST_GOOGLE_PLAY_SERVICES);\n        dialog.show();\n    }\n\n    /**\n     * An asynchronous task that handles the YouTube Data API call.\n     * Placing the API calls in their own task ensures the UI stays responsive.\n     */\n    private class MakeRequestTask extends AsyncTask<Void, Void, List<String>> {\n        private com.google.api.services.youtube.YouTube mService = null;\n        private Exception mLastError = null;'
 '--- 탭: 예 2 ---\nURL: https://www.googleapis.com/youtube/v3/videos?id=7lCDEYXw3mM&key=YOUR_API_KEY     &part=snippet,statistics\n\nDescription: This example modifies the part parameter value so that the\n             contentDetails and status properties are not included\n             in the response.\n\nAPI response:'
 ""예를 들어 다음 코드는 사용자의 YouTube 계정을 관리하기 위한 오프라인 액세스를 요청합니다.\n\n\nimport google.oauth2.credentials\nimport google_auth_oauthlib.flow\n\n# Required, call the from_client_secrets_file method to retrieve the client ID from a\n# client_secret.json file. The client ID (from that file) and access scopes are required. (You can\n# also use the from_client_config method, which passes the client configuration as it originally\n# appeared in a client secrets file but doesn't access the file itself.)\nflow = google_auth_oauthlib.flow.Flow.from_client_secrets_file('client_secret.json',\n    scopes=['https://www.googleapis.com/auth/youtube.force-ssl'])\n\n# Required, indicate where the API server will redirect the user after the user completes\n# the authorization flow. The redirect URI is required. The value must exactly\n# match one of the authorized redirect URIs for the OAuth 2.0 client, which you\n# configured in the API Console. If this value doesn't match an authorized URI,\n# you will get a 'redirect_uri_mismatch' error.\nflow.redirect_uri = 'https://www.example.com/oauth2callback'""
 'YouTube에서 Shorts 동영상의 조회수를 집계하는 방식에 맞게 Data API를 업데이트하고 있습니다. 자세히 알아보기 [https://developers.google.com/youtube/v3/revision_history?hl=ko#march-26,-2025]\n이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.\nSwitch to English\n홈 [https://developers.google.com/?hl=ko]\n제품 [https://developers.google.com/products?hl=ko]\nYouTube [https://developers.google.com/youtube?hl=ko]\nData API [https://developers.google.com/youtube/v3?hl=ko]\n가이드 [https://developers.google.com/youtube/v3/getting-started?hl=ko]\nPython 빠른 시작\nbookmark_border\n이 페이지의 내용\n기본 요건\n1단계: 프로젝트 및 사용자 인증 정보 설정하기\n2단계: 샘플 설정 및 실행\n3단계: 승인된 요청 실행\n추가 자료\n이 빠른 시작 가이드에서는 YouTube Data API에 요청하는 간단한 Python 명령줄 애플리케이션을 설정하는 방법을 설명합니다. 이 빠른 시작에서는 실제로 두 가지 API 요청을 수행하는 방법을 설명합니다.\n애플리케이션을 식별하는 API 키를 사용하여 GoogleDevelopers YouTube 채널에 대한 정보를 검색합니다.\nOAuth 2.0 클라이언트 ID를 사용하여 YouTube 채널에 대한 정보를 검색하는 승인된 요청을 제출합니다.\n참고: 일반적으로 API 키를 사용하는 모든 사용 사례의 경우 첫 번째 예시의 안내를 따르고 OAuth 2.0을 사용한 승인이 필요한 사용 사례의 경우 두 번째 예시의 안내를 따르면 됩니다. 더 많은 예는 사용 사례 및 코드 샘플 도구 [https://developers.google.com/youtube/v3/code_samples/code_snippets?hl=ko]를 참고하세요.\n기본 요건\n이 빠른 시작을 실행하려면 다음이 필요합니다.\nPython 2.7 또는 Python 3.5 이상\npip 패키지 관리 도구'
 'YouTube에서 Shorts 동영상의 조회수를 집계하는 방식에 맞게 Data API를 업데이트하고 있습니다. 자세히 알아보기 [https://developers.google.com/youtube/v3/revision_history?hl=ko#march-26,-2025]\n이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.\nSwitch to English\n홈 [https://developers.google.com/?hl=ko]\n제품 [https://developers.google.com/products?hl=ko]\nYouTube [https://developers.google.com/youtube?hl=ko]\nData API [https://developers.google.com/youtube/v3?hl=ko]\n가이드 [https://developers.google.com/youtube/v3/getting-started?hl=ko]\n클라이언트 라이브러리\nbookmark_border\nGoogle API 클라이언트 라이브러리는 여러 프로그래밍 언어로 사용할 수 있으며 YouTube API 구현을 단순화하는 데 크게 도움이 됩니다.\n다음 표에서 첫 번째 열은 각 라이브러리의 개발 단계를 나타내며 (일부 라이브러리는 초기 단계임) 라이브러리의 문서로 연결됩니다. 두 번째 열은 각 라이브러리의 사용 가능한 샘플로 연결됩니다.\n문서 샘플\nJava용 Google API 클라이언트 라이브러리 [https://developers.google.com/api-client-library/java/?hl=ko] 자바 샘플 [https://developers.google.com/api-client-library/java/apis?hl=ko]\n자바스크립트용 Google API 클라이언트 라이브러리 [https://developers.google.com/api-client-library/javascript/start/start-js?hl=ko] 자바스크립트 샘플 [https://developers.google.com/api-client-library/javascript/samples/samples?hl=ko]'
 'PARTIAL_BINARY_FILE_DATA\n다음과 같은 HTTP 요청 헤더를 설정해야 합니다.\nAuthorization – 요청의 승인 토큰입니다.\nContent-Length – 아직 업로드되지 않은 콘텐츠의 크기(바이트)입니다. 파일의 나머지 부분을 업로드하는 경우 TOTAL_CONTENT_LENGTH 값에서 FIRST_BYTE 값을 빼서 이 값을 계산할 수 있습니다. 두 값 모두 Content-Range 헤더에 사용됩니다.\nContent-Range: 업로드하는 파일의 일부입니다. 헤더 값은 다음 세 가지 값으로 구성됩니다.\nFIRST_BYTE: 업로드를 재개하는 바이트 번호의 0부터 시작하는 숫자 색인입니다. 이 값은 이전 단계에서 검색한 Range 헤더의 두 번째 숫자보다 1이 더 큽니다. 이전 예에서 Range 헤더 값은 0-999999이므로 후속 재개된 업로드의 첫 번째 바이트는 1000000입니다.\nLAST_BYTE: 업로드하는 바이너리 파일의 마지막 바이트의 0부터 시작하는 숫자 색인입니다. 일반적으로 파일의 마지막 바이트입니다. 예를 들어 파일 크기가 3000000바이트인 경우 파일의 마지막 바이트는 2999999입니다.\nTOTAL_CONTENT_LENGTH: 동영상 파일의 총 크기(바이트)입니다. 이 값은 원래 업로드 요청 [https://developers.google.com/youtube/v3/guides/using_resumable_upload_protocol?hl=ko#Start_Resumable_Session]에 지정된 Content-Length 헤더와 동일합니다.\n참고: 바이너리 파일의 비연속 블록은 업로드할 수 없습니다. 비연속 블록을 업로드하려고 하면 나머지 바이너리 콘텐츠가 전혀 업로드되지 않습니다.\n\n따라서 재개된 업로드에서 업로드되는 첫 번째 바이트는 이미 YouTube에 성공적으로 업로드된 마지막 바이트 다음에 오는 바이트여야 합니다. (4.2단계 [https://developers.google.com/youtube/v3/guides/using_resumable_upload_protocol?hl=ko#Handle_Response_to_Status_Request]에서 Range 헤더에 관한 설명을 참고하세요.'
 '기본 요건\n프로젝트에 API 사용 설정\nGoogle API를 호출하는 애플리케이션은 API Console에서 해당 API를 사용 설정해야 합니다.\n프로젝트에서 API를 사용 설정하려면 다음 단계를 따르세요.\nGoogle API Console에서Open the API Library [https://console.developers.google.com/apis/library?hl=ko] 을 사용합니다.\nIf prompted, select a project, or create a new one.\n라이브러리 페이지를 사용하여 YouTube Data API를 찾아 사용 설정합니다. 애플리케이션에서 사용할 다른 API를 찾아 사용 설정합니다.\n승인 사용자 인증 정보 만들기\nOAuth 2.0을 사용하여 Google API에 액세스하는 애플리케이션에는 Google의 OAuth 2.0 서버에 애플리케이션을 식별하는 승인 사용자 인증 정보가 있어야 합니다. 다음 단계에서는 프로젝트의 사용자 인증 정보를 만드는 방법을 설명합니다. 그러면 애플리케이션에서 사용자 인증 정보를 사용하여 해당 프로젝트에 사용 설정된 API에 액세스할 수 있습니다.\nGo to the Credentials page [https://console.developers.google.com/apis/credentials?hl=ko].\n클라이언트 만들기를 클릭합니다.\nTV 및 입력 제한 기기 애플리케이션 유형을 선택합니다.\nOAuth 2.0 클라이언트의 이름을 지정하고 만들기를 클릭합니다.\n액세스 범위 식별\n범위를 사용 설정하면 애플리케이션은 필요한 리소스에 대한 액세스만 요청하고 사용자는 애플리케이션에 부여하는 액세스 양을 제어할 수 있습니다. 따라서 요청된 범위 수와 사용자 동의를 얻을 가능성 간에 역관계가 있을 수 있습니다.\nOAuth 2.0 승인을 구현하기 전에 앱에서 액세스 권한이 필요한 범위를 지정하는 것이 좋습니다.\n참고: 설치된 앱이나 기기에는 증분 승인이 지원되지 않습니다.\nYouTube Data API v3는 다음 범위를 사용합니다.\n범위 설명\nhttps://www.googleapis.com/auth/youtube YouTube 계정 관리'
 ""1단계: 프로젝트 및 사용자 인증 정보 설정하기\nAPI 콘솔 [https://console.cloud.google.com/?hl=ko]에서 프로젝트를 만들거나 선택합니다. API 콘솔에서 프로젝트의 다음 작업을 완료합니다.\n라이브러리 패널 [https://console.developers.google.com/apis/library?hl=ko]에서 YouTube Data API v3를 검색합니다. 해당 API의 등록정보를 클릭하고 프로젝트에 API가 사용 설정되어 있는지 확인합니다.\n사용자 인증 정보 패널 [https://console.developers.google.com/apis/credentials?hl=ko]에서 두 개의 사용자 인증 정보를 만듭니다.\nAPI 키 만들기 API 키를 사용하여 사용자 승인이 필요하지 않은 API 요청을 만듭니다. 예를 들어 공개 YouTube 채널에 대한 정보를 가져오기 위해 사용자 승인이 필요하지는 않습니다.\nOAuth 2.0 클라이언트 ID 만들기 애플리케이션 유형을 기타로 설정합니다. 사용자 승인이 필요한 요청에는 OAuth 2.0 사용자 인증 정보를 사용해야 합니다. 예를 들어 현재 인증된 사용자의 YouTube 채널에 대한 정보를 검색하려면 사용자 승인이 필요합니다.\nOAuth 2.0 사용자 인증 정보가 포함된 JSON 파일을 다운로드합니다. 이 파일의 이름은 client_secret_CLIENTID.json와 같고 여기서 CLIENTID는 프로젝트의 클라이언트 ID입니다.\n2단계: 샘플 설정 및 실행\n측면 패널의 API 탐색기 위젯을 사용하여 GoogleDevelopers YouTube 채널에 대한 정보를 가져오는 샘플 코드를 가져옵니다. 이 요청은 API 키를 사용하여 애플리케이션을 식별하며 사용자 승인이나 샘플을 실행하는 사용자의 특별한 권한이 필요하지 않습니다.\nAPI의 channels.list [https://developers.google.com/youtube/v3/docs/channels/list?hl=ko] 메서드 문서를 엽니다.\n이 페이지의 '일반적인 사용 사례' 섹션에는 메서드가 사용되는 몇 가지 일반적인 방법을 설명하는 표가 있습니다. 표의 첫 번째 목록은 채널 ID별로 결과를 나열하는 것입니다.\n첫 번째 등록정보의 코드 기호를 클릭하여 전체 화면 API 탐색기를 열고 채웁니다.""
 ""기본 요건\n이 빠른 시작을 실행하려면 다음이 필요합니다.\nPython 2.4 이상 (웹 서버 제공용)\n인터넷 및 웹브라우저 액세스\nGoogle 계정\n1단계: 프로젝트 및 사용자 인증 정보 설정하기\nAPI 콘솔 [https://console.cloud.google.com/?hl=ko]에서 프로젝트를 만들거나 선택합니다. API 콘솔에서 프로젝트의 다음 작업을 완료합니다.\n라이브러리 패널 [https://console.developers.google.com/apis/library?hl=ko]에서 YouTube Data API v3를 검색합니다. 해당 API의 등록정보를 클릭하고 프로젝트에 API가 사용 설정되어 있는지 확인합니다.\n사용자 인증 정보 패널 [https://console.developers.google.com/apis/credentials?hl=ko]에서 두 개의 사용자 인증 정보를 만듭니다.\nAPI 키 만들기 API 키를 사용하여 사용자 승인이 필요하지 않은 API 요청을 만듭니다. 예를 들어 공개 YouTube 채널에 대한 정보를 가져오기 위해 사용자 승인이 필요하지는 않습니다.\nOAuth 2.0 클라이언트 ID 만들기 애플리케이션 유형을 웹 애플리케이션으로 설정합니다. 사용자 승인이 필요한 요청에는 OAuth 2.0 사용자 인증 정보를 사용해야 합니다. 예를 들어 현재 인증된 사용자의 YouTube 채널에 대한 정보를 검색하려면 사용자 승인이 필요합니다.\n승인된 자바스크립트 원본 필드에 URL http://localhost:8000을 입력합니다. 승인된 리디렉션 URI 필드는 비워두어도 됩니다.\n2단계: 샘플 설정 및 실행\n측면 패널의 API 탐색기 위젯을 사용하여 GoogleDevelopers YouTube 채널에 대한 정보를 가져오는 샘플 코드를 가져옵니다. 이 요청은 API 키를 사용하여 애플리케이션을 식별하며 사용자 승인이나 샘플을 실행하는 사용자의 특별한 권한이 필요하지 않습니다.\nAPI의 channels.list [https://developers.google.com/youtube/v3/docs/channels/list?hl=ko] 메서드 문서를 엽니다.\n이 페이지의 '일반적인 사용 사례' 섹션에는 메서드가 사용되는 몇 가지 일반적인 방법을 설명하는 표가 있습니다. 표의 첫 번째 목록은 채널 ID별로 결과를 나열하는 것입니다.""
 ""2단계: YouTube Data API 사용 설정\n이 마법사 [https://console.developers.google.com/start/api?id=youtube&hl=ko]를 사용하여 Google Developers Console에서 프로젝트를 만들거나 선택하고 API를 자동으로 사용 설정합니다. 계속을 클릭한 다음 사용자 인증 정보로 이동을 클릭합니다.\n사용자 인증 정보 만들기 페이지에서 취소 버튼을 클릭합니다.\n페이지 상단에서 OAuth 동의 화면 탭을 선택합니다. 이메일 주소를 선택하고, 아직 설정되지 않은 경우 제품 이름을 입력한 다음 저장 버튼을 클릭합니다.\n사용자 인증 정보 탭을 선택하고 사용자 인증 정보 만들기 버튼을 클릭한 후 OAuth 클라이언트 ID를 선택합니다.\n애플리케이션 유형 Android를 선택합니다.\n1단계의 SHA1 지문을 서명 인증서 지문 필드에 복사합니다.\n패키지 이름 [https://developer.android.com/guide/topics/manifest/manifest-element.html?hl=ko#package] 필드에 com.example.quickstart을 입력합니다.\n만들기 버튼을 클릭합니다.\n3단계: 새 Android 프로젝트 만들기\nAndroid 스튜디오 [https://developer.android.com/tools/studio/index.html?hl=ko]를 열고 새 Android 스튜디오 프로젝트를 시작합니다.\n새 프로젝트 화면에서 애플리케이션 이름을 'Quickstart'로 지정합니다.\n회사 도메인을 'example.com'으로 설정하고 패키지 이름이 2단계에서 개발자 콘솔 [https://console.developers.google.com/?hl=ko]에 입력한 이름과 일치하는지 확인합니다. Next를 클릭합니다.\nTarget Android Devices 화면에서 Phone and Tablet 체크박스를 선택하고 Minimum SDK를 'API 14: Android 4.0(IceCreamSandwich)'로 선택합니다. 다른 체크박스는 선택하지 않은 상태로 둡니다. 다음을 클릭합니다.\nAdd an activity to Mobile 화면에서 Add No Activity를 클릭합니다.\n마침을 클릭합니다.""
 'YouTube에서 Shorts 동영상의 조회수를 집계하는 방식에 맞게 Data API를 업데이트하고 있습니다. 자세히 알아보기 [https://developers.google.com/youtube/v3/revision_history?hl=ko#march-26,-2025]\n이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.\nSwitch to English\n홈 [https://developers.google.com/?hl=ko]\n제품 [https://developers.google.com/products?hl=ko]\nYouTube [https://developers.google.com/youtube?hl=ko]\nData API [https://developers.google.com/youtube/v3?hl=ko]\n가이드 [https://developers.google.com/youtube/v3/getting-started?hl=ko]\nYouTube Data API 개요\nbookmark_border\n이 페이지의 내용\n소개\n시작하기 전에\n리소스 및 리소스 유형\n지원되는 작업\n할당량 사용\n할당량 사용 계산\n부분 리소스\npart 매개변수 사용 방법\n소개\n이 문서는 YouTube와 상호작용하는 애플리케이션을 작성하려는 개발자를 위해 작성되었습니다. YouTube와 API의 기본 개념을 설명합니다. 또한 API가 지원하는 다양한 기능에 대한 개요를 제공합니다.\n시작하기 전에\nGoogle API 콘솔에 액세스하고 API 키를 요청하고 애플리케이션을 등록하려면 Google 계정 [https://www.google.com/accounts/NewAccount?hl=ko]이 필요합니다.\n애플리케이션에서 API 요청을 제출할 수 있도록 Google Developers Console [https://console.developers.google.com/?hl=ko]에서 프로젝트를 만들고 인증 사용자 인증 정보를 가져옵니다 [https://developers.google.com/youtube/registering_an_application?hl=ko].\n프로젝트를 만든 후 YouTube Data API가 애플리케이션에서 사용하도록 등록된 서비스 중 하나인지 확인하세요.']","YouTube Data API를 Google Developers Console을 통해 사용 설정하려면 다음 절차를 따라야 합니다:

1. **프로젝트 생성 또는 선택**: Google Developers Console에서 프로젝트를 만들거나 기존 프로젝트를 선택합니다.
2. **API 자동 활성화**: 제공된 마법사를 사용하여 YouTube Data API를 자동으로 활성화합니다. 이 단계에서 ""계속""을 클릭한 후 ""사용자 인증 정보로 이동""을 클릭합니다.

첫 번째 단계에서 반드시 수행해야 하는 작업은 Google Developers Console에서 프로젝트를 만들거나 선택하고, API를 자동으로 활성화하는 것입니다.","YouTube Data API를 사용 설정하기 위한 첫 번째 단계는 Google Developers Console에서 프로젝트를 만들거나 선택하고, API를 자동으로 사용 설정하는 마법사를 사용하는 것입니다. 이후 계속을 클릭한 다음 사용자 인증 정보로 이동을 클릭해야 합니다."
firsetore users 데이타 가져오려면 어떻게하나요? users 콜렉션에서 모든 users 정보 뽑는 코드 알려주세요.,"['users_ref = firestore.col collection_path\nusers_ref.get do |user|\nputs ""#{user.document_id} data: #{user.data}.""\nend\n\n다음 단계\n\n다음 주제를 자세히 알아보세요.\n\n데이터 모델 [https://cloud.google.com/firestore/native/docs/data-model?hl=ko] - 계층적 데이터와 하위 컬렉션을 비롯한 Firestore에서 데이터가 구조화되는 방식을 자세히 알아보세요.\n데이터 추가 [https://cloud.google.com/firestore/native/docs/manage-data/add-data?hl=ko] - Firestore에서 데이터를 만들고 업데이트하는 방법을 자세히 알아보세요.\n데이터 가져오기 [https://cloud.google.com/firestore/native/docs/query-data/get-data?hl=ko] - 데이터를 검색하는 방법을 자세히 알아보세요.\n단순 쿼리 및 복합 쿼리 실행 [https://cloud.google.com/firestore/native/docs/query-data/queries?hl=ko] - 단순 쿼리 및 복합 쿼리 실행 방법을 알아보세요.\n쿼리 순서 지정 및 제한 [https://cloud.google.com/firestore/native/docs/query-data/order-limit-data?hl=ko] - 쿼리에서 반환된 데이터의 순서를 지정하고 제한하는 방법을 알아보세요.\n\n의견 보내기'
 '데이터 읽기\n\nFirebase Console [https://console.firebase.google.com/project/_/firestore/data?hl=ko]의 데이터 뷰어를 사용하여 Firestore에 추가한 데이터를 빠르게 확인합니다.\n\nget 메서드를 사용하여 전체 컬렉션을 검색할 수도 있습니다.\n\n웹 버전 9\nimport { collection, getDocs } from ""firebase/firestore"";\n\nconst querySnapshot = await getDocs(collection(db, ""users""));\nquerySnapshot.forEach((doc) => {\nconsole.log(`${doc.id} => ${doc.data()}`);\n});get_all_users.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/snippets/firestore-next/test-firestore/get_all_users.js#L8-L13]\n\n웹 버전 8\n\n트리 쉐이킹 작업이 가능한 모듈식 웹 API에 대해 자세히 알아보고 [https://firebase.google.com/docs/web/learn-more?hl=ko#modular-version] 네임스페이스화된 API에 비해 갖는 이점을 살펴보세요.\ndb.collection(""users"").get().then((querySnapshot) => {\nquerySnapshot.forEach((doc) => {\nconsole.log(`${doc.id} => ${doc.data()}`);\n});\n});test.firestore.js [https://github.com/firebase/snippets-web/blob/467eaa165dcbd9b3ab15711e76fa52237ba37f8b/firestore/test.firestore.js#L143-L147]\n\nSwift\n\n참고: 이 제품은 watchOS 및 앱 클립 대상에서 사용할 수 없습니다.'
 '/forums/{forumid}/posts/{postid}\n{\nauthor: ""some_auth_id"",\nauthorname: ""some_username"",\ncontent: ""I just read a great story."",\n}\n\n이 애플리케이션에서는 소유자가 글을 편집하고 인증된 사용자가 글을 읽을 수 있도록 합니다.\nservice cloud.firestore {\nmatch /databases/{database}/documents {\nmatch /forums/{forumid}/posts/{post} {\n// Only authenticated users can read\nallow read: if request.auth != null;\n// Only the post author can write\nallow write: if request.auth != null && request.auth.uid == resource.data.author;\n}\n}\n}\n\n모든 인증된 사용자는 단일 포럼의 글을 검색할 수 있습니다.\ndb.collection(""forums/technology/posts"").get()\n\n그런데 현재 사용자에게 모든 포럼에 있는 자신의 글을 표시하려면 어떻게 해야 할까요?\n컬렉션 그룹 쿼리 [https://firebase.google.com/docs/firestore/query-data/queries?hl=ko#collection-group-query]를 사용하여 모든 posts 컬렉션에서 결과를 검색할 수 있습니다.\nvar user = firebase.auth().currentUser;\n\ndb.collectionGroup(""posts"").where(""author"", ""=="", user.uid).get()\n참고: 이 쿼리에는 컬렉션 그룹 범위가 지정된 posts 컬렉션에서 필드 author에 대한 색인이 필요합니다. 이 색인을 사용 설정하지 않은 경우 쿼리가 오류 링크를 반환하며, 이 링크를 따라가면 필요한 색인을 만들 수 있습니다.\n보안 규칙에서 posts 컬렉션 그룹에 대한 read 또는 list 규칙을 작성하여 이 쿼리를 허용해야 합니다.\nrules_version = \'2\';\nservice cloud.firestore {'
 '/forums/{forumid}/posts/{postid}\n{\nauthor: ""some_auth_id"",\nauthorname: ""some_username"",\ncontent: ""I just read a great story."",\n}\n\n이 애플리케이션에서는 소유자가 글을 편집하고 인증된 사용자가 글을 읽을 수 있도록 합니다.\nservice cloud.firestore {\nmatch /databases/{database}/documents {\nmatch /forums/{forumid}/posts/{post} {\n// Only authenticated users can read\nallow read: if request.auth != null;\n// Only the post author can write\nallow write: if request.auth != null && request.auth.uid == resource.data.author;\n}\n}\n}\n\n모든 인증된 사용자는 단일 포럼의 글을 검색할 수 있습니다.\ndb.collection(""forums/technology/posts&quot;).get()\n\n그런데 현재 사용자에게 모든 포럼에 있는 자신의 글을 표시하려면 어떻게 해야 할까요?\n컬렉션 그룹 쿼리 [https://cloud.google.com/firestore/native/docs/query-data/queries?hl=ko#collection-group-query]를 사용하여 모든 posts 컬렉션에서 결과를 검색할 수 있습니다.\nvar user = firebase.auth().currentUser;\n\ndb.collectionGroup(""posts"").where(""author"", &quot;=="", user.uid).get()\n참고: 이 쿼리에는 컬렉션 그룹 범위가 지정된 posts 컬렉션에서 필드 author에 대한 색인이 필요합니다. 이 색인을 사용 설정하지 않은 경우 쿼리가 오류 링크를 반환하며, 이 링크를 따라가면 필요한 색인을 만들 수 있습니다.\n보안 규칙에서 posts 컬렉션 그룹에 대한 read 또는 list 규칙을 작성하여 이 쿼리를 허용해야 합니다.\nrules_version = \'2\';\nservice cloud.firestore {'
 'Python\n\nusers_ref = db.collection(""users"")snippets.py [https://github.com/GoogleCloudPlatform/python-docs-samples/blob/5426f6198e20bb76f4b0d005d2e2f26449b4f5d8/firestore/cloud-async-client/snippets.py#L283-L283]\n\nC++\nCollectionReference users_collection_reference = db->Collection(""users"");snippets.cpp [https://github.com/firebase/snippets-cpp/blob/778b6bcc8e8e8fcabb1c2e3a8d11ab51a26aa77b/firestore/android/FirestoreSnippetsCpp/app/src/main/cpp/snippets.cpp#L50-L50]\n\nNode.js\n\nconst usersCollectionRef = db.collection(\'users\');index.js [https://github.com/firebase/snippets-node/blob/f1869eeb97c2bbb713aff3deb5a67666da7bcb6b/firestore/main/index.js#L136-L136]\n\nGo\n\nimport (\n""cloud.google.com/go/firestore""\n)\n\nfunc createCollectionReference(client *firestore.Client) {\nusersRef := client.Collection(""users"")\n\n_ = usersRef\n}\nretrieve_data_reference_collection.go [https://github.com/GoogleCloudPlatform/golang-samples/blob/1420c71e05f2a1aef5eb07e90da7294ffe82a75c/firestore/retrieve_data_reference_collection.go#L18-L28]\n\nPHP\n\nPHP\n\nCloud Firestore 클라이언트 설치 및 생성에 관한 자세한 내용은 Cloud Firestore 클라이언트 라이브러리 [https://firebase.google.com/firestore/docs/reference/libraries?hl=ko]를 참조하세요.']","Firestore에서 'users' 컬렉션의 모든 사용자 데이터를 가져오려면 다음과 같은 코드를 사용할 수 있습니다. 이 코드는 Node.js 환경에서 Firestore의 데이터를 비동기적으로 가져오는 예제입니다:

```javascript
const snapshot = await db.collection('users').get();
snapshot.forEach((doc) => {
    console.log(doc.id, '=>', doc.data());
});
```

이 코드는 'users' 컬렉션의 모든 문서를 가져와 각 문서의 ID와 데이터를 콘솔에 출력합니다.","Firestore에서 users 콜렉션의 모든 users 정보를 가져오려면 다음과 같은 코드를 사용할 수 있습니다:

```javascript
await db.collection(""users"").get().then((event) => {
    for (var doc in event.docs) {
        print(""${doc.id} => ${doc.data()}"");
    }
});
```"
Python에서 Cloud Firestore 초기화 방법,"['참고: 코드 샘플에서는 여러 언어를 다루지만 샘플을 설명하는 텍스트는 웹 메서드 이름을 참조합니다.시작하기 전에\n\n데이터를 설정, 추가 또는 업데이트하도록 Cloud Firestore를 초기화하려면 다음 단계를 완료해야 합니다.\n\nCloud Firestore 데이터베이스 만들기 자세한 내용은 Cloud Firestore 시작하기 [https://firebase.google.com/docs/firestore/quickstart?hl=ko]를 참조하세요.\n웹 또는 모바일 클라이언트 라이브러리를 사용하는 경우 보안 규칙으로 인증합니다. 자세한 내용은 보안 규칙 시작하기 [https://firebase.google.com/docs/firestore/manage-data/firestore/docs/security/get-started?hl=ko]를 참조하세요.\n서버 클라이언트 라이브러리 또는 REST API를 사용하는 경우 Identity and Access Management(IAM)로 인증합니다. 자세한 내용은 서버 클라이언트 라이브러리의 보안 [https://firebase.google.com/firestore/docs/security/iam?hl=ko]을 참조하세요.\n\nCloud Firestore 초기화\n\nCloud Firestore의 인스턴스를 초기화합니다.\n\nWeb\n\nimport { initializeApp } from ""firebase/app"";\nimport { getFirestore } from ""firebase/firestore"";\n\n// TODO: Replace the following with your app\'s Firebase project configuration\n// See: https://support.google.com/firebase/answer/7015592\nconst firebaseConfig = {\nFIREBASE_CONFIGURATION\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Cloud Firestore and get a reference to the service\nconst db = getFirestore(app);'
 'Cloud Firestore의 인스턴스를 초기화합니다.\n\nWeb\n\nimport { initializeApp } from ""firebase/app"";\nimport { getFirestore } from ""firebase/firestore"";\n\n// TODO: Replace the following with your app\'s Firebase project configuration\n// See: https://support.google.com/firebase/answer/7015592\nconst firebaseConfig = {\nFIREBASE_CONFIGURATION\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Cloud Firestore and get a reference to the service\nconst db = getFirestore(app);\n\nFIREBASE_CONFIGURATION을 웹 앱의 firebaseConfig [https://support.google.com/firebase/answer/7015592?hl=ko]로 바꿉니다.\n\n기기의 연결이 끊겨도 데이터를 유지하려면 오프라인 데이터 사용 설정 [https://firebase.google.com/docs/firestore/manage-data/enable-offline?hl=ko] 문서를 참조하세요.\n\nWeb\n\nimport firebase from ""firebase/app"";\nimport ""firebase/firestore"";\n\n// TODO: Replace the following with your app\'s Firebase project configuration\n// See: https://support.google.com/firebase/answer/7015592\nconst firebaseConfig = {\nFIREBASE_CONFIGURATION\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n// Initialize Cloud Firestore and get a reference to the service\nconst db = firebase.firestore();'
 'Python\n\nCloud Firestore SDK는 환경에 따라 다양한 방식으로 초기화됩니다. 가장 일반적인 방법은 아래와 같습니다. 전체 참조를 보려면 Admin SDK 초기화 [https://firebase.google.com/docs/admin/setup?hl=ko#initialize-sdk]를 참조하세요.\n\nGoogle Cloud에서 초기화import firebase_admin\nfrom firebase_admin import firestore_async\n\n# Application Default credentials are automatically created.\napp = firebase_admin.initialize_app()\ndb = firestore_async.client()firestore_async.py [https://github.com/firebase/firebase-admin-python/blob/3d3ef0c9b5f99044c92072b241f470d2dc9fe9d2/snippets/firestore/firestore_async.py#L22-L27]\n\n기존 애플리케이션 기본 사용자 인증 정보를 사용하여 SDK를 초기화할 수도 있습니다.\nimport firebase_admin\nfrom firebase_admin import credentials\nfrom firebase_admin import firestore_async\n\n# Use the application default credentials.\ncred = credentials.ApplicationDefault()\n\nfirebase_admin.initialize_app(cred)\ndb = firestore_async.client()firestore_async.py [https://github.com/firebase/firebase-admin-python/blob/3d3ef0c9b5f99044c92072b241f470d2dc9fe9d2/snippets/firestore/firestore_async.py#L32-L40]\n\n자체 서버에서 초기화\n자체 서버에서 Firebase Admin SDK를 사용하려면 서비스 계정 [https://cloud.google.com/compute/docs/authentication?hl=ko]을 사용합니다.'
 'import com.google.firebase.FirebaseApp;\nimport com.google.firebase.FirebaseOptions;\n\n// Use a service account\nInputStream serviceAccount = new FileInputStream(""path/to/serviceAccount.json"");\nGoogleCredentials credentials = GoogleCredentials.fromStream(serviceAccount);\nFirebaseOptions options = new FirebaseOptions.Builder()\n.setCredentials(credentials)\n.build();\nFirebaseApp.initializeApp(options);\n\nFirestore db = FirestoreClient.getFirestore();\n\nPython\n\nCloud Firestore SDK는 환경에 따라 다양한 방식으로 초기화됩니다. 가장 일반적인 방법은 아래와 같습니다. 전체 참조를 보려면 Admin SDK 초기화 [https://firebase.google.com/docs/admin/setup?hl=ko#initialize-sdk]를 참조하세요.\n\nGoogle Cloud에서 초기화import firebase_admin\nfrom firebase_admin import firestore\n\n# Application Default credentials are automatically created.\napp = firebase_admin.initialize_app()\ndb = firestore.client()firestore.py [https://github.com/firebase/firebase-admin-python/blob/3d3ef0c9b5f99044c92072b241f470d2dc9fe9d2/snippets/firestore/firestore.py#L20-L25]\n\n기존 애플리케이션 기본 사용자 인증 정보를 사용하여 SDK를 초기화할 수도 있습니다.\nimport firebase_admin\nfrom firebase_admin import credentials\nfrom firebase_admin import firestore'
 '기본 모드에서 Firestore 초기화\n\nFirestore의 인스턴스를 초기화합니다.\n\n--- 탭: 자바 [https://cloud.google.com/firestore/native/docs/create-database-server-client-library?hl=ko#%EC%9E%90%EB%B0%94] ---\nimport com.google.cloud.firestore.Firestore [https://cloud.google.com/java/docs/reference/google-cloud-firestore/latest/com.google.cloud.firestore.Firestore.html?hl=ko];\nimport com.google.cloud.firestore.FirestoreOptions [https://cloud.google.com/java/docs/reference/google-cloud-firestore/latest/com.google.cloud.firestore.FirestoreOptions.html?hl=ko];\nFirestoreOptions firestoreOptions =\nFirestoreOptions.getDefaultInstance().toBuilder()\n.setProjectId(projectId)\n.setCredentials(GoogleCredentials.getApplicationDefault())\n.build();\nFirestore db = firestoreOptions.getService();\nQuickstart.java [https://github.com/googleapis/java-firestore/blob/02c1372447e22b3e635f5997ce9a6113144b3734/samples/snippets/src/main/java/com/example/firestore/Quickstart.java#L47-L52]\n\n--- 탭: Python [https://cloud.google.com/firestore/native/docs/create-database-server-client-library?hl=ko#python] ---\nfrom google.cloud import firestore']","Python에서 Cloud Firestore를 초기화하는 방법은 다음과 같습니다. 기본적인 초기화 방법은 아래 코드를 참고하세요:

```python
import firebase_admin
from firebase_admin import firestore

# Application Default credentials are automatically created.
app = firebase_admin.initialize_app()
db = firestore.client()
```

또한, 비동기적으로 초기화하려면 다음과 같은 방법을 사용할 수 있습니다:

```python
import firebase_admin
from firebase_admin import firestore_async

# Application Default credentials are automatically created.
app = firebase_admin.initialize_app()
db = firestore_async.client()
```

기존 애플리케이션 기본 사용자 인증 정보를 사용하여 비동기적으로 초기화할 수도 있습니다:

```python
import firebase_admin
from firebase_admin import credentials
from firebase_admin import firestore_async

# Use the application default credentials.
cred = credentials.ApplicationDefault()

firebase_admin.initialize_app(cred)
db = firestore_async.client()
```

이 방법들을 사용하여 Python 환경에서 Cloud Firestore를 초기화할 수 있습니다.","Cloud Firestore를 Python에서 서비스 계정을 사용하여 초기화하려면 다음 코드를 사용합니다:

import firebase_admin
from firebase_admin import credentials
from firebase_admin import firestore

# Use a service account.
cred = credentials.Certificate('path/to/serviceAccount.json')

app = firebase_admin.initialize_app(cred)
db = firestore.client()"
"BigQuery에서 쿼리 실행 단계의 병렬 입력 세그먼트 수를 확인하고자 할 때, 사용자가 참고해야 하는 필드는 무엇이며, 이 필드를 통해 어떤 정보를 얻을 수 있는지 상세히 설명해 주시겠습니까?","['입력: 표에서 데이터를 읽거나 특정 열을 선택\n조인: JOIN 조건을 기반으로 두 테이블의 데이터를 병합\n집계: SUM과 같은 계산 실행\n정렬: 결과 정렬\n스테이지는 스테이지 내에서 각 작업자가 실행하는 개별 작업을 설명하는 단계 [https://cloud.google.com/bigquery/docs/query-plan-explanation?hl=ko#per-stage_step_information]로 구성됩니다. 스테이지를 클릭하여 열고 단계를 볼 수 있습니다. 스테이지에는 상대 및 절대 타이밍 정보 [https://cloud.google.com/bigquery/docs/query-plan-explanation?hl=ko#per-stage_timing_classification]도 포함됩니다. 스테이지 이름은 수행하는 단계를 요약합니다. 예를 들어 이름에 join이 있는 스테이지는 스테이지의 기본 단계가 JOIN 작업임을 의미합니다. 끝에 +가 있는 스테이지 이름은 추가적인 중요한 단계를 실행한다는 의미입니다. 예를 들어 이름에 JOIN+가 있는 스테이지는 스테이지가 조인 작업과 기타 중요한 단계를 실행한다는 의미입니다.\n스테이지를 연결하는 선은 스테이지 간의 중간 데이터 교환을 나타냅니다. BigQuery는 스테이지가 실행되는 동안 셔플 메모리에 중간 데이터를 저장합니다. 가장자리의 숫자는 스테이지 간에 교환된 예상 행 수를 나타냅니다. 셔플 메모리 할당량은 계정에 할당된 슬롯 수와 상관관계가 있습니다. 셔플 할당량을 초과하면 셔플 메모리가 디스크로 유출되어 쿼리 성능이 크게 느려질 수 있습니다.\n쿼리 성능 통계 보기\n--- 탭: 콘솔 [https://cloud.google.com/bigquery/docs/query-insights?hl=ko#%EC%BD%98%EC%86%94] ---\n쿼리 성능 통계를 보려면 다음 단계를 수행합니다.'
 'maxResults — 반환할 결과의 최대 수입니다.\nselectedFields — 반환할 필드를 쉼표로 구분한 목록입니다. 지정하지 않으면 모든 열이 반환됩니다.\nstartIndex — 읽기를 시작할 행의 0부터 시작하는 색인입니다.\n\n참고: 마지막 행을 벗어나서 startIndex를 요청하면 메서드가 성공적으로 반환되지만 rows 속성은 반환되지 않습니다. tables.get [https://cloud.google.com/bigquery/docs/reference/rest/v2/tables/get?hl=ko] 메서드를 호출하고 numRows 속성을 검사하여 테이블의 행 수를 확인할 수 있습니다.\n반환되는 값은 JSON 객체에 래핑되므로 tabledata.list [https://cloud.google.com/bigquery/docs/reference/rest/v2/tabledata/list?hl=ko] 참조 문서의 설명에 따라 객체를 파싱해야 합니다.\n\n--- 탭: C# [https://cloud.google.com/bigquery/docs/managing-table-data?hl=ko#c] ---\n이 샘플을 사용해 보기 전에 BigQuery 빠른 시작: 클라이언트 라이브러리 사용 [https://cloud.google.com/bigquery/docs/quickstarts/quickstart-client-libraries?hl=ko]의 C# 설정 안내를 따르세요.\n        \n      \n      \n  자세한 내용은 BigQuery C# API 참고 문서 [https://cloud.google.com/dotnet/docs/reference/Google.Cloud.BigQuery.V2/latest?hl=ko]를 확인하세요.\n  \n    \n    \n      BigQuery에 인증하려면 애플리케이션 기본 사용자 인증 정보를 설정합니다.\n      자세한 내용은 클라이언트 라이브러리의 인증 설정 [https://cloud.google.com/bigquery/docs/authentication?hl=ko#client-libs]을 참조하세요.'
 '최적화\n타겟팅 필터링: WHERE 절을 전략적으로 사용하여 쿼리에서 최대한 빨리 관련 없는 데이터를 필터링합니다. 이렇게 하면 쿼리에서 처리해야 하는 데이터 양이 줄어듭니다.\n파티션 나누기 및 클러스터링: BigQuery는 테이블 파티션 나누기 및 클러스터링을 사용하여 특정 데이터 세그먼트를 효율적으로 찾습니다. READ 단계에서 스캔되는 데이터를 최소화하려면 일반적인 쿼리 패턴에 따라 테이블을 파티션하고 클러스터링해야 합니다.\n관련 열 선택: SELECT * 문을 사용하지 마세요. 대신 특정 열을 선택하거나 SELECT * EXCEPT를 사용하여 불필요한 데이터를 읽지 마세요.\n구체화된 뷰: 구체화된 뷰는 자주 사용되는 집계를 미리 계산하고 저장할 수 있으므로 이러한 뷰를 사용하는 쿼리의 READ 단계에서 기본 테이블을 읽을 필요가 줄어들 수 있습니다.\nCOMPUTE 단계\nCOMPUTE 단계에서 BigQuery는 데이터에 대해 다음 작업을 실행합니다.\n계산, 비교, 논리 연산을 비롯하여 쿼리의 SELECT, WHERE, HAVING 및 기타 절의 표현식을 평가합니다.\n내장 SQL 함수와 사용자 정의 함수를 실행합니다.\n쿼리의 조건에 따라 데이터 행을 필터링합니다.\n최적화\n쿼리 계획을 통해 COMPUTE 단계 내의 병목 현상을 파악할 수 있습니다. 계산이 많거나 처리되는 행 수가 많은 단계를 찾습니다.\nCOMPUTE 단계와 데이터 양의 연관성 비교: 한 단계에서 상당한 계산이 이루어지고 대량의 데이터가 처리되는 경우 최적화의 좋은 후보가 될 수 있습니다.\n왜곡된 데이터: 연산 최대값이 연산 평균보다 훨씬 높은 단계의 경우, 해당 단계에서 데이터 슬라이스를 몇 개 처리하는 데 불균형하게 많은 시간을 소비했음을 나타냅니다. 데이터 분포를 확인하여 데이터 편향이 있는지 살펴보는 것이 좋습니다.\n데이터 유형 고려: 열에 적절한 데이터 유형을 사용합니다. 예를 들어 문자열 대신 정수, 날짜-시간, 타임스탬프를 사용하면 성능을 개선할 수 있습니다.\nWRITE 단계\nWRITE 단계는 중간 데이터와 최종 출력에 대해 실행됩니다.\n셔플 메모리에 쓰기: 다단계 쿼리에서 WRITE 단계는 종종 추가 처리를 위해 처리된 데이터를 다른 단계로 전송하는 것을 포함합니다. 이는 여러 소스의 데이터를 결합하거나 집계하는 셔플 메모리의 일반적인 사례입니다. 이 단계에서 작성된 데이터는 일반적으로 최종 출력이 아닌 중간 결과입니다.'
 ""배경\nBigQuery는 쿼리 작업 실행 시 선언적 SQL 문을 실행 그래프로 변환하고 일련의 쿼리 스테이지로 세분화합니다. 각 쿼리 스테이지에는 더 세분화된 실행 단계 조합이 있습니다. BigQuery는 크게 분산된 병렬 아키텍처를 사용하여 이러한 쿼리를 실행하며, 스테이지는 많은 잠재적 작업자들이 동시에 실행할 수 있는 작업 단위를 모델링합니다. 스테이지는 빠른 분산 셔플 아키텍처를 사용하여 서로 통신합니다.\n쿼리 계획 내에서 작업 단위 및 작업자라는 용어는 특히 동시 로드에 대한 정보를 전달하기 위해 사용됩니다. BigQuery 내의 다른 곳에서는 컴퓨팅, 메모리, I/O 리소스를 비롯한 쿼리 실행의 여러 측면을 추상화한 '슬롯'이라는 용어가 사용될 수 있습니다. 최상위 작업 통계는 이 추상화된 계정을 통해 쿼리의 totalSlotMs 추정을 사용함으로써 개별 쿼리 비용의 추정치를 제공합니다.\n쿼리 실행 아키텍처의 또 다른 중요한 속성은 동적이라는 것입니다. 즉, 쿼리가 실행되는 동안 쿼리 계획이 수정될 수 있습니다. 쿼리가 실행 중인 동안에 스테이지를 도입하는 목적은 쿼리 작업자 전체의 데이터 배포를 향상시키기 위한 경우가 많습니다. 실제로 이러한 쿼리 계획에서 스테이지에는 일반적으로 리파티션 스테이지라는 라벨이 지정됩니다.\n쿼리 계획 외에도 쿼리 작업에는 쿼리 작업자 사이에서 완료, 보류, 활성 상태의 작업 단위에 대한 설명을 제공하는 실행 타임라인이 노출됩니다. 쿼리에는 활성 작업자를 포함한 여러 스테이지가 동시에 있을 수 있으므로, 타임라인은 쿼리의 전반적인 진행 상황을 보여주기 위한 것입니다.\nGoogle Cloud 콘솔에서 정보 보기\nGoogle Cloud 콘솔 [https://console.cloud.google.com/bigquery?hl=ko]에서 실행 세부정보 버튼(결과 버튼 근처)을 클릭하여 완료된 쿼리의 쿼리 계획 세부정보를 볼 수 있습니다.\n쿼리 계획 정보\nAPI 응답 내에서 쿼리 계획은 쿼리 스테이지 목록으로 표시됩니다. 목록의 각 항목은 스테이지별 개요 통계, 세부 단계 정보, 스테이지 타이밍 분류를 보여줍니다. Google Cloud 콘솔 내부에서 모든 세부정보가 렌더링되지는 않지만 API 응답 내에 모든 정보가 있을 수 있습니다.\n스테이지 개요\n각 스테이지의 개요 필드에 포함될 수 있는 항목은 다음과 같습니다.\nAPI 필드 설명\nid 스테이지의 고유 숫자 ID입니다.""
 '증분을 선택한 경우: 타임스탬프 열 필드에서 새 레코드가 추가될 때 증가하고 새 레코드를 식별하는 데 사용할 수 있는 BigQuery 테이블의 DATE 또는 TIMESTAMP 유형 열을 선택합니다. 테이블의 파티션을 나누는 열일 수 있습니다.\n\n데이터를 필터링하려면 행 필터링 체크박스를 선택합니다. GoogleSQL 문법의 WHERE 절 [https://cloud.google.com/bigquery/docs/reference/standard-sql/query-syntax?hl=ko#where_clause]의 일부로 사용될 수 있는 유효한 SQL 표현식으로 구성된 행 필터를 제공합니다.\n예를 들면 col1 >= 0입니다.\n필터는 여러 열 조건의 조합일 수 있습니다. 예를 들면 col1 >= 0 AND col2 < 10입니다.\n데이터를 샘플링하려면 샘플링 크기 목록에서 샘플링 비율을 선택합니다. 소수점 이하 3자리까지 0.0%에서 100.0% 사이의 백분율 값을 선택합니다. 데이터 세트가 클수록 낮은 샘플링 비율을 선택합니다. 예를 들어 1PB\xa0테이블의 경우 0.1%에서 1.0% 사이의 값을 입력하면 데이터 품질 스캔에서 1~10TB의 데이터를 샘플링합니다. 증분 데이터 스캔의 경우 데이터 품질 스캔은 최신 증분에 샘플링을 적용합니다.\n데이터 품질 스캔 결과를 Dataplex Universal Catalog 메타데이터로 게시하려면 BigQuery 및 Dataplex 카탈로그에 결과 게시 체크박스를 선택합니다.\n\n소스 테이블의 BigQuery 및 Dataplex Universal Catalog 페이지에 있는 데이터 품질 탭에서 최신 스캔 결과를 확인할 수 있습니다. 사용자가 게시된 스캔 결과에 액세스할 수 있도록 하려면 이 문서의 데이터 프로필 스캔 결과에 대한 액세스 권한 부여 [https://cloud.google.com/bigquery/docs/data-quality-scan?hl=ko#share-results] 섹션을 참조하세요.\n\n일정 섹션에서 다음 옵션 중 하나를 선택합니다.\n\n\n반복: 시간별, 일별, 주별, 월별 또는 커스텀 일정으로 데이터 품질 스캔을 실행합니다. 스캔 실행 빈도와 시간을 지정합니다. 커스텀을 선택하는 경우 크론 [https://en.wikipedia.org/wiki/Cron] 형식을 사용하여 일정을 지정합니다.\n주문형: 데이터 품질 스캔을 주문형으로 실행합니다.'
 '슬롯을 사용한 쿼리 실행\nBigQuery는 쿼리 작업 실행 시 선언적 SQL 문을 실행 그래프로 변환하고 일련의 쿼리 스테이지로 세분화합니다. 각 쿼리 스테이지에는 더 세분화된 실행 단계 조합이 있습니다. BigQuery는 크게 분산된 병렬 아키텍처를 사용하여 이러한 쿼리를 실행하며, 스테이지는 많은 잠재적 작업자들이 동시에 실행할 수 있는 작업 단위를 모델링합니다. 스테이지는 빠른 분산 셔플 아키텍처 [https://cloud.google.com/blog/products/gcp/separation-of-compute-and-state-in-google-bigquery-and-cloud-dataflow-and-why-it-matters?hl=ko]를 통해 서로 통신합니다. 이 아키텍처에 대한 자세한 내용은 Google Cloud 블로그 [https://cloud.google.com/blog/products/bigquery/in-memory-query-execution-in-google-bigquery?hl=ko]를 참조하세요.\nBigQuery 쿼리 실행은 동적입니다. 즉, 쿼리가 실행되는 동안 쿼리 계획이 수정될 수 있습니다. 쿼리가 실행 중인 동안에 스테이지를 도입하는 목적은 쿼리 작업자 전체의 데이터 배포를 향상시키기 위한 경우가 많습니다.\nBigQuery는 동시에 [https://en.wikipedia.org/wiki/Instruction_pipelining] 여러 스테이지를 실행할 수 있습니다. BigQuery는 쿼리 실행 속도를 높이기 위해 예측 실행 [https://en.wikipedia.org/wiki/Speculative_execution]을 활용하고, 동시 처리를 최적화하기 위해 스테이지의 파티션을 동적으로 나눌 [https://cloud.google.com/blog/products/gcp/no-shard-left-behind-dynamic-work-rebalancing-in-google-cloud-dataflow?hl=ko] 수 있습니다.\nBigQuery 슬롯은 쿼리의 각 스테이지별로 개별 작업 단위를 실행합니다. 예를 들어 BigQuery에서 스테이지의 최적 동시 처리 계수를 10으로 결정하면 해당 스테이지를 처리하기 위해 10개의 슬롯을 요청합니다.\nGoogleSQL 쿼리는 동적 DAG\n슬롯 리소스 절약 모드로 쿼리 실행'
 '쓰기 최적화된 스토리지의 데이터 쿼리 [https://cloud.google.com/bigquery/docs/querying-partitioned-tables?hl=ko#query_data_in_the_streaming_buffer]\n파티션 프루닝 권장사항 [https://cloud.google.com/bigquery/docs/querying-partitioned-tables?hl=ko#best_practices_for_partition_pruning]\n파티션을 나눈 테이블 쿼리\nbookmark_border\n이 문서에서는 BigQuery에서 파티션을 나눈 테이블 [https://cloud.google.com/bigquery/docs/partitioned-tables?hl=ko]을 쿼리하기 위한 몇 가지 특정 고려사항에 대해 설명합니다.\nBigQuery에서 쿼리 실행에 대한 일반적인 내용은 대화형 쿼리 및 일괄 쿼리 실행 [https://cloud.google.com/bigquery/docs/running-queries?hl=ko]을 참조하세요.\n개요\n쿼리에서 파티션 나누기 열의 값에 대해 한정 필터가 사용되는 경우 BigQuery가 필터와 일치하는 파티션을 스캔하고 남은 파티션을 건너뛸 수 있습니다. 이 프로세스를 파티션 프루닝이라고 합니다.\n파티션 프루닝은 입력 검색에서 불필요한 파티션을 제거하기 위해 BigQuery에서 사용하는 메커니즘입니다. 쿼리에서 검색되는 바이트 수를 계산할 때 프루닝된 파티션은 포함되지 않습니다. 일반적으로 파티션 프루닝은 쿼리 비용을 줄이는 데 도움이 됩니다.\n프루닝 동작은 여러 파티셔닝 유형에 따라 달라지므로, 서로 다르게 파티셔닝되었지만 그렇지 않으면 동일한 테이블을 쿼리할 때 처리된 바이트에서 차이를 볼 수 있습니다. 쿼리가 처리할 수 있는 바이트 수를 추정하려면 테스트 실행 [https://cloud.google.com/bigquery/docs/running-queries?hl=ko#dry-run]을 수행합니다.\n시간 단위 열로 파티션을 나눈 테이블 쿼리\n시간 단위 열로 파티션을 나눈 테이블 [https://cloud.google.com/bigquery/docs/partitioned-tables?hl=ko#date_timestamp_partitioned_tables]을 쿼리할 때 파티션을 프루닝하려면 파티션 나누기 열에 필터를 포함합니다.'
 '""billingTier"": 1,\n    ""totalSlotMs"": ""50"",\n    ""cacheHit"": false,\n    ""referencedTables"": [\n      {\n        ""projectId"": ""publicdata"",\n        ""datasetId"": ""samples"",\n        ""tableId"": ""shakespeare""\n      }\n    ],\n    ""statementType"": ""SELECT""\n  },\n  ""totalSlotMs"": ""50""\n},\n실행 정보 사용\nBigQuery 쿼리 계획은 서비스의 쿼리 실행 방법에 대한 정보를 제공하지만, 서비스의 관리 특성에 따라 일부 세부정보의 직접적인 조치 가능 여부가 제한됩니다. 서비스를 사용하면 많은 최적화가 자동으로 수행되며, 이러한 최적화는 미세 조정, 프로비저닝 및 모니터링을 위해 전문 지식을 갖춘 전담 직원이 필요할 수 있는 다른 환경과 다를 수 있습니다.\n쿼리 실행과 성능을 향상시킬 수 있는 특정 기술에 대해서는 권장사항 문서 [https://cloud.google.com/bigquery/docs/best-practices-performance-overview?hl=ko]를 참조하세요. 쿼리 계획과 타임라인 통계는 어떤 스테이지에 리소스 사용이 집중되는지 이해하는 데 유용할 수 있습니다. 예를 들어 입력 행보다 훨씬 많은 출력 행을 생성하는 JOIN 스테이지는 쿼리에서 일찍 필터링하는 것이 좋습니다.\n또한 타임라인 정보는 지정된 쿼리가 독립적인 상태에서 느린 것인지 또는 같은 리소스를 놓고 경합하는 다른 쿼리의 영향으로 인해 느린 것인지 식별하는 데 유용할 수 있습니다. 쿼리 전체 기간 중에 활성 단위 수가 제한된 상태로 유지되지만 큐에 추가된 작업 단위 양이 높게 유지되는 것으로 관측될 경우 동시 쿼리 수를 줄이면 특정 쿼리의 전체 실행 시간을 크게 향상시킬 수 있습니다.\n참고: 일부 쿼리 처리는 모든 단계의 컨텍스트 외부에서 수행됩니다. 경우에 따라 첫 번째 단계가 전달되기 전이나 마지막 단계가 완료된 후에 상당한 지연 시간 또는 슬롯 사용량이 누적될 수 있습니다. 예를 들면 일부 형태의 파티션 프루닝, 다양한 메타데이터 작업, 과도한 슬롯 사용에 대한 보상 [https://cloud.google.com/bigquery/docs/slots?hl=ko#excess_slot_usage] 등이 있습니다.'
 '쿼리 계획 및 타임라인\nBigQuery는 쿼리를 실행할 때마다 쿼리 계획 [https://cloud.google.com/bigquery/query-plan-explanation?hl=ko]을 생성합니다. 효과적인 쿼리 최적화를 위해서는 이 계획을 이해하는 것이 매우 중요합니다. 쿼리 계획에는 읽은 바이트 및 사용된 슬롯 시간과 같은 실행 통계가 포함됩니다. 쿼리 계획에는 쿼리 성능을 진단하고 개선하는 데 도움이 되는 여러 실행 단계에 대한 세부정보도 포함되어 있습니다. 쿼리 실행 그래프 [https://cloud.google.com/bigquery/docs/query-insights?hl=ko]는 쿼리 계획을 보고 쿼리 성능 문제를 진단하기 위한 그래픽 인터페이스를 제공합니다.\njobs.get API 메서드 [https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/get?hl=ko] 또는 INFORMATION_SCHEMA.JOBS 뷰 [https://cloud.google.com/bigquery/docs/information-schema-jobs?hl=ko]를 사용하여 쿼리 계획 및 타임라인 정보를 검색할 수도 있습니다. 이 정보는 BigQuery 작업의 실행 단계 흐름을 시각적으로 나타내는 오픈소스 도구인 BigQuery Visualiser [https://github.com/GoogleCloudPlatform/professional-services/tree/master/tools/bq-visualizer]에서 사용됩니다.\nBigQuery는 쿼리 작업을 실행할 때 선언적 SQL 문을 실행 그래프로 변환합니다. 그리고 이 그래프를 일련의 쿼리 스테이지로 세분화합니다. 각 쿼리 스테이지에는 더 세분화된 실행 단계 조합이 있습니다. BigQuery는 크게 분산된 병렬 아키텍처를 사용하여 이러한 쿼리를 실행합니다. BigQuery 스테이지는 많은 잠재적 작업자들이 동시에 실행할 수 있는 작업 단위를 모델링합니다. 스테이지는 빠른 분산 셔플 아키텍처 [https://cloud.google.com/blog/products/gcp/in-memory-query-execution-in-google-bigquery?hl=ko]를 통해 서로 통신합니다.'
 'CREATE FUNCTION `\nPROJECT_ID.\nDATASET_ID`.decrypt(x BYTES)\nRETURNS BYTES\nREMOTE WITH CONNECTION `\nPROJECT_ID.\nLOCATION.\nCONNECTION_NAME`\nOPTIONS (\n  endpoint = \'\nENDPOINT_URL\',\n  user_defined_context = [(""mode"", ""decryption"")]\n)\n일괄 요청에서 행 수 제한\nCloud Run Functions 제한 시간 [https://cloud.google.com/functions/docs/concepts/exec?hl=ko#timeout]을 방지하기 위해 OPTIONS에서 각 HTTP 요청의 최대 행수로 max_batching_rows를 지정할 수 있습니다. max_batching_rows를 지정하면 BigQuery에서 배치의 행 수를 max_batching_rows 한도까지 결정합니다. 지정하지 않으면 BigQuery에서 배치의 행 수를 자동으로 결정합니다.\n쿼리에 원격 함수 사용\n원격 함수의 연결과 연계된 BigQuery의 서비스 계정에 액세스할 수 있도록 Cloud Run Functions에 대해 권한이 부여 [https://cloud.google.com/bigquery/docs/remote-functions?hl=ko#grant_permission_on_function]되었는지 확인합니다.\n원격 함수가 있는 데이터 세트에 bigquery.routines.get 권한과 원격 함수에서 사용하는 연결에 대한 BigQuery Connection User 역할을 통해 얻을 수 있는 bigquery.connections.use 권한이 있어야 합니다.\n사용자 정의 함수 [https://cloud.google.com/bigquery/docs/reference/standard-sql/user-defined-functions?hl=ko]와 같이 쿼리에서 원격 함수를 사용할 수 있습니다.\n예를 들어 예시 쿼리에서 remote_add 함수를 사용할 수 있습니다.\nSELECT\n  val,\n  `\nPROJECT_ID.\nDATASET_ID`.remote_add(val, 2)\nFROM\n  UNNEST([NULL,2,3,5,8]) AS val;\n이 예시는 다음 출력을 생성합니다.\n+------+-----+\n|  val | f0_ |\n+------+-----+']","BigQuery에서 쿼리 실행 단계의 병렬 입력 세그먼트 수를 확인하려면 'parallelInputs' 필드를 사용해야 합니다. 이 필드는 쿼리 실행 단계에서 동시에 처리할 수 있는 입력 세그먼트의 수를 나타냅니다. 이를 통해 사용자는 쿼리의 병렬 처리 정도를 이해할 수 있으며, 쿼리 성능을 최적화하는 데 도움이 될 수 있습니다. 병렬 입력 세그먼트 수가 높을수록 더 많은 데이터가 동시에 처리될 수 있어 쿼리 실행 속도가 빨라질 수 있습니다.","BigQuery에서 쿼리 실행 단계의 병렬 입력 세그먼트 수를 확인하려면 'parallelInputs' 필드를 사용해야 합니다. 이 필드는 쿼리 실행 단계에서 병렬로 처리되는 입력 세그먼트의 수를 나타내며, 사용자는 이를 통해 쿼리 실행의 병렬 처리 수준을 파악할 수 있습니다."
itemDownlodRestrction 뭐에요?,"['inheritedPermissionsDisabled\nboolean\n이 파일에 상속된 권한이 사용 중지되었는지 여부입니다. 상속된 권한은 기본적으로 사용 설정되어 있습니다.\ndownloadRestrictions\nobject (DownloadRestrictionsMetadata [https://developers.google.com/workspace/drive/api/reference/rest/v3/files?hl=ko#File.DownloadRestrictionsMetadata])\n파일에 적용된 다운로드 제한사항입니다.\nContentRestriction\n파일 콘텐츠 액세스 제한입니다.\nJSON 표현\n{\n  ""readOnly"": boolean,\n  ""reason"": string,\n  ""type"": string,\n  ""restrictingUser"": {\n    object (User [https://developers.google.com/workspace/drive/api/reference/rest/v3/User?hl=ko])\n  },\n  ""restrictionTime"": string,\n  ""ownerRestricted"": boolean,\n  ""systemRestricted"": boolean\n}\n필드\nreadOnly\nboolean\n파일의 콘텐츠가 읽기 전용인지 여부입니다. 파일이 읽기 전용인 경우 파일의 새 버전이 추가되지 않고, 댓글이 추가되거나 수정되지 않으며, 파일의 제목이 수정되지 않을 수 있습니다.\nreason\nstring\n파일의 콘텐츠가 제한된 이유입니다. 이는 readOnly=true도 설정하는 요청에서만 변경할 수 있습니다.\ntype\nstring\n출력 전용입니다. 콘텐츠 제한의 유형입니다. 현재 가능한 유일한 값은 globalContentRestriction입니다.\nrestrictingUser\nobject (User [https://developers.google.com/workspace/drive/api/reference/rest/v3/User?hl=ko])\n출력 전용입니다. 콘텐츠 제한을 설정한 사용자입니다. readOnly가 true인 경우에만 채워집니다.\nrestrictionTime\nstring\n출력 전용입니다. 콘텐츠 제한이 설정된 시간입니다 (형식화된 RFC 3339 타임스탬프). readOnly가 true인 경우에만 채워집니다.\nownerRestricted\nboolean'
 'object (DownloadRestriction [https://developers.google.com/workspace/drive/api/reference/rest/v3/files?hl=ko#File.DownloadRestriction])\n출력 전용입니다. 이 파일에 적용된 유효한 다운로드 제한입니다. 모든 제한 설정과 DLP 규칙이 고려됩니다.\nDownloadRestriction\n파일의 복사 및 다운로드에 대한 제한입니다.\nJSON 표현\n{\n  ""restrictedForReaders"": boolean,\n  ""restrictedForWriters"": boolean\n}\n필드\nrestrictedForReaders\nboolean\n독자의 다운로드 및 복사가 제한되는지 여부입니다.\nrestrictedForWriters\nboolean\n작성자의 다운로드 및 복사가 제한되는지 여부입니다. true인 경우 독자의 다운로드도 제한됩니다.\n메서드\ncopy [https://developers.google.com/workspace/drive/api/reference/rest/v3/files/copy?hl=ko]\n파일의 사본을 만들고 패치 의미 체계를 사용하여 요청된 업데이트를 적용합니다.\ncreate [https://developers.google.com/workspace/drive/api/reference/rest/v3/files/create?hl=ko]\n새 파일을 만듭니다.\ndelete [https://developers.google.com/workspace/drive/api/reference/rest/v3/files/delete?hl=ko]\n사용자가 소유한 파일을 휴지통으로 이동하지 않고 영구적으로 삭제합니다.\ndownload [https://developers.google.com/workspace/drive/api/reference/rest/v3/files/download?hl=ko]\n파일의 콘텐츠를 다운로드합니다.\nemptyTrash [https://developers.google.com/workspace/drive/api/reference/rest/v3/files/emptyTrash?hl=ko]\n사용자의 휴지통에 있는 모든 파일을 영구적으로 삭제합니다.'
 'restrictionTime\nstring\n출력 전용입니다. 콘텐츠 제한이 설정된 시간입니다 (형식화된 RFC 3339 타임스탬프). readOnly가 true인 경우에만 채워집니다.\nownerRestricted\nboolean\n콘텐츠 제한을 파일 소유자만 수정하거나 삭제할 수 있는지 여부입니다. 공유 드라이브의 경우 organizer 기능이 있는 모든 사용자가 이 콘텐츠 제한을 수정하거나 삭제할 수 있습니다.\nsystemRestricted\nboolean\n출력 전용입니다. 콘텐츠 제한이 시스템에 의해 적용되었는지 여부입니다(예: 전자 서명으로 인해). 사용자는 시스템 제한 콘텐츠 제한을 수정하거나 삭제할 수 없습니다.\nDownloadRestrictionsMetadata\n파일에 적용된 다운로드 제한사항입니다.\nJSON 표현\n{\n  ""itemDownloadRestriction"": {\n    object (DownloadRestriction [https://developers.google.com/workspace/drive/api/reference/rest/v3/files?hl=ko#File.DownloadRestriction])\n  },\n  ""effectiveDownloadRestrictionWithContext"": {\n    object (DownloadRestriction [https://developers.google.com/workspace/drive/api/reference/rest/v3/files?hl=ko#File.DownloadRestriction])\n  }\n}\n필드\nitemDownloadRestriction\nobject (DownloadRestriction [https://developers.google.com/workspace/drive/api/reference/rest/v3/files?hl=ko#File.DownloadRestriction])\n소유자 또는 주최자가 직접 적용한 파일의 다운로드 제한입니다. 공유 드라이브 설정 또는 DLP 규칙은 고려하지 않습니다.\neffectiveDownloadRestrictionWithContext\nobject (DownloadRestriction [https://developers.google.com/workspace/drive/api/reference/rest/v3/files?hl=ko#File.DownloadRestriction])'
 'restrictions.adminManagedRestrictions\nboolean\n이 공유 드라이브의 제한을 수정하는 데 관리 권한이 필요한지 여부입니다.\nrestrictions.sharingFoldersRequiresOrganizerPermission\nboolean\ntrue인 경우 폴더를 공유할 수 있는 사용자는 관리자 역할이 있는 사용자뿐입니다. false인 경우, 호스트 역할 또는 파일 정리 도구 역할이 있는 사용자가 폴더를 공유할 수 있습니다.\nrestrictions.downloadRestriction\nobject (DownloadRestriction [https://developers.google.com/workspace/drive/api/reference/rest/v3/files?hl=ko#File.DownloadRestriction])\n공유 드라이브 관리자가 적용한 다운로드 제한사항\norgUnitId\nstring\n출력 전용입니다. 이 공유 드라이브의 조직 단위입니다. 이 필드는 useDomainAdminAccess 매개변수가 true로 설정된 경우 drives.list 응답에서만 채워집니다.\n메서드\ncreate [https://developers.google.com/workspace/drive/api/reference/rest/v3/drives/create?hl=ko]\n공유 드라이브를 만듭니다.\ndelete [https://developers.google.com/workspace/drive/api/reference/rest/v3/drives/delete?hl=ko]\n사용자가 organizer인 공유 드라이브를 완전히 삭제합니다.\nget [https://developers.google.com/workspace/drive/api/reference/rest/v3/drives/get?hl=ko]\nID로 공유 드라이브의 메타데이터를 가져옵니다.\nhide [https://developers.google.com/workspace/drive/api/reference/rest/v3/drives/hide?hl=ko]\n기본 보기에서 공유 드라이브를 숨깁니다.\nlist [https://developers.google.com/workspace/drive/api/reference/rest/v3/drives/list?hl=ko]\n사용자의 공유 드라이브를 나열합니다.'
 'itemRevenue 구매에서 발생한 총수익에서 상품에서만 발생한 환불된 거래 수익을 뺀 값입니다. 상품 수익은 가격과 수량의 곱입니다. 상품 수익에는 세금 및 배송비가 포함되지 않습니다. 세금 및 배송비는 상품 수준이 아닌 이벤트 수준에서 지정됩니다.\nitemsClickedInPromotion 단일 상품의 프로모션에서 클릭된 단위 수입니다. 이 측정항목은 select_promotion 이벤트의 상품 수량을 집계합니다.\nitemsPurchased 구매 이벤트에 포함된 단일 상품의 단위 수입니다. 이 측정항목은 구매 이벤트의 상품 수량을 집계합니다.\nitemsViewedInPromotion 단일 상품의 프로모션에서 조회된 단위 수입니다. 이 측정항목은 view_promotion 이벤트의 상품 수량을 집계합니다.\n표 이름: TechDetails\n필드 이름 설명\nappVersion 앱의 버전 이름 (Android) 또는 약식 번들 버전 (iOS)입니다.\nbrowser 웹사이트를 볼 때 사용한 브라우저입니다.\ndeviceCategory 기기의 유형(데스크톱, 태블릿, 모바일)입니다.\noperatingSystem 앱 또는 웹사이트 방문자가 사용한 운영체제입니다. Windows, Android와 같은 데스크톱 및 모바일 운영체제가 포함됩니다.\noperatingSystemVersion 웹사이트 또는 앱 방문자가 사용한 운영체제 버전입니다. 예를 들어 Android 10의 버전은 10이고 iOS 13.5.1의 버전은 13.5.1입니다.\noperatingSystemWithVersion 운영체제 및 버전입니다. 예: Android 10 또는 Windows 7\n플랫폼 앱이나 웹사이트가 실행된 플랫폼(예: 웹, iOS, Android)입니다. 보고서에서 스트림의 유형을 확인하려면 플랫폼과 streamId를 모두 사용하세요.\nplatformDeviceCategory 내 웹사이트 또는 모바일 앱이 실행된 플랫폼 및 기기 유형입니다. (예: Android / 모바일)\nscreenResolution 사용자 모니터의 화면 해상도입니다. 예: 1920x1080\nactiveUsers 웹사이트 또는 애플리케이션을 방문한 개별 사용자의 수입니다.\nengagedSessions 10초 넘게 지속되었거나, 주요 이벤트가 발생했거나, 화면 조회수가 2회 이상인 세션의 수입니다.'
 'Source URL: https://developers.google.com/workspace/drive/api/reference/rest/v3/User?hl=ko\n\n이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.\nSwitch to English\n홈 [https://developers.google.com/?hl=ko]\nGoogle Workspace [https://developers.google.com/workspace?hl=ko]\nGoogle Drive [https://developers.google.com/workspace/drive?hl=ko]\n참조 [https://developers.google.com/workspace/drive/api/reference/rest/v3?hl=ko]\n의견 보내기\nUser\nbookmark_border\nDrive 사용자에 관한 정보입니다.\nJSON 표현\n{\n  ""displayName"": string,\n  ""kind"": string,\n  ""me"": boolean,\n  ""permissionId"": string,\n  ""emailAddress"": string,\n  ""photoLink"": string\n}\n필드\ndisplayName\nstring\n출력 전용입니다. 이 사용자의 표시 가능한 일반 텍스트 이름입니다.\nkind\nstring\n출력 전용입니다. 리소스 종류를 식별합니다. 값: 고정 문자열 drive#user.\nme\nboolean\n출력 전용입니다. 이 사용자가 요청하는 사용자인지 여부입니다.\npermissionId\nstring\n출력 전용입니다. 권한 리소스에 표시되는 사용자의 ID입니다.\nemailAddress\nstring\n출력 전용입니다. 사용자의 이메일 주소입니다. 사용자가 요청자에게 이메일 주소를 표시하지 않은 경우 특정 컨텍스트에 표시되지 않을 수 있습니다.\nphotoLink\nstring\n출력 전용입니다. 사용자의 프로필 사진 링크입니다(사용 가능한 경우).\n의견 보내기'
 'list [https://developers.google.com/workspace/drive/api/reference/rest/v2/revisions/list?hl=ko] GET /drive/v2/files/{fileId}/revisions\n파일의 버전을 나열합니다.\npatch [https://developers.google.com/workspace/drive/api/reference/rest/v2/revisions/patch?hl=ko] PATCH /drive/v2/files/{fileId}/revisions/{revisionId}\n버전을 업데이트합니다.\nupdate [https://developers.google.com/workspace/drive/api/reference/rest/v2/revisions/update?hl=ko] PUT /drive/v2/files/{fileId}/revisions/{revisionId}\n버전을 업데이트합니다.\n도움이 되었나요?\n의견 보내기'
 '지정된 댓글에 대한 새 답글을 만듭니다.\nlist [https://developers.google.com/workspace/drive/api/reference/rest/v2/replies/list?hl=ko] GET /drive/v2/files/{fileId}/comments/{commentId}/replies\n댓글에 대한 모든 답글을 나열합니다.\npatch [https://developers.google.com/workspace/drive/api/reference/rest/v2/replies/patch?hl=ko] PATCH /drive/v2/files/{fileId}/comments/{commentId}/replies/{replyId}\n기존 답장을 업데이트합니다.\nupdate [https://developers.google.com/workspace/drive/api/reference/rest/v2/replies/update?hl=ko] PUT /drive/v2/files/{fileId}/comments/{commentId}/replies/{replyId}\n기존 답장을 업데이트합니다.\nREST 리소스: v2.revisions [https://developers.google.com/workspace/drive/api/reference/rest/v2/revisions?hl=ko]\n메서드\ndelete [https://developers.google.com/workspace/drive/api/reference/rest/v2/revisions/delete?hl=ko] DELETE /drive/v2/files/{fileId}/revisions/{revisionId}\n파일 버전을 영구적으로 삭제합니다.\nget [https://developers.google.com/workspace/drive/api/reference/rest/v2/revisions/get?hl=ko] GET /drive/v2/files/{fileId}/revisions/{revisionId}\n특정 버전을 가져옵니다.\nlist [https://developers.google.com/workspace/drive/api/reference/rest/v2/revisions/list?hl=ko] GET /drive/v2/files/{fileId}/revisions\n파일의 버전을 나열합니다.'
 '파일에 속성을 추가하거나 이미 있는 경우 업데이트합니다.\nlist [https://developers.google.com/workspace/drive/api/reference/rest/v2/properties/list?hl=ko] GET /drive/v2/files/{fileId}/properties\n파일의 속성을 나열합니다.\npatch [https://developers.google.com/workspace/drive/api/reference/rest/v2/properties/patch?hl=ko] PATCH /drive/v2/files/{fileId}/properties/{propertyKey}\n속성을 업데이트합니다.\nupdate [https://developers.google.com/workspace/drive/api/reference/rest/v2/properties/update?hl=ko] PUT /drive/v2/files/{fileId}/properties/{propertyKey}\n속성을 업데이트합니다.\nREST 리소스: v2.replies [https://developers.google.com/workspace/drive/api/reference/rest/v2/replies?hl=ko]\n메서드\ndelete [https://developers.google.com/workspace/drive/api/reference/rest/v2/replies/delete?hl=ko] DELETE /drive/v2/files/{fileId}/comments/{commentId}/replies/{replyId}\n답글을 삭제합니다.\nget [https://developers.google.com/workspace/drive/api/reference/rest/v2/replies/get?hl=ko] GET /drive/v2/files/{fileId}/comments/{commentId}/replies/{replyId}\n답장을 가져옵니다.\ninsert [https://developers.google.com/workspace/drive/api/reference/rest/v2/replies/insert?hl=ko] POST /drive/v2/files/{fileId}/comments/{commentId}/replies\n지정된 댓글에 대한 새 답글을 만듭니다.'
 '파일 또는 공유 드라이브의 권한을 삽입합니다.\nlist [https://developers.google.com/workspace/drive/api/reference/rest/v2/permissions/list?hl=ko] GET /drive/v2/files/{fileId}/permissions\n파일 또는 공유 드라이브의 권한을 표시합니다.\npatch [https://developers.google.com/workspace/drive/api/reference/rest/v2/permissions/patch?hl=ko] PATCH /drive/v2/files/{fileId}/permissions/{permissionId}\n패치 시맨틱스를 사용하여 권한을 업데이트합니다.\nupdate [https://developers.google.com/workspace/drive/api/reference/rest/v2/permissions/update?hl=ko] PUT /drive/v2/files/{fileId}/permissions/{permissionId}\n권한을 업데이트합니다.\nREST 리소스: v2.properties [https://developers.google.com/workspace/drive/api/reference/rest/v2/properties?hl=ko]\n메서드\ndelete [https://developers.google.com/workspace/drive/api/reference/rest/v2/properties/delete?hl=ko] DELETE /drive/v2/files/{fileId}/properties/{propertyKey}\n속성을 삭제합니다.\nget [https://developers.google.com/workspace/drive/api/reference/rest/v2/properties/get?hl=ko] GET /drive/v2/files/{fileId}/properties/{propertyKey}\n키를 기준으로 속성을 가져옵니다.\ninsert [https://developers.google.com/workspace/drive/api/reference/rest/v2/properties/insert?hl=ko] POST /drive/v2/files/{fileId}/properties\n파일에 속성을 추가하거나 이미 있는 경우 업데이트합니다.']","'itemDownloadRestriction'은 파일의 다운로드 제한사항을 나타내는 필드입니다. 이 필드는 소유자 또는 주최자가 직접 적용한 파일의 다운로드 제한을 포함하며, 공유 드라이브 설정이나 DLP 규칙은 고려하지 않습니다. 이를 통해 파일의 다운로드 제한이 소유자나 주최자에 의해 설정되었는지 확인할 수 있습니다.",itemDownloadRestriction 필드는 소유자 또는 주최자가 직접 적용한 파일의 다운로드 제한을 확인할 때 사용합니다.
What does the textFormat field represent in TreemapChartSpec's JSON?,"['스코어카드 차트의 숫자 키/기준 값에 대한 맞춤 형식 지정 옵션입니다. 이 필드는 numberFormatSource [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/charts?hl=ko#ScorecardChartSpec.FIELDS.number_format_source]가 CUSTOM [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets?hl=ko#ChartNumberFormatSource.ENUM_VALUES.CUSTOM]로 설정된 경우에만 사용됩니다. 이 필드는 선택사항입니다.\nKeyValueFormat\n키 값의 서식 옵션입니다.\nJSON 표현\n{\n  ""textFormat"": {\n    object (TextFormat [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#TextFormat])\n  },\n  ""position"": {\n    object (TextPosition [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/charts?hl=ko#TextPosition])\n  }\n}\n필드\ntextFormat\nobject (TextFormat [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#TextFormat])\n키 값의 텍스트 서식 지정 옵션입니다. 링크 필드는 지원되지 않습니다.\nposition\nobject (TextPosition [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/charts?hl=ko#TextPosition])\n키 값의 가로 텍스트 위치를 지정합니다. 이 필드는 선택사항입니다. 지정하지 않으면 기본 위치 지정이 사용됩니다.\nBaselineValueFormat\n기준 값의 형식 지정 옵션입니다.\nJSON 표현\n{'
 'TreemapChartSpec\n트리맵 차트 [https://developers.google.com/chart/interactive/docs/gallery/treemap?hl=ko]\nJSON 표현\n{\n  ""labels"": {\n    object (ChartData [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/charts?hl=ko#ChartData])\n  },\n  ""parentLabels"": {\n    object (ChartData [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/charts?hl=ko#ChartData])\n  },\n  ""sizeData"": {\n    object (ChartData [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/charts?hl=ko#ChartData])\n  },\n  ""colorData"": {\n    object (ChartData [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/charts?hl=ko#ChartData])\n  },\n  ""textFormat"": {\n    object (TextFormat [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#TextFormat])\n  },\n  ""levels"": integer,\n  ""hintedLevels"": integer,\n  ""minValue"": number,\n  ""maxValue"": number,\n  ""headerColor"": {\n    object (Color [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#Color])\n  },\n  ""headerColorStyle"": {'
 'hideTooltips\nboolean\n도움말을 숨기려면 true로 설정합니다.\nTreemapChartColorScale\n트리맵 차트의 색상 스케일입니다.\nJSON 표현\n{\n  ""minValueColor"": {\n    object (Color [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#Color])\n  },\n  ""minValueColorStyle"": {\n    object (ColorStyle [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#ColorStyle])\n  },\n  ""midValueColor"": {\n    object (Color [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#Color])\n  },\n  ""midValueColorStyle"": {\n    object (ColorStyle [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#ColorStyle])\n  },\n  ""maxValueColor"": {\n    object (Color [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#Color])\n  },\n  ""maxValueColorStyle"": {\n    object (ColorStyle [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#ColorStyle])\n  },\n  ""noDataColor"": {\n    object (Color [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#Color])\n  },\n  ""noDataColorStyle"": {'
 '의견 보내기\n\nLabel\nbookmark_border\n\n이 페이지의 내용\n필드\n\n라벨 및 라벨 필드의 표현입니다.\nJSON 표현\n{\n  ""fields"": {\n    string: {\n      object (Field)\n    },\n    ...\n  },\n  ""id"": string,\n  ""revisionId"": string,\n  ""kind"": string\n}\n필드\nfields\nmap (key: string, value: object (Field))\n라벨의 필드 맵으로, 필드의 ID를 키로 사용합니다.\n""key"": value 쌍 목록을 포함하는 객체입니다. 예: { ""name"": ""wrench"", ""mass"": ""1.3kg"", ""count"": ""3"" }\nid\nstring\n라벨의 ID입니다.\nrevisionId\nstring\n라벨의 버전 ID입니다.\nkind\nstring\n항상 drive#label입니다.\n필드\n필드의 표현으로, 유형이 지정된 키-값 쌍입니다.\nJSON 표현\n{\n  ""dateString"": [\n    string\n  ],\n  ""integer"": [\n    string\n  ],\n  ""selection"": [\n    string\n  ],\n  ""text"": [\n    string\n  ],\n  ""user"": [\n    {\n      object (User)\n    }\n  ],\n  ""kind"": string,\n  ""id"": string,\n  ""valueType"": string\n}\n필드\ndateString[]\nstring\nvalueType이 dateString인 경우에만 표시됩니다. RFC 3339 형식의 날짜: YYYY-MM-DD\ninteger[]\nstring (int64 format)\nvalueType이 integer인 경우에만 표시됩니다.\nselection[]\nstring\nvalueType이 selection인 경우에만 값이 있습니다.\ntext[]\nstring\nvalueType이 text인 경우에만 표시됩니다.\nuser[]\nobject (User)\nvalueType이 user인 경우에만 표시됩니다.\nkind\nstring\n항상 drive#labelField입니다.\nid\nstring\n이 라벨 필드의 식별자입니다.\nvalueType\nstring\n필드 유형입니다. 향후 새로운 값이 지원될 수 있지만 현재는 다음 값만 허용됩니다.\ndateString\ninteger\nselection\ntext\nuser\n\n의견 보내기'
 '출력 전용입니다. 설정된 경우 데이터 소스 시트의 열입니다.\nConditionalFormatRule\n조건부 서식을 설명하는 규칙입니다.\nJSON 표현\n{\n  ""ranges"": [\n    {\n      object (GridRange [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#GridRange])\n    }\n  ],'
 '},\n  ""negativeColorStyle"": {\n    object (ColorStyle [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#ColorStyle])\n  }\n}\n필드\ncomparisonType\nenum (ComparisonType [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/charts?hl=ko#ComparisonType])\n키 값과 기준 값의 비교 유형입니다.\ntextFormat\nobject (TextFormat [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#TextFormat])\n기준 값의 텍스트 서식 지정 옵션입니다. 링크 필드는 지원되지 않습니다.\nposition\nobject (TextPosition [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/charts?hl=ko#TextPosition])\n기준값의 가로 텍스트 위치를 지정합니다. 이 필드는 선택사항입니다. 지정하지 않으면 기본 위치 지정이 사용됩니다.\ndescription\nstring\n기준 값 뒤에 추가되는 설명입니다. 이 필드는 선택사항입니다.\npositiveColor\n(deprecated)\nobject (Color [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#Color])\n이 항목은 지원 중단되었습니다.\n기준 값이 키 값의 양수 변화를 나타내는 경우 사용되는 색상입니다. 이 필드는 선택사항입니다. 지원 중단됨: positiveColorStyle [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/charts?hl=ko#BaselineValueFormat.FIELDS.positive_color_style]를 사용하세요.\npositiveColorStyle'
 'sizeData\nobject (ChartData [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/charts?hl=ko#ChartData])\n각 트리맵 데이터 셀의 크기를 결정하는 데이터입니다. 이 데이터는 숫자여야 합니다. 숫자가 아니거나 누락된 데이터에 해당하는 셀은 렌더링되지 않습니다. colorData [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/charts?hl=ko#TreemapChartSpec.FIELDS.color_data]이 지정되지 않으면 이 데이터는 데이터 셀 배경 색상을 결정하는 데도 사용됩니다.\ncolorData\nobject (ChartData [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/charts?hl=ko#ChartData])\n각 트리맵 데이터 셀의 배경 색상을 결정하는 데이터입니다. 이 필드는 선택사항입니다. 지정하지 않으면 sizeData [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/charts?hl=ko#TreemapChartSpec.FIELDS.size_data]이 배경 색상을 결정하는 데 사용됩니다. 지정된 경우 데이터는 숫자여야 합니다. colorScale [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/charts?hl=ko#TreemapChartSpec.FIELDS.color_scale]는 이 데이터의 값이 데이터 셀 배경 색상에 매핑되는 방식을 결정합니다.\ntextFormat\nobject (TextFormat [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#TextFormat])\n차트의 모든 라벨에 사용할 텍스트 형식입니다. 링크 필드는 지원되지 않습니다.\nlevels\ninteger'
 '}\n필드\ndataRange\nobject (GridRange [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#GridRange])\n슬라이서의 데이터 범위입니다.\nfilterCriteria\nobject (FilterCriteria [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#FilterCriteria])\n슬라이서의 필터링 기준입니다.\ncolumnIndex\ninteger\n필터가 적용되는 데이터 테이블의 0부터 시작하는 열 색인입니다.\napplyToPivotTables\nboolean\n필터를 피벗 테이블에 적용해야 하는 경우 true입니다. 설정하지 않으면 기본값은 True입니다.\ntitle\nstring\n슬라이서의 제목입니다.\ntextFormat\nobject (TextFormat [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#TextFormat])\n슬라이서에 표시되는 제목의 텍스트 형식입니다. 링크 필드는 지원되지 않습니다.\nbackgroundColor\n(deprecated)\nobject (Color [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#Color])\n이 항목은 지원 중단되었습니다.\n슬라이서의 배경 색상입니다. 지원 중단됨: backgroundColorStyle [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/sheets?hl=ko#SlicerSpec.FIELDS.background_color_style]를 사용하세요.\nbackgroundColorStyle\nobject (ColorStyle [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#ColorStyle])'
 'DataLabel\n데이터 라벨 한 세트의 설정입니다. 데이터 라벨은 선 차트의 점과 같은 데이터 세트 옆에 표시되는 주석으로, 그래프의 해당 지점 뒤에 있는 값의 텍스트 표현과 같이 데이터가 나타내는 항목에 관한 추가 정보를 제공합니다.\nJSON 표현\n{\n  ""type"": enum (DataLabelType [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/charts?hl=ko#DataLabelType]),\n  ""textFormat"": {\n    object (TextFormat [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#TextFormat])\n  },\n  ""placement"": enum (DataLabelPlacement [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/charts?hl=ko#DataLabelPlacement]),\n  ""customLabelData"": {\n    object (ChartData [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/charts?hl=ko#ChartData])\n  }\n}\n필드\ntype\nenum (DataLabelType [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/charts?hl=ko#DataLabelType])\n데이터 라벨의 유형입니다.\ntextFormat\nobject (TextFormat [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets/other?hl=ko#TextFormat])\n데이터 라벨에 사용되는 텍스트 형식입니다. 링크 필드는 지원되지 않습니다.\nplacement']",The textFormat field in TreemapChartSpec's JSON represents the text format used for all labels in the chart. It does not support link fields.,The textFormat field specifies the text format to be used for all labels in the chart. Link fields are not supported.
fileId는 무엇을 의미하나요?,"['리소스: 변경\n파일 또는 공유 드라이브의 변경사항을 나타냅니다.\nJSON 표현\n{\n  ""id"": string,\n  ""deleted"": boolean,\n  ""file"": {\n    object (File)\n  },\n  ""fileId"": string,\n  ""modificationDate"": string,\n  ""kind"": string,\n  ""type"": string,\n  ""teamDriveId"": string,\n  ""teamDrive"": {\n    object (TeamDrive)\n  },\n  ""changeType"": string,\n  ""selfLink"": string,\n  ""driveId"": string,\n  ""drive"": {\n    object (Drive)\n  }\n}\n필드\nid\nstring (int64 format)\n변경의 ID입니다.\ndeleted\nboolean\n삭제 또는 액세스 권한 상실 등으로 인해 파일 또는 공유 드라이브가 이 변경사항 목록에서 삭제되었는지 여부입니다.\nfile\nobject (File)\n업데이트된 파일 상태입니다. 유형이 파일이고 이 변경사항 목록에서 파일이 삭제되지 않은 경우 표시됩니다.\nfileId\nstring\n이 변경사항과 연결된 파일의 ID입니다.\nmodificationDate\nstring\n이 수정사항이 적용된 시간입니다.\nkind\nstring\n항상 drive#change입니다.\ntype\n(deprecated)\nstring\n이 항목은 지원 중단되었습니다.\n지원 중단됨: 대신 changeType를 사용하세요.\nteamDriveId\n(deprecated)\nstring\n이 항목은 지원 중단되었습니다.\n지원 중단됨: 대신 driveId를 사용하세요.\nteamDrive\n(deprecated)\nobject (TeamDrive)\n이 항목은 지원 중단되었습니다.\n지원 중단됨: 대신 drive를 사용하세요.\nchangeType\nstring\n변경 유형입니다. 가능한 값은 file 및 drive입니다.\nselfLink\nstring\n이 변경사항으로 연결되는 링크입니다.\ndriveId\nstring\n이 변경사항과 연결된 공유 드라이브의 ID입니다.\ndrive\nobject (Drive)\n업데이트된 공유 드라이브 상태입니다. changeType이 drive인 경우, 사용자가 여전히 공유 드라이브의 멤버이고 공유 드라이브가 삭제되지 않은 경우 표시됩니다.\n메서드\nget'
 '경로 매개변수\n매개변수\nspreadsheetId\nstring\n메타데이터를 가져올 스프레드시트의 ID입니다.\n요청 본문\n요청 본문에는 다음과 같은 구조의 데이터가 포함됩니다.\nJSON 표현\n{\n  ""dataFilters"": [\n    {\n      object (DataFilter [https://developers.google.com/workspace/sheets/api/reference/rest/v4/DataFilter?hl=ko])\n    }\n  ]\n}\n필드\ndataFilters[]\nobject (DataFilter [https://developers.google.com/workspace/sheets/api/reference/rest/v4/DataFilter?hl=ko])\n반환할 DeveloperMetadata 항목을 결정하는 데 사용되는 기준을 설명하는 데이터 필터입니다. 지정된 필터와 일치하는 DeveloperMetadata가 응답에 포함됩니다.\n응답 본문\n개발자 메타데이터 검색 요청에 대한 답장입니다.\n성공한 경우 응답 본문은 다음과 같은 구조의 데이터를 포함합니다.\nJSON 표현\n{\n  ""matchedDeveloperMetadata"": [\n    {\n      object (MatchedDeveloperMetadata [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets.developerMetadata/search?hl=ko#MatchedDeveloperMetadata])\n    }\n  ]\n}\n필드\nmatchedDeveloperMetadata[]\nobject (MatchedDeveloperMetadata [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets.developerMetadata/search?hl=ko#MatchedDeveloperMetadata])\n검색 요청의 기준과 일치하는 메타데이터입니다.\n승인 범위\n다음 OAuth 범위 중 하나가 필요합니다.\nhttps://www.googleapis.com/auth/drive\nhttps://www.googleapis.com/auth/drive.file\nhttps://www.googleapis.com/auth/spreadsheets'
 'shortcutDetails.targetId\nstring\n이 바로가기가 가리키는 파일의 ID입니다. files.create 요청에서만 설정할 수 있습니다.\nshortcutDetails.targetMimeType\nstring\n출력 전용입니다. 이 바로가기가 가리키는 파일의 MIME 유형입니다. 이 필드의 값은 바로가기가 생성될 때 캡처된 타겟의 MIME 유형 스냅샷입니다.\nshortcutDetails.targetResourceKey\nstring\n출력 전용입니다. 타겟 파일의 ResourceKey입니다.\nresourceKey\nstring\n출력 전용입니다. 공유 링크를 통해 항목에 액세스하는 데 필요한 키입니다.\nlinkShareMetadata\nobject\n출력 전용입니다. LinkShare 관련 세부정보입니다. 클라이언트가 이 항목을 참조하는 데 사용하는 링크 URL에 관한 세부정보가 포함되어 있습니다.\nlinkShareMetadata.securityUpdateEligible\nboolean\n출력 전용입니다. 파일에 보안 업데이트가 적용될 수 있는지 여부입니다.\nlinkShareMetadata.securityUpdateEnabled\nboolean\n출력 전용입니다. 이 파일에 보안 업데이트가 사용 설정되어 있는지 여부입니다.\nlabelInfo\nobject\n출력 전용입니다. 파일의 라벨 개요입니다.\nlabelInfo.labels[]\nobject (Label [https://developers.google.com/workspace/drive/api/reference/rest/v3/Label?hl=ko])\n출력 전용입니다. includeLabels 매개변수의 라벨 ID에 의해 요청된 파일의 라벨 집합입니다. 기본적으로 라벨이 반환되지 않습니다.\nsha1Checksum\nstring\n출력 전용입니다. 이 파일과 연결된 SHA1 체크섬입니다(사용 가능한 경우). 이 필드는 Google Drive에 콘텐츠가 저장된 파일에만 채워지며, Docs 편집기 또는 바로가기 파일에는 채워지지 않습니다.\nsha256Checksum\nstring\n출력 전용입니다. 이 파일과 연결된 SHA256 체크섬입니다(사용 가능한 경우). 이 필드는 Google Drive에 콘텐츠가 저장된 파일에만 채워지며, Docs 편집기 또는 바로가기 파일에는 채워지지 않습니다.\ninheritedPermissionsDisabled\nboolean'
 '경로 매개변수\n매개변수\nspreadsheetId\nstring\n업데이트할 스프레드시트의 ID입니다.\n요청 본문\n요청 본문에는 다음과 같은 구조의 데이터가 포함됩니다.\nJSON 표현\n{\n  ""valueInputOption"": enum (ValueInputOption [https://developers.google.com/workspace/sheets/api/reference/rest/v4/ValueInputOption?hl=ko]),\n  ""data"": [\n    {\n      object (DataFilterValueRange [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets.values/batchUpdateByDataFilter?hl=ko#DataFilterValueRange])\n    }\n  ],\n  ""includeValuesInResponse"": boolean,\n  ""responseValueRenderOption"": enum (ValueRenderOption [https://developers.google.com/workspace/sheets/api/reference/rest/v4/ValueRenderOption?hl=ko]),\n  ""responseDateTimeRenderOption"": enum (DateTimeRenderOption [https://developers.google.com/workspace/sheets/api/reference/rest/v4/DateTimeRenderOption?hl=ko])\n}\n필드\nvalueInputOption\nenum (ValueInputOption [https://developers.google.com/workspace/sheets/api/reference/rest/v4/ValueInputOption?hl=ko])\n입력 데이터가 해석되어야 하는 방식입니다.\ndata[]\nobject (DataFilterValueRange [https://developers.google.com/workspace/sheets/api/reference/rest/v4/spreadsheets.values/batchUpdateByDataFilter?hl=ko#DataFilterValueRange])'
 '문서 ID 매핑에 대한 간단한 설명\n\n더 많은 유형을 매핑하기 전에 잠시 문서 ID를 매핑하는 방법을 알아보겠습니다.\n\n이전 예시의 @DocumentID 속성 래퍼를 사용하여 Cloud Firestore 문서의 문서 ID를 Swift 유형의 id 속성에 매핑했습니다. 이것이 중요한 이유는 다음과 같습니다.\n\n이렇게 하면 사용자가 로컬에서 변경한 경우 어떤 문서를 업데이트할지 알 수 있습니다.\nSwiftUI의 List는 요소가 삽입될 때 이동하지 못하도록 요소가 Identifiable이어야 합니다.\n\n@DocumentID로 표시된 속성은 문서를 다시 작성할 때 Cloud Firestore의 인코더에서 인코딩되지 않는다는 점에 주목해야 합니다. 그 이유는 문서 ID가 문서 자체의 속성이 아니기 때문에 문서에 쓰면 안 됩니다.\n\n중첩된 유형(예: 이 가이드의 앞선 예시에 있는 Book의 태그 배열)을 사용하는 경우 @DocumentID 속성을 추가하지 않아도 됩니다. 중첩 속성은 Cloud Firestore 문서의 일부이며 별도의 문서를 구성하지 않습니다. 따라서 문서 ID가 필요하지 않습니다.\n\n날짜 및 시간\n\nCloud Firestore에는 날짜 및 시간 처리를 위한 기본 제공 데이터 유형이 있으며 Cloud Firestore의 Codable 지원을 통해 이를 사용하는 방법은 간단합니다.\n\n1843년에 발명된 모든 프로그래밍 언어의 어머니인 에이다를 보여주는 문서를 살펴보겠습니다.\n\n이 문서를 매핑하는 Swift 유형은 다음과 같습니다.\nstruct ProgrammingLanguage: Codable {\n@DocumentID var id: String?\nvar name: String\nvar year: Date\n}\n\n날짜와 시간에 관한 이 섹션은 @ServerTimestamp에 대한 이야기를 빼놓고는 다룰 수 없습니다. 이 속성 래퍼는 앱에서 타임스탬프를 처리하는 데 중요한 역할을 합니다.\n\n모든 분산 시스템에서 개별 시스템의 시계가 항상 완전히 동기화되지 않을 수 있습니다. 이는 별 문제가 아니라고 생각할 수 있지만 증권 거래 시스템에서 시계가 조금이라도 동기화되지 않는 경우에 미치게 될 영향을 상상해 보세요. 밀리초 단위의 편차만으로도 거래 시 수백만 달러의 차이가 발생할 수 있습니다.'
 'Source URL: https://developers.google.com/workspace/drive/api/reference/rest/v3/User?hl=ko\n\n이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.\nSwitch to English\n홈 [https://developers.google.com/?hl=ko]\nGoogle Workspace [https://developers.google.com/workspace?hl=ko]\nGoogle Drive [https://developers.google.com/workspace/drive?hl=ko]\n참조 [https://developers.google.com/workspace/drive/api/reference/rest/v3?hl=ko]\n의견 보내기\nUser\nbookmark_border\nDrive 사용자에 관한 정보입니다.\nJSON 표현\n{\n  ""displayName"": string,\n  ""kind"": string,\n  ""me"": boolean,\n  ""permissionId"": string,\n  ""emailAddress"": string,\n  ""photoLink"": string\n}\n필드\ndisplayName\nstring\n출력 전용입니다. 이 사용자의 표시 가능한 일반 텍스트 이름입니다.\nkind\nstring\n출력 전용입니다. 리소스 종류를 식별합니다. 값: 고정 문자열 drive#user.\nme\nboolean\n출력 전용입니다. 이 사용자가 요청하는 사용자인지 여부입니다.\npermissionId\nstring\n출력 전용입니다. 권한 리소스에 표시되는 사용자의 ID입니다.\nemailAddress\nstring\n출력 전용입니다. 사용자의 이메일 주소입니다. 사용자가 요청자에게 이메일 주소를 표시하지 않은 경우 특정 컨텍스트에 표시되지 않을 수 있습니다.\nphotoLink\nstring\n출력 전용입니다. 사용자의 프로필 사진 링크입니다(사용 가능한 경우).\n의견 보내기'
 'list [https://developers.google.com/workspace/drive/api/reference/rest/v2/revisions/list?hl=ko] GET /drive/v2/files/{fileId}/revisions\n파일의 버전을 나열합니다.\npatch [https://developers.google.com/workspace/drive/api/reference/rest/v2/revisions/patch?hl=ko] PATCH /drive/v2/files/{fileId}/revisions/{revisionId}\n버전을 업데이트합니다.\nupdate [https://developers.google.com/workspace/drive/api/reference/rest/v2/revisions/update?hl=ko] PUT /drive/v2/files/{fileId}/revisions/{revisionId}\n버전을 업데이트합니다.\n도움이 되었나요?\n의견 보내기'
 '지정된 댓글에 대한 새 답글을 만듭니다.\nlist [https://developers.google.com/workspace/drive/api/reference/rest/v2/replies/list?hl=ko] GET /drive/v2/files/{fileId}/comments/{commentId}/replies\n댓글에 대한 모든 답글을 나열합니다.\npatch [https://developers.google.com/workspace/drive/api/reference/rest/v2/replies/patch?hl=ko] PATCH /drive/v2/files/{fileId}/comments/{commentId}/replies/{replyId}\n기존 답장을 업데이트합니다.\nupdate [https://developers.google.com/workspace/drive/api/reference/rest/v2/replies/update?hl=ko] PUT /drive/v2/files/{fileId}/comments/{commentId}/replies/{replyId}\n기존 답장을 업데이트합니다.\nREST 리소스: v2.revisions [https://developers.google.com/workspace/drive/api/reference/rest/v2/revisions?hl=ko]\n메서드\ndelete [https://developers.google.com/workspace/drive/api/reference/rest/v2/revisions/delete?hl=ko] DELETE /drive/v2/files/{fileId}/revisions/{revisionId}\n파일 버전을 영구적으로 삭제합니다.\nget [https://developers.google.com/workspace/drive/api/reference/rest/v2/revisions/get?hl=ko] GET /drive/v2/files/{fileId}/revisions/{revisionId}\n특정 버전을 가져옵니다.\nlist [https://developers.google.com/workspace/drive/api/reference/rest/v2/revisions/list?hl=ko] GET /drive/v2/files/{fileId}/revisions\n파일의 버전을 나열합니다.'
 '파일에 속성을 추가하거나 이미 있는 경우 업데이트합니다.\nlist [https://developers.google.com/workspace/drive/api/reference/rest/v2/properties/list?hl=ko] GET /drive/v2/files/{fileId}/properties\n파일의 속성을 나열합니다.\npatch [https://developers.google.com/workspace/drive/api/reference/rest/v2/properties/patch?hl=ko] PATCH /drive/v2/files/{fileId}/properties/{propertyKey}\n속성을 업데이트합니다.\nupdate [https://developers.google.com/workspace/drive/api/reference/rest/v2/properties/update?hl=ko] PUT /drive/v2/files/{fileId}/properties/{propertyKey}\n속성을 업데이트합니다.\nREST 리소스: v2.replies [https://developers.google.com/workspace/drive/api/reference/rest/v2/replies?hl=ko]\n메서드\ndelete [https://developers.google.com/workspace/drive/api/reference/rest/v2/replies/delete?hl=ko] DELETE /drive/v2/files/{fileId}/comments/{commentId}/replies/{replyId}\n답글을 삭제합니다.\nget [https://developers.google.com/workspace/drive/api/reference/rest/v2/replies/get?hl=ko] GET /drive/v2/files/{fileId}/comments/{commentId}/replies/{replyId}\n답장을 가져옵니다.\ninsert [https://developers.google.com/workspace/drive/api/reference/rest/v2/replies/insert?hl=ko] POST /drive/v2/files/{fileId}/comments/{commentId}/replies\n지정된 댓글에 대한 새 답글을 만듭니다.'
 '파일 또는 공유 드라이브의 권한을 삽입합니다.\nlist [https://developers.google.com/workspace/drive/api/reference/rest/v2/permissions/list?hl=ko] GET /drive/v2/files/{fileId}/permissions\n파일 또는 공유 드라이브의 권한을 표시합니다.\npatch [https://developers.google.com/workspace/drive/api/reference/rest/v2/permissions/patch?hl=ko] PATCH /drive/v2/files/{fileId}/permissions/{permissionId}\n패치 시맨틱스를 사용하여 권한을 업데이트합니다.\nupdate [https://developers.google.com/workspace/drive/api/reference/rest/v2/permissions/update?hl=ko] PUT /drive/v2/files/{fileId}/permissions/{permissionId}\n권한을 업데이트합니다.\nREST 리소스: v2.properties [https://developers.google.com/workspace/drive/api/reference/rest/v2/properties?hl=ko]\n메서드\ndelete [https://developers.google.com/workspace/drive/api/reference/rest/v2/properties/delete?hl=ko] DELETE /drive/v2/files/{fileId}/properties/{propertyKey}\n속성을 삭제합니다.\nget [https://developers.google.com/workspace/drive/api/reference/rest/v2/properties/get?hl=ko] GET /drive/v2/files/{fileId}/properties/{propertyKey}\n키를 기준으로 속성을 가져옵니다.\ninsert [https://developers.google.com/workspace/drive/api/reference/rest/v2/properties/insert?hl=ko] POST /drive/v2/files/{fileId}/properties\n파일에 속성을 추가하거나 이미 있는 경우 업데이트합니다.']","fileId는 파일의 ID를 의미합니다. 이는 Google Drive API에서 파일을 식별하는 데 사용되는 고유한 식별자입니다. 예를 들어, 변경사항 리소스에서 'fileId' 필드는 변경된 파일의 ID를 담고 있습니다.",fileId는 파일의 ID를 의미합니다.
"Gmail 작업을 선언하는 방법에 대해 자세히 알고 싶은데, Declaring Actions 관련 자료는 어디서 찿을수 있나요?","['Source URL: https://developers.google.com/workspace/gmail/markup/actions/handling-action-requests\n\n이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.\nSwitch to English\n홈 [https://developers.google.com/?hl=ko]\nGoogle Workspace [https://developers.google.com/workspace?hl=ko]\nGmail [https://developers.google.com/workspace/gmail?hl=ko]\n가이드 [https://developers.google.com/workspace/gmail/api/guides?hl=ko]\n의견 보내기\n작업 요청 처리\nbookmark_border\n이 페이지의 내용\n1단계: 요청 확인\n2단계: 작업 처리\n3단계: 응답 코드 반환\n추가 자료\n작업 선언 [https://developers.google.com/workspace/gmail/markup/actions/declaring-actions?hl=ko]에 설명된 대로 사용자가 인앱 작업과 상호작용하면 Google은 작업에 선언된 URL로 HTTP 요청을 보냅니다.\n다음 예에서는 비용 보고서에 관한 이메일에 ConfirmAction 버튼을 추가합니다.\n--- 탭: JSON-LD ---\n<script type=""application/ld+json"">\n{\n  ""@context"": ""http://schema.org"",\n  ""@type"": ""EmailMessage"",\n  ""potentialAction"": {\n    ""@type"": ""ConfirmAction"",\n    ""name"": ""Approve Expense"",\n    ""handler"": {\n      ""@type"": ""HttpActionHandler"",\n      ""url"": ""https://myexpenses.com/approve?expenseId=abc123""\n    }\n  },\n  ""description"": ""Approval request for John\'s $10.13 expense for office supplies""\n}\n</script>'
 'Gmail 작업\nGmail은 schema.org 마크업을 사용하여 사용자 작업을 가속화하고 사용자가 이메일에서 필요로 하는 가장 중요한 정보를 강조합니다.\nGmail은 다음과 같은 유형의 작업 및 대화형 카드를 지원합니다.\n클릭 한 번으로 실행할 수 있는 거의 모든 항목에 대한 원클릭 작업 [https://developers.google.com/workspace/gmail/markup/reference/one-click-action?hl=ko]\n더 복잡한 상호작용을 위한 Go-to Action [https://developers.google.com/workspace/gmail/markup/reference/go-to-action?hl=ko]\n항공편 양방향 카드 [https://developers.google.com/workspace/gmail/markup/reference/flight-reservation?hl=ko]\nGmail 하이라이트\nGmail은 동일한 schema.org 마크업을 사용하여 이메일 내에서 가장 중요한 정보를 강조 표시하고 사용자가 이에 따라 조치를 취할 수 있도록 합니다.\n버스 강조 표시 [https://developers.google.com/workspace/gmail/markup/reference/bus-reservation?hl=ko]\n렌터카 하이라이트 [https://developers.google.com/workspace/gmail/markup/reference/rental-car?hl=ko]\n항공편 하이라이트 [https://developers.google.com/workspace/gmail/markup/reference/flight-reservation?hl=ko]\n티켓이 있는 이벤트의 이벤트 하이라이트 [https://developers.google.com/workspace/gmail/markup/reference/event-reservation?hl=ko]\n주문 [https://developers.google.com/workspace/gmail/markup/reference/order?hl=ko] 및 소포 배송 [https://developers.google.com/workspace/gmail/markup/reference/parcel-delivery?hl=ko] 쇼핑 관련 주요 사항'
 'Source URL: https://developers.google.com/workspace/gmail/markup/getting-started'
 '이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.\nSwitch to English\n홈 [https://developers.google.com/?hl=ko]\nGoogle Workspace [https://developers.google.com/workspace?hl=ko]\nGmail [https://developers.google.com/workspace/gmail?hl=ko]\n가이드 [https://developers.google.com/workspace/gmail/api/guides?hl=ko]\n의견 보내기\n개요\nbookmark_border\n이 페이지의 내용\nschema.org로 이메일의 잠재력 활용\nGmail 작업\nGmail 하이라이트\nGmail 프로모션 탭\nGoogle Calendar\nschema.org로 이메일의 잠재력 활용\n이메일은 업무를 처리하는 데 중요한 역할을 합니다. 친구와 이벤트를 계획하거나 파리 출장을 준비할 때 이메일을 사용하여 작업을 진행할 것입니다. 사용자에게 보내는 이메일에 schema.org [http://schema.org/] 마크업을 추가하면 Google 환경 전반에서 해당 정보를 사용할 수 있으며 사용자가 항공편 체크인과 같은 빠른 작업을 쉽게 실행할 수 있습니다. Gmail, Google Calendar, Google 검색, Google 앱은 이미 이 구조화된 데이터를 사용하고 있습니다.\nSchema.org [http://schema.org/]는 Google 및 기타 회사의 공동작업으로 표준화되고 관리되는 마크업 어휘입니다. schema.org와 협력하여 Google은 삽입된 마크업을 수신하는 모든 이메일 제품에서 사용할 수 있도록 개방형 표준을 만들고 있습니다.\n앱에 이메일 마크업을 고려해야 하는 이유에 관한 동영상에서 동기 부여를 얻고 유사한 예를 확인하세요.\n참고: Google에서 사용하는 일부 스키마는 아직 schema.org [http://schema.org/]의 표준화 절차를 거치고 있으므로 향후 변경될 수 있습니다. 자세히 알아보기 [https://developers.google.com/workspace/gmail/markup/reference/schema-org-proposals?hl=ko]\nGmail 작업'
 'Source URL: https://developers.google.com/workspace/gmail/markup/actions/declaring-actions\n\n이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.\nSwitch to English\n홈 [https://developers.google.com/?hl=ko]\nGoogle Workspace [https://developers.google.com/workspace?hl=ko]\nGmail [https://developers.google.com/workspace/gmail?hl=ko]\n가이드 [https://developers.google.com/workspace/gmail/api/guides?hl=ko]\n의견 보내기\n작업 선언\nbookmark_border\n이 페이지의 내용\n바로가기 작업\n모바일 딥 링크\n인앱 액션 수\n만료되는 작업\n추가 자료\nschema.org의 작업은 구조화된 데이터에서 실행할 수 있는 동사 또는 활동을 나타냅니다. 여러 유형의 작업 [https://developers.google.com/workspace/gmail/markup/actions/actions-overview?hl=ko]이 지원되며 모두 유사한 구조화된 데이터로 정의할 수 있습니다.\n바로가기 작업\nschema.org 항목을 사용하여 콘텐츠에 마크업을 추가하는 경우 해당 항목에 이동 작업을 추가할 수 있습니다. 예를 들어 EmailMessage 항목에 ViewAction 바로가기 링크를 추가하려면 다음 예와 같이 이메일의 potentialAction 속성을 채웁니다.\n--- 탭: JSON-LD ---\n<script type=""application/ld+json"">\n{\n  ""@context"": ""http://schema.org"",\n  ""@type"": ""EmailMessage"",\n  ""potentialAction"": {\n    ""@type"": ""ViewAction"",\n    ""target"": ""https://watch-movies.com/watch?movieId=abc123"",\n    ""name"": ""Watch movie""\n  },\n  ""description"": ""Watch the \'Avengers\' movie online""\n}\n</script>'
 '--- 탭: 마이크로데이터 ---\n<div itemscope itemtype=""http://schema.org/EmailMessage"">\n  <meta itemprop=""name"" content=""Watch movie""/>\n  ... information about the movie ...\n  <div itemprop=""potentialAction"" itemscope itemtype=""http://schema.org/ViewAction"">\n    <meta itemprop=""target"" content=""https://watch-movies.com/watch?movieId=abc123""/>\n    <meta itemprop=""target"" content=""android-app://com.watchmovies.android/http/watch-movies.com/watch?movieId=abc123""/>\n    <meta itemprop=""target"" content=""ios://12345/movieapp/watch-movies.com/watch?movieId=abc123""/>\n </div>\n</div>\n사용자에게 앱이 없는 경우 작업은 사용자를 제공된 웹 URL로 안내합니다.\n인앱 액션 수\n인앱 액션은 사용자를 다른 웹사이트로 보내지 않고 Gmail 내에서 바로 처리됩니다. 인앱 작업은 이동 작업 [https://developers.google.com/workspace/gmail/markup/actions/declaring-actions?hl=ko#go-to_actions]과 같이 선언되지만 사용자 에이전트 (예: Gmail)가 인라인으로 작업을 쉽게 처리할 수 있도록 하는 추가 정보가 포함되어 있습니다.\ntarget로 작업을 선언하는 대신 적절한 구성으로 작업에 HttpActionHandler를 선언해야 합니다.\n예를 들어 사용자에게 승인, 확인, 인정을 요구하는 이메일에 확인 버튼을 추가할 수 있습니다. 사용자가 버튼을 클릭하면 Google에서 서비스로 HTTP 요청을 발행하여 확인을 기록합니다. ConfirmAction 유형은 한 번만 상호작용할 수 있습니다.\n다음 예에서는 비용 보고서에 관한 이메일에 ConfirmAction 버튼을 추가합니다.\n--- 탭: JSON-LD ---\n<script type=""application/ld+json"">\n{'
 '별칭은 계정의 서명을 관리하는 데도 사용됩니다. 이메일 서명을 변경하려면 다른 주소로 보내기 별칭에 대한 기본적인 이해가 필요합니다. 위 동영상에서는 send-as 별칭을 반복하고 사용자의 기본 이메일 주소의 서명을 수정하는 방법을 보여줍니다.\n별칭을 만들기 [https://developers.google.com/workspace/gmail/api/v1/reference/users/settings/sendAs/create?hl=ko], 나열 [https://developers.google.com/workspace/gmail/api/v1/reference/users/settings/sendAs/list?hl=ko], 가져오기 [https://developers.google.com/workspace/gmail/api/v1/reference/users/settings/sendAs/get?hl=ko], 업데이트 [https://developers.google.com/workspace/gmail/api/v1/reference/users/settings/sendAs/update?hl=ko] 또는 삭제 [https://developers.google.com/workspace/gmail/api/v1/reference/users/settings/sendAs/delete?hl=ko]하는 방법에 관한 자세한 내용은 SendAs 참조 [https://developers.google.com/workspace/gmail/api/reference/rest/v1/users.settings.sendAs?hl=ko]를 참고하세요.\n별칭 만들기 및 확인\n사용하기 전에 별칭을 만들어야 [https://developers.google.com/workspace/gmail/api/v1/reference/users/settings/sendAs/create?hl=ko] 합니다. 경우에 따라 사용자는 별칭의 소유권도 확인해야 합니다.\nGmail에서 별칭에 사용자 인증이 필요한 경우 별칭이 pending 상태로 반환됩니다. 인증 메시지가 타겟 이메일 주소로 자동 전송됩니다. 이메일 주소 소유자가 인증 절차를 완료해야 사용할 수 있습니다.\n확인이 필요하지 않은 별칭의 확인 상태는 accepted입니다.'
 ""File not found error for credentials.json\n코드 샘플을 실행할 때 credentials.json에 관한 '파일을 찾을 수 없음' 또는 '이러한 파일 없음' 오류 메시지가 표시될 수 있습니다.\n이 오류는 데스크톱 애플리케이션 사용자 인증 정보를 승인하지 않은 경우에 발생합니다. 데스크톱 애플리케이션의 사용자 인증 정보를 만드는 방법을 알아보려면 사용자 인증 정보 만들기 [https://developers.google.com/workspace/guides/create-credentials?hl=ko#desktop-app]로 이동하세요.\n사용자 인증 정보를 만든 후 다운로드한 JSON 파일이 credentials.json로 저장되었는지 확인합니다. 그런 다음 파일을 작업 디렉터리로 이동합니다.\nToken has been expired or revoked\n코드 샘플을 실행하면 '토큰이 만료되었습니다' 또는 '토큰이 취소되었습니다' 오류 메시지가 표시될 수 있습니다.\n이 오류는 Google 승인 서버의 액세스 토큰이 만료되었거나 취소된 경우 발생합니다. 가능한 원인과 해결 방법에 대한 자세한 내용은 갱신 토큰 만료 [https://developers.google.com/identity/protocols/oauth2?hl=ko#expiration]를 참고하세요.\nJavaScript 오류\n다음은 몇 가지 일반적인 JavaScript 오류입니다.\nError: origin_mismatch\n웹페이지를 제공하는 데 사용된 호스트와 포트가 Google Cloud 콘솔 프로젝트의 허용된 JavaScript 출처와 일치하지 않으면 승인 흐름 중에 이 오류가 발생합니다. 승인된 JavaScript 원본을 설정하고 브라우저의 URL이 원본 URL과 일치하는지 확인합니다.\nidpiframe_initialization_failed: Failed to read the 'localStorage' property from 'Window'""
 '다음은 이메일 마케팅 담당자와 개발자가 자주 묻는 질문 목록입니다.\n이러한 새로운 기능을 사용하는 데 비용이 드나요?\n아니요. 번들의 이메일 메시지와 핵심 내용을 미리보기는 무료 이메일용이므로 무료입니다. 일반 사용자 (무료) 버전의 Gmail에서 표시되는 유일한 유료 방법은 Gmail 광고 [https://support.google.com/google-ads/answer/7019460?hl=ko]입니다. Google Workspace Gmail에는 광고가 게재되지 않습니다.\n주석을 추가하면 이메일이 다른 탭으로 이동하나요?\n주석은 Gmail 탭 분류기에 영향을 미치지 않습니다.\n프로모션 탭이 아닌 다른 탭에 도착한 이메일에 주석을 달면 어떻게 되나요?\n이 기능은 프로모션 탭에만 표시됩니다.\n이메일에 이러한 기능이 모두 포함되어야 하나요?\n아니요. 모든 기능은 선택사항입니다. 이메일의 가시성을 높이려면 로고 및 단일 이미지 기능을 사용하는 것이 좋습니다.\n특가 배지의 색상을 변경할 수 있나요?\n아니요. 혜택 배지는 녹색이며 색상을 변경할 수 없습니다. 모든 사용자를 위해 최상의 사용자 환경을 제공하기 위해 특가 배지의 색상, 크기, 모양은 맞춤설정할 수 없습니다. 기능의 콘텐츠만 맞춤설정할 수 있습니다 (권장사항 [https://developers.google.com/workspace/gmail/promotab/best-practices?hl=ko] 참고).\n내 마케팅 이메일은 할인이나 할인 기반이 아닌데, 이 기능은 할인에만 적용되나요?\n아니요, 모든 마케팅 이메일에 주석을 달 수 있으며 기능을 자유롭게 조합할 수 있습니다. 예를 들어 이메일이 할인이나 할인에 관한 것이 아니라 제품 프로모션에 관한 것이더라도 로고와 이미지를 사용하여 이메일에 주석을 달 수 있습니다.\n이메일이 번들로 표시되는데 내가 주석을 추가하지 않은 이유는 무엇인가요?\n주석이 없어도 이메일이 번들에 표시될 수 있습니다. Gmail에서는 주석이 있는지 여부와 관계없이 이전 사용자 참여를 기반으로 이메일을 추천합니다.\n업무 범위는 무엇인가요? 각 이메일에 수동으로 추가해야 하나요?\n주석은 확장 가능한 방식으로 생성되었습니다. 이메일 템플릿/HTML에 추가하고 CRM 병합을 사용하는 등 이메일 본문과 동일한 방식으로 필드를 채우세요.\n동적 스크립트를 사용하여 기능을 채울 수 있나요?'
 '이 페이지는 Cloud Translation API [https://cloud.google.com/translate/?hl=ko]를 통해 번역되었습니다.\nSwitch to English\n홈 [https://developers.google.com/?hl=ko]\nGoogle Workspace [https://developers.google.com/workspace?hl=ko]\nGmail [https://developers.google.com/workspace/gmail?hl=ko]\n가이드 [https://developers.google.com/workspace/gmail/api/guides?hl=ko]\n의견 보내기\n라벨 관리\nbookmark_border\n이 페이지의 내용\n라벨 유형\n메일 및 대화목록의 라벨 관리하기\n스레드에 라벨 추가 또는 삭제하기\n메일에 라벨 추가 또는 삭제\n라벨을 사용하면 Gmail에서 메일과 대화목록을 태그하고 정리하고 분류할 수 있습니다. 라벨은 메일 및 대화목록과 다대다 관계를 갖습니다. 단일 메일 또는 대화목록에 여러 라벨을 적용할 수 있고 여러 메일 또는 대화목록에 단일 라벨을 적용할 수 있습니다.\n라벨을 만들기 [https://developers.google.com/workspace/gmail/api/v1/reference/users/labels/create?hl=ko], 가져오기 [https://developers.google.com/workspace/gmail/api/v1/reference/users/labels/get?hl=ko], 나열하기 [https://developers.google.com/workspace/gmail/api/v1/reference/users/labels/list?hl=ko], 업데이트하기 [https://developers.google.com/workspace/gmail/api/v1/reference/users/labels/update?hl=ko] 또는 삭제하기 [https://developers.google.com/workspace/gmail/api/v1/reference/users/labels/delete?hl=ko]하는 방법에 관한 자세한 내용은 라벨 참조 [https://developers.google.com/workspace/gmail/api/v1/reference/users/labels?hl=ko]를 참고하세요.']","Gmail 작업을 선언하는 방법에 대한 자세한 내용은 ""작업 선언(Declaring Actions)"" 문서를 참고하시면 됩니다. 해당 문서에서는 schema.org를 사용하여 Gmail에서 작업을 선언하는 방법과 관련된 다양한 정보를 제공합니다.",작업 선언 방법에 대한 자세한 내용은 작업 선언(Declaring Actions) 문서를 참고하세요.
